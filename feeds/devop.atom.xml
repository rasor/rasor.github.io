<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Rasor's Tech Blog - DevOp</title><link href="https://rasor.github.io/" rel="alternate"></link><link href="https://rasor.github.io/feeds/devop.atom.xml" rel="self"></link><id>https://rasor.github.io/</id><updated>2017-10-08T15:00:00+02:00</updated><entry><title>Using NVM for Windows and Yarn</title><link href="https://rasor.github.io/using-nvm-for-windows-and-yarn.html" rel="alternate"></link><published>2017-10-08T11:00:00+02:00</published><updated>2017-10-08T15:00:00+02:00</updated><author><name>rasor</name></author><id>tag:rasor.github.io,2017-10-08:/using-nvm-for-windows-and-yarn.html</id><summary type="html">&lt;p&gt;Microsoft created Taco (Tools for Apache Cordova) - a set of Node.js tools with specific versions. It was to be used from within Visual Studio, so they knew what was global in their Cordova apps.
I blogged about it &lt;a href="https://rasor.wordpress.com/2017/03/13/ionic-in-visual-studio-2017/" target="_blank"&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;With Nvm For Windows you can stay in the shell …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Microsoft created Taco (Tools for Apache Cordova) - a set of Node.js tools with specific versions. It was to be used from within Visual Studio, so they knew what was global in their Cordova apps.
I blogged about it &lt;a href="https://rasor.wordpress.com/2017/03/13/ionic-in-visual-studio-2017/" target="_blank"&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;With Nvm For Windows you can stay in the shell and select yourself what you want to include in your set.&lt;/p&gt;
&lt;p&gt;I need it to be able to switch between Node v6 and Node v8.
In my usecase there is v6 installed on a host (Azure), so I also need v6 locally for debugging.
And when not debugging for prod I can use newest v8.&lt;/p&gt;
&lt;h2&gt;Using &lt;a href="https://github.com/coreybutler/nvm-windows" target="_blank"&gt;nvm4windows&lt;/a&gt;&lt;/h2&gt;
&lt;h3&gt;Before you install nvm4windows you need to&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;uninstall node&lt;/li&gt;
&lt;li&gt;Delete folder C:\Program Files\nodejs&lt;/li&gt;
&lt;li&gt;Delete folder C:\Users\username\AppData\Roaming\npm&lt;/li&gt;
&lt;li&gt;Delete folder C:\Users\username\AppData\Roaming\npm-cache&lt;/li&gt;
&lt;li&gt;Remove envir var %NODE_ENV%&lt;/li&gt;
&lt;li&gt;Remove part of %path% C:\Users\username\AppData\Roaming\npm&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Download, install and use &lt;a href="https://github.com/coreybutler/nvm-windows/releases" target="_blank"&gt;nvm4windows&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;nvm list&lt;/code&gt; # shows nothing installed&lt;/li&gt;
&lt;li&gt;goto &lt;a href="https://nodejs.org/en/download/" target="_blank"&gt;Node downloads&lt;/a&gt; and &lt;ul&gt;
&lt;li&gt;checkout LTS version - currently 6.11.4 (includes npm 3.10.10)&lt;/li&gt;
&lt;li&gt;checkout current version - currently 8.6.0 (includes npm 5.3.0)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Install the two versions:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;nvm install &lt;span class="m"&gt;6&lt;/span&gt;.11.4 &lt;span class="c1"&gt;# Installs into \nvm\v6.11.4&lt;/span&gt;
nvm install &lt;span class="m"&gt;8&lt;/span&gt;.6.0 &lt;span class="c1"&gt;# Installs into \nvm\v8.6.0&lt;/span&gt;
nvm list

&lt;span class="c1"&gt;#    8.6.0&lt;/span&gt;
&lt;span class="c1"&gt;#    6.11.4&lt;/span&gt;

nvm use &lt;span class="m"&gt;8&lt;/span&gt;.6.0 &lt;span class="c1"&gt;# Creates a shortcut \nodejs\ pointing to the above \vx.x.x\ folder&lt;/span&gt;
&lt;span class="c1"&gt;# Now using node v8.6.0 (64-bit)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The shortcut \nodejs\ is also saved as %NVM_SYMLINK% and saved to %path%&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;nvm list

&lt;span class="c1"&gt;#  * 8.6.0 (Currently using 64-bit executable)&lt;/span&gt;
&lt;span class="c1"&gt;#    6.11.4&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You need to &lt;code&gt;npm install -g&lt;/code&gt; (globally install js libs into each of the nodejs versions you are using) e.g. &lt;code&gt;npm install -g cordova&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Note&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Cli tools (e.g. cordova) are installed in &lt;code&gt;%ProgramFiles%\nodejs&lt;/code&gt;, which might not be the path you chose for node.&lt;br&gt;
If not you need to add &lt;code&gt;%ProgramFiles%\nodejs&lt;/code&gt; to &lt;code&gt;%path%&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;node_modules are scattered around the disk(s)&lt;ul&gt;
&lt;li&gt;&lt;code&gt;C:\Users\username\AppData\Roaming\npm-cache&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Nvm path &lt;code&gt;%NVM_HOME%\vx.x.x\node_modules\npm\node_modules&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Nvm Nodejs paths &lt;code&gt;%NVM_SYMLINK%\node_modules&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Normal Nodejs paths &lt;code&gt;%ProgramFiles%\nodejs\node_modules&lt;/code&gt; - CLI's installed with -g&lt;/li&gt;
&lt;li&gt;and locally in project subfolder &lt;code&gt;\node_modules&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Well it seems like installation of nvm must be done to the default paths, since in the setup on my PC -g installs still ends up in a common place. I'll have to test that on another occation.&lt;/p&gt;
&lt;p&gt;You might also need to set environment variable (for Express?):
&lt;code&gt;NODE_ENV=%NVM_SYMLINK%&lt;/code&gt; and &lt;code&gt;refreshenv&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;Using Yarn&lt;/h2&gt;
&lt;p&gt;The npm v5 coming with node v8 has a package.lock file - yes idea taken from Yarn. Meaning we don't need Yarn anymore - unless you need other features from Yarn.&lt;br&gt;
For npm v3 (node v6) we often need yarn.lock.&lt;/p&gt;
&lt;p&gt;We need the lock file to keep track of all exact versions of dependencies in a project.&lt;/p&gt;
&lt;h3&gt;Install Yarn&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://yarnpkg.com/en/docs/install" target="_blank"&gt;Download Yarn&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Install &lt;a href="https://chocolatey.org/install" target="_blank"&gt;Chokolatey&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Install Yarn &lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;nvm use &lt;span class="m"&gt;6&lt;/span&gt;.11.4 &lt;span class="c1"&gt;# yarn checks for npm&lt;/span&gt;
choco install yarn
yarn -v
&lt;span class="c1"&gt;#1.1.0&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Using Yarn&lt;/h3&gt;
&lt;h4&gt;When starting from empty project&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;yarn init &lt;span class="c1"&gt;# create the yarn.lock file and a package.json&lt;/span&gt;
yarn add &lt;span class="o"&gt;[&lt;/span&gt;package&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="c1"&gt;# same as npm -install -save [package]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;When starting from a working npm project&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;yarn import &lt;span class="c1"&gt;# create the yarn.lock file from node_modules folder&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If it fails with &lt;code&gt;error An unexpected error occurred: "should have a resolved reference"&lt;/code&gt;&lt;br&gt;
then it might work to just issue &lt;code&gt;yarn&lt;/code&gt;.&lt;/p&gt;
&lt;h4&gt;When starting from a cloned npm project having yarn.lock&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git clone &lt;span class="s2"&gt;&amp;quot;https://github.com/.....&amp;quot;&lt;/span&gt;
yarn install &lt;span class="c1"&gt;# same as npm install, but using yarn.lock: download modules&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;hr&gt;
&lt;h2&gt;Links&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://yarnpkg.com/en/docs/usage" target="_blank"&gt;Yarn usage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://yarnpkg.com/en/docs/migrating-from-npm" target="_blank"&gt;Npm vs. Yarn&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://yarnpkg.com/en/docs/cli/" target="_blank"&gt;Yarn commands&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The End&lt;/p&gt;</content><category term="#nvm"></category><category term="#node"></category><category term="#npm"></category><category term="#yarn"></category></entry><entry><title>Using Pelican Themes</title><link href="https://rasor.github.io/using-pelican-themes.html" rel="alternate"></link><published>2017-09-30T11:00:00+02:00</published><updated>2017-09-30T15:00:00+02:00</updated><author><name>rasor</name></author><id>tag:rasor.github.io,2017-09-30:/using-pelican-themes.html</id><summary type="html">&lt;p&gt;This blog is part of a serie &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="https://rasor.github.io/using-pelican-blog-on-github-pages.html"&gt;Using Pelican blog on Github pages&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rasor.github.io/using-pelican-themes.html"&gt;Using Pelican Themes&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;Installation - Plugins and Themes&lt;/h2&gt;
&lt;p&gt;Plugins and Themes are two seperate repos being used by some themes.
To be able to reach them from &lt;code&gt;pelicanconf.py&lt;/code&gt; is best to clone them to place with an …&lt;/p&gt;</summary><content type="html">&lt;p&gt;This blog is part of a serie &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="https://rasor.github.io/using-pelican-blog-on-github-pages.html"&gt;Using Pelican blog on Github pages&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rasor.github.io/using-pelican-themes.html"&gt;Using Pelican Themes&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;Installation - Plugins and Themes&lt;/h2&gt;
&lt;p&gt;Plugins and Themes are two seperate repos being used by some themes.
To be able to reach them from &lt;code&gt;pelicanconf.py&lt;/code&gt; is best to clone them to place with an absolute path.&lt;/p&gt;
&lt;p&gt;Since preference will differ I will put part of the path in system-wide environment variables&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;SystemPropertiesAdvanced.exe&lt;/code&gt;&lt;ul&gt;
&lt;li&gt;Environment Variables – System vars – New&lt;/li&gt;
&lt;li&gt;Name: &lt;code&gt;PYTHON_HOME&lt;/code&gt;, Value: &lt;code&gt;C:\ProgramFilesExtra\Python\Python36-32&lt;/code&gt;(Use the path to Python installed in top of previous blog)&lt;/li&gt;
&lt;li&gt;Press OK until all dialogs are closed, so you are sure the variable is stored&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Start new cmd promt (this will load the new environment variable)&lt;/li&gt;
&lt;li&gt;Create a folder for the cloned repos:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;c:
&lt;span class="nb"&gt;cd&lt;/span&gt; %PYTHON_HOME%
md pelican-addon-clones
&lt;span class="nb"&gt;cd&lt;/span&gt; pelican-addon-clones
&lt;span class="c1"&gt;# Download plugins and themes&lt;/span&gt;
git clone --recursive https://github.com/getpelican/pelican-plugins
git clone --recursive https://github.com/getpelican/pelican-themes
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The above repo pelican-themes in some cases is not linked to the latest version of a theme.
So for those themes you can clone them into another folder called pelican-themes-extra.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;c:
&lt;span class="nb"&gt;cd&lt;/span&gt; %PYTHON_HOME%&lt;span class="se"&gt;\p&lt;/span&gt;elican-addon-clones
md pelican-themes-extra
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;Testing Themes&lt;/h1&gt;
&lt;h2&gt;View installed themes and themes you can install&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Which themes are ready to use by Pelican? - By default Pelican is running theme &amp;quot;notmyidea&amp;quot;&lt;/span&gt;
&amp;gt; pelican-themes -v -l
c:&lt;span class="se"&gt;\p&lt;/span&gt;rogramfilesextra&lt;span class="se"&gt;\p&lt;/span&gt;ython&lt;span class="se"&gt;\p&lt;/span&gt;ython36-32&lt;span class="se"&gt;\l&lt;/span&gt;ib&lt;span class="se"&gt;\s&lt;/span&gt;ite-packages&lt;span class="se"&gt;\p&lt;/span&gt;elican&lt;span class="se"&gt;\t&lt;/span&gt;hemes&lt;span class="se"&gt;\n&lt;/span&gt;otmyidea
c:&lt;span class="se"&gt;\p&lt;/span&gt;rogramfilesextra&lt;span class="se"&gt;\p&lt;/span&gt;ython&lt;span class="se"&gt;\p&lt;/span&gt;ython36-32&lt;span class="se"&gt;\l&lt;/span&gt;ib&lt;span class="se"&gt;\s&lt;/span&gt;ite-packages&lt;span class="se"&gt;\p&lt;/span&gt;elican&lt;span class="se"&gt;\t&lt;/span&gt;hemes&lt;span class="se"&gt;\s&lt;/span&gt;imple
&lt;span class="c1"&gt;# Which themes are downloaded and ready to install?&lt;/span&gt;
&amp;gt; start %PYTHON_HOME%&lt;span class="se"&gt;\p&lt;/span&gt;elican-addon-clones&lt;span class="se"&gt;\p&lt;/span&gt;elican-themes&lt;span class="se"&gt;\&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Command &lt;code&gt;start&lt;/code&gt; opens an explorer, so you can go into the folders and see if there are any images showing how the theme looks like.
Or you can checkout &lt;a href="http://www.pelicanthemes.com/" target="_blank"&gt;http://www.pelicanthemes.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I am at time of writing running with theme Flex.&lt;/p&gt;
&lt;p&gt;Ref: Command &lt;a href="http://docs.getpelican.com/en/stable/pelican-themes.html"&gt;pelican-themes&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Switch to Theme "Flex"&lt;/h2&gt;
&lt;h3&gt;Installation&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/alexandrevicenzi/Flex" target="_blank"&gt;Online Instruction&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Flex is one of the themes that is not latest in pelican-themes repo, so I want to download latest from its own repo.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;c:
&lt;span class="nb"&gt;cd&lt;/span&gt; %PYTHON_HOME%&lt;span class="se"&gt;\p&lt;/span&gt;elican-addon-clones&lt;span class="se"&gt;\p&lt;/span&gt;elican-themes-extra
&lt;span class="c1"&gt;# Download Flex&lt;/span&gt;
git clone https://github.com/alexandrevicenzi/Flex
&lt;span class="c1"&gt;# Install Flex into Pelican&lt;/span&gt;
pelican-themes --install C:&lt;span class="se"&gt;\P&lt;/span&gt;rogramFilesExtra&lt;span class="se"&gt;\P&lt;/span&gt;ython&lt;span class="se"&gt;\P&lt;/span&gt;ython36-32&lt;span class="se"&gt;\p&lt;/span&gt;elican-addon-clones&lt;span class="se"&gt;\p&lt;/span&gt;elican-themes-extra&lt;span class="se"&gt;\F&lt;/span&gt;lex --verbose
&lt;span class="c1"&gt;# pelican-themes --remove Flex&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Add to &lt;a href="https://github.com/rasor/rasor.github.io/blob/pelican/pelicanconf.py" target="_blank"&gt;&lt;code&gt;pelicanconf.py&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;THEME&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Flex&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;STATIC_PATHS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;img&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;static&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;FAVICON&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;img/favicon.ico&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;CUSTOM_CSS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;static/custom.css&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Notice: If you don't want to add extra CSS, then &lt;code&gt;THEME&lt;/code&gt; is all you have to set&lt;/li&gt;
&lt;li&gt;In the CUSTOM_CSS I am just adding a shadow to images&lt;/li&gt;
&lt;li&gt;In \content\static\ create a file called &lt;a href="https://github.com/rasor/rasor.github.io/blob/pelican/content/static/custom.css" target="_blank"&gt;&lt;code&gt;custom.css&lt;/code&gt;&lt;/a&gt; with the content:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nt"&gt;img&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;box-shadow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="kt"&gt;px&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="kt"&gt;px&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="kt"&gt;px&lt;/span&gt; &lt;span class="kc"&gt;grey&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;More configurations you can add: &lt;a href="https://github.com/alexandrevicenzi/Flex/wiki/Configuration-example" target="_blank"&gt;https://github.com/alexandrevicenzi/Flex/wiki/Configuration-example&lt;/a&gt;. You probably will want many of them.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Verdict&lt;/h3&gt;
&lt;h4&gt;Pros&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Nice looking&lt;/li&gt;
&lt;li&gt;Images are shown in its full width - and resized to screen width&lt;/li&gt;
&lt;li&gt;Syntax highligting is good&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Cons&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Modified/Updated date is not shown&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Switch to Theme "HTML5 Up striped"&lt;/h2&gt;
&lt;h3&gt;Installation&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/getpelican/pelican-themes/tree/master/pelican-striped-html5up" target="_blank"&gt;Online Instruction&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;c:
&lt;span class="c1"&gt;# Install striped-html5up into Pelican&lt;/span&gt;
pelican-themes --install C:&lt;span class="se"&gt;\P&lt;/span&gt;rogramFilesExtra&lt;span class="se"&gt;\P&lt;/span&gt;ython&lt;span class="se"&gt;\P&lt;/span&gt;ython36-32&lt;span class="se"&gt;\p&lt;/span&gt;elican-addon-clones&lt;span class="se"&gt;\p&lt;/span&gt;elican-themes&lt;span class="se"&gt;\p&lt;/span&gt;elican-striped-html5up --verbose
&lt;span class="c1"&gt;#pelican-themes --remove pelican-striped-html5up&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Plugin &lt;code&gt;neighbors&lt;/code&gt; is needed by the theme&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Add to &lt;code&gt;pythonconf.py&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;PLUGIN_PATHS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;C:\ProgramFilesExtra\Python\Python36-32\pelican-addon-clones\pelican-plugins&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;PLUGINS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;neighbors&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;THEME&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;pelican-striped-html5up&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Verdict&lt;/h3&gt;
&lt;h4&gt;Pros&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Nice looking&lt;/li&gt;
&lt;li&gt;Images are shown in its full width&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Cons&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;It does not have any syntax coding and block around code&lt;/li&gt;
&lt;li&gt;It is missing links to categories and tags links&lt;/li&gt;
&lt;li&gt;Links in the left black sidemenu are not hooked to content from publishconf or other&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;Extending Themes&lt;/h1&gt;
&lt;p&gt;I extended theme "Flex" so it shows Modified date.&lt;/p&gt;
&lt;p&gt;The workflow for updating a theme can be:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Edit the theme in its local repo&lt;/li&gt;
&lt;li&gt;Remove the theme from Pelican&lt;/li&gt;
&lt;li&gt;Re-intall the theme to Pelican&lt;/li&gt;
&lt;li&gt;Build your output and see the change&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;1. Edit Theme&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Goto the root of your theme folder and open the theme in your favorite editor. In this case I edit Flex in VS Code&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;c:
&lt;span class="nb"&gt;cd&lt;/span&gt; %PYHON_HOME%&lt;span class="se"&gt;\p&lt;/span&gt;elican-addon-clones&lt;span class="se"&gt;\p&lt;/span&gt;elican-themes-extra&lt;span class="se"&gt;\F&lt;/span&gt;lex
&lt;span class="c1"&gt;# start VS Code&lt;/span&gt;
code .
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;On each blog post I want to add the &lt;code&gt;Modified&lt;/code&gt; field below the publish date. Add to &lt;a href="https://github.com/alexandrevicenzi/Flex/blob/master/templates/article.html" target="_blank"&gt;&lt;code&gt;templates\article.html&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;      &lt;span class="c"&gt;&amp;lt;!-- Inside p-tag contining when=article.locale_date --&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;br&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      {% if article.modified %}
        Updated: {{ article.modified |strftime(DEFAULT_DATE_FORMAT) }}
      {% endif %}
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Before you re-install the theme you should also goto your Pelican project and make sure you have &lt;code&gt;DEFAULT_DATE_FORMAT&lt;/code&gt; set to the same format as &lt;code&gt;locale_date&lt;/code&gt;. In &lt;code&gt;pelicanconf.py&lt;/code&gt; you could do it like this&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;DEFAULT_LANG&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;en&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;DEFAULT_DATE_FORMAT&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;%B &lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s1"&gt;, %Y&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;DATE_FORMATS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;en&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;DEFAULT_DATE_FORMAT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;2. Remove Theme from Pelican&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Easiest way to remove a theme from Pelican is to delete the folder where it is installed into&lt;/span&gt;
start %PYTHON_HOME%&lt;span class="se"&gt;\l&lt;/span&gt;ib&lt;span class="se"&gt;\s&lt;/span&gt;ite-packages&lt;span class="se"&gt;\p&lt;/span&gt;elican&lt;span class="se"&gt;\t&lt;/span&gt;hemes
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;3. Install Theme to Pelican&lt;/h3&gt;
&lt;p&gt;See "Switch to Theme" above.&lt;/p&gt;
&lt;h3&gt;4. Build and see output&lt;/h3&gt;
&lt;p&gt;See "Day to day Workflow" in &lt;a href="https://rasor.github.io/using-pelican-blog-on-github-pages.html" target="_blank"&gt;previous&lt;/a&gt; blog.&lt;/p&gt;
&lt;h1&gt;Links&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.pelicanthemes.com/" target="_blank"&gt;http://www.pelicanthemes.com/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/getpelican/pelican-themes" target="_blank"&gt;https://github.com/getpelican/pelican-themes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://docs.getpelican.com/en/stable/pelican-themes.html" target="_blank"&gt;http://docs.getpelican.com/en/stable/pelican-themes.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://media.readthedocs.org/css/sphinx_rtd_theme.css" target="_blank"&gt;https://media.readthedocs.org/css/sphinx_rtd_theme.css&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://pygments.org/languages/" target="_blank"&gt;http://pygments.org/languages/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/getpelican/pelican-plugins" target="_blank"&gt;https://github.com/getpelican/pelican-plugins&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.fullstackpython.com/blog/generating-static-websites-pelican-jinja2-markdown.html" target="_blank"&gt;https://www.fullstackpython.com/blog/generating-static-websites-pelican-jinja2-markdown.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Some Pelican Themes I looked at&lt;ul&gt;
&lt;li&gt;Days &lt;a href="https://github.com/getpelican/pelican-themes/tree/master/pelican-bootstrap3" target="_blank"&gt;https://github.com/getpelican/pelican-themes/tree/master/pelican-bootstrap3&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;6M &lt;a href="https://github.com/getpelican/pelican-themes/tree/master/pelican-striped-html5up" target="_blank"&gt;https://github.com/getpelican/pelican-themes/tree/master/pelican-striped-html5up&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;10M &lt;a href="https://github.com/alexandrevicenzi/Flex/tree/5bc235cf579cb03bcc8f54b6029ff74493a0cb44" target="_blank"&gt;https://github.com/alexandrevicenzi/Flex/tree/5bc235cf579cb03bcc8f54b6029ff74493a0cb44&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2Y &lt;a href="https://github.com/Parbhat/pelican-blue/tree/1dda054242f9267f4bd49891b022ac41c9ecfbe8" target="_blank"&gt;https://github.com/Parbhat/pelican-blue/tree/1dda054242f9267f4bd49891b022ac41c9ecfbe8&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2Y &lt;a href="https://github.com/jody-frankowski/blue-penguin/tree/c5e23e7753367b5beacce87b732cd1567c4818f9" target="_blank"&gt;https://github.com/jody-frankowski/blue-penguin/tree/c5e23e7753367b5beacce87b732cd1567c4818f9&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;3Y &lt;a href="https://github.com/nasskach/pelican-blueidea/tree/8f11c0e3b4b8e9ef45d1243b0175db91b7b42ba8" target="_blank"&gt;https://github.com/nasskach/pelican-blueidea/tree/8f11c0e3b4b8e9ef45d1243b0175db91b7b42ba8&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Images &lt;a href="https://unsplash.com/" target="_blank"&gt;https://unsplash.com/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The End&lt;/p&gt;</content><category term="#blog"></category><category term="#pelican"></category><category term="#themes"></category><category term="#cms"></category><category term="#install"></category></entry><entry><title>Using Pelican blog on Github pages</title><link href="https://rasor.github.io/using-pelican-blog-on-github-pages.html" rel="alternate"></link><published>2017-09-23T20:20:00+02:00</published><updated>2017-10-03T20:00:00+02:00</updated><author><name>rasor</name></author><id>tag:rasor.github.io,2017-09-23:/using-pelican-blog-on-github-pages.html</id><summary type="html">&lt;p&gt;This blog is part of a serie &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="https://rasor.github.io/using-pelican-blog-on-github-pages.html"&gt;Using Pelican blog on Github pages&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rasor.github.io/using-pelican-themes.html"&gt;Using Pelican Themes&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I had some reasons for moving a blog from Wordpress to GitHubPages. You can read about reason, pro and cons &lt;a href="https://rasor.github.io/welcome-to-my-pelican-blog-on-github-pages.html" target="_blank"&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;In this blog I setup a &lt;a href="http://docs.getpelican.com/en/stable/quickstart.html" target="_blank"&gt;Pelican blog site&lt;/a&gt; from Windows and host …&lt;/p&gt;</summary><content type="html">&lt;p&gt;This blog is part of a serie &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="https://rasor.github.io/using-pelican-blog-on-github-pages.html"&gt;Using Pelican blog on Github pages&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rasor.github.io/using-pelican-themes.html"&gt;Using Pelican Themes&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I had some reasons for moving a blog from Wordpress to GitHubPages. You can read about reason, pro and cons &lt;a href="https://rasor.github.io/welcome-to-my-pelican-blog-on-github-pages.html" target="_blank"&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;In this blog I setup a &lt;a href="http://docs.getpelican.com/en/stable/quickstart.html" target="_blank"&gt;Pelican blog site&lt;/a&gt; from Windows and host it on &lt;a href="https://pages.github.com/" target="_blank"&gt;GitHub Pages&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;HowTo&lt;/h2&gt;
&lt;h3&gt;Installation - Prerequisites&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Install &lt;a href="https://www.python.org/downloads/" target="_blank"&gt;Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Create an account at &lt;a href="https://github.com"&gt;https://github.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;On Windows: Install &lt;a href="https://git-scm.com/download/win" target="_blank"&gt;Git for Windows&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Installation - Pelican&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;As admin:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;pip install pelican markdown&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Create a folder for the Pelican source&lt;ul&gt;
&lt;li&gt;&lt;code&gt;MD username.github.io&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;CD username.github.io&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Create a pelican site following &lt;a href="http://docs.getpelican.com/en/stable/quickstart.html"&gt;http://docs.getpelican.com/en/stable/quickstart.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pelican-quickstart&lt;/code&gt;&lt;ul&gt;
&lt;li&gt;Do you want to specify URL prefix? Answer https://username.github.io&lt;/li&gt;
&lt;li&gt;Do you want to upload using xxx? Answer N untill the xxx = GitHub Pages&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Create some content&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Create a blog e.g &lt;code&gt;~/content/yourcategoryno1/myfirstblog.md&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Preview content&lt;ul&gt;
&lt;li&gt;&lt;code&gt;pelican content&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;&lt;code&gt;cd output&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;python -m pelican.server&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Browse to  &lt;a href="http://localhost:8000/"&gt;http://localhost:8000/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;On Windows - in root create a file called &lt;a href="https://github.com/rasor/rasor.github.io/blob/pelican/serve.bat" target="_blank"&gt;serve.bat&lt;/a&gt; with the content:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pelican content
&lt;span class="nb"&gt;cd&lt;/span&gt; output
start &lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;http://localhost:8000/&amp;quot;&lt;/span&gt;
python -m pelican.server
REM Ctrl-C to quit
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;... then you can pre-view your content with &lt;code&gt;.\serve&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Images&lt;ul&gt;
&lt;li&gt;In &lt;code&gt;pelicanconf.py&lt;/code&gt; add line &lt;code&gt;STATIC_PATHS = ['img', 'pdf']&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Create an image e.g &lt;code&gt;~/content/img/hello.png&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Link to the file with
&lt;code&gt;![picture alt](img/hello.png "Mickey Mouse")&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Links&lt;ul&gt;
&lt;li&gt;External: &lt;code&gt;[link desc](https://blog.getpelican.com/){:target="_blank"}&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Internal: &lt;code&gt;[link desc]({filename}/yourcategoryno1/myfirstblog.md){:target="_blank"}&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Optionally edit more settings in &lt;code&gt;pelicanconf.py&lt;/code&gt; - see &lt;a href="http://docs.getpelican.com/en/3.7.1/settings.html"&gt;http://docs.getpelican.com/en/3.7.1/settings.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;add a &lt;code&gt;favicon.ico&lt;/code&gt; to root&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Prepare GIT as VersionControlSystem&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Fetch &lt;code&gt;.gitignore&lt;/code&gt;from &lt;a href="https://github.com/getpelican/pelican-blog/blob/master/.gitignore"&gt;https://github.com/getpelican/pelican-blog/blob/master/.gitignore&lt;/a&gt; - save it to root&lt;/li&gt;
&lt;li&gt;Create a &lt;code&gt;~/README.md&lt;/code&gt; - just for the source branch&lt;/li&gt;
&lt;li&gt;Install publish tool&lt;ul&gt;
&lt;li&gt;&lt;code&gt;pip install ghp-import&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Create local git repo&lt;ul&gt;
&lt;li&gt;&lt;code&gt;git init&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Create a remote repo via github.com for your github page build in GitHub. Call it &lt;code&gt;username.github.io&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Connect to repo and print remote repo&lt;ul&gt;
&lt;li&gt;&lt;code&gt;git remote add origin https://github.com/username/username.github.io.git&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git remote -v&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Create new branch for the pelican source&lt;ul&gt;
&lt;li&gt;&lt;code&gt;git checkout -b pelican&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Deploy you blog&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;(Foreach) Commit source&lt;ul&gt;
&lt;li&gt;&lt;code&gt;git add .&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git commit -a -m "Initial commit"&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git push -u origin pelican&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;(Foreach) &lt;a href="http://docs.getpelican.com/en/3.7.1/tips.html#publishing-to-github" target="_blank"&gt;Publish&lt;/a&gt; build to master then publish&lt;ul&gt;
&lt;li&gt;&lt;code&gt;pelican content -o output -s pelicanconf.py&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ghp-import output -r origin -b master&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git push origin master&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git checkout pelican&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;On Windows - in root create a file called &lt;a href="https://github.com/rasor/rasor.github.io/blob/pelican/publish.bat" target="_blank"&gt;publish.bat&lt;/a&gt; with the content:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git add .
git commit -a -m %1
git push -u origin pelican
pelican content -o output -s pelicanconf.py
ghp-import output -r origin -b master
git push origin master
git checkout pelican
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;... then you can publish by &lt;code&gt;.\publish "some comment"&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Editor&lt;/h2&gt;
&lt;p&gt;I'm using Visual Studio Code, that has a nice Markdown preview - probably a plugin.
But you could use NotePad for that matter.&lt;/p&gt;
&lt;p&gt;&lt;img alt="picture alt" src="img/2017-09-23-PelicanInVSCode.PNG" title="Pelican In VS Code"&gt;&lt;/p&gt;
&lt;h2&gt;Day to day Workflow&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Open VS Code&lt;/li&gt;
&lt;li&gt;Open VS Code terminal 1 - T1&lt;ul&gt;
&lt;li&gt;&lt;code&gt;.\serve&lt;/code&gt; &lt;a href="https://github.com/rasor/rasor.github.io/blob/pelican/serve.bat"&gt;#code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;A browser opens and navigates to http://localhost:8000&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Add a new &lt;code&gt;.md&lt;/code&gt; file in \content\ and add some content&lt;/li&gt;
&lt;li&gt;Open VS Code terminal 2 - T2&lt;ul&gt;
&lt;li&gt;&lt;code&gt;.\build&lt;/code&gt; &lt;a href="https://github.com/rasor/rasor.github.io/blob/pelican/build.bat"&gt;#code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;F5 - refresh browser to see the new content&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.\publish "file new.md published"&lt;/code&gt; &lt;a href="https://github.com/rasor/rasor.github.io/blob/pelican/publish.bat"&gt;#code&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Browse to https://username.github.io&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Tip: If I don't want to publish a file I rename it to &lt;code&gt;.txt&lt;/code&gt; - then it won't be visible before I rename it back to &lt;code&gt;.md&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Continue in &lt;a href="https://rasor.github.io/using-pelican-themes.html" target="_blank"&gt;Using Pelican Themes&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3&gt;Links&lt;/h3&gt;
&lt;h4&gt;GitHub pages&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://pages.github.com/" target="_blank"&gt;Create a repo for your github page site&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Pelican&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://docs.getpelican.com/en/stable/publish.html" target="_blank"&gt;http://docs.getpelican.com/en/stable/publish.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://docs.getpelican.com/en/3.6.3/content.html#linking-to-static-files" target="_blank"&gt;http://docs.getpelican.com/en/3.6.3/content.html#linking-to-static-files&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://docs.getpelican.com/en/stable/faq.html" target="_blank"&gt;http://docs.getpelican.com/en/stable/faq.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.getpelican.com/" target="_blank"&gt;https://blog.getpelican.com/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://help.github.com/articles/about-supported-custom-domains/" target="_blank"&gt;https://help.github.com/articles/about-supported-custom-domains/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Another &lt;a href="https://www.fullstackpython.com/blog/generating-static-websites-pelican-jinja2-markdown.html" target="_blank"&gt;install Pelican blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Pelican &lt;a href="https://github.com/getpelican/pelican/wiki/Tutorials" target="_blank"&gt;tutorial for deployment&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/getpelican" target="_blank"&gt;Pelican on Twitter&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Markdown&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/tchapi/markdown-cheatsheet" target="_blank"&gt;https://github.com/tchapi/markdown-cheatsheet&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://tinker.kotaweaver.com/blog/?p=152" target="_blank"&gt;Syntax highlighting languages&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://pythonhosted.org/Markdown/reference.html" target="_blank"&gt;http://pythonhosted.org/Markdown/reference.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h5&gt;Other&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://rasor.wordpress.com/" target="_blank"&gt;My old Wordpress blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The End&lt;/p&gt;</content><category term="#blog"></category><category term="#pelican"></category><category term="#githubpages"></category><category term="#cms"></category><category term="#git"></category><category term="#install"></category></entry></feed>