<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Rasor's Tech Blog - DevOps</title><link href="https://rasor.github.io/" rel="alternate"></link><link href="https://rasor.github.io/feeds/devops.atom.xml" rel="self"></link><id>https://rasor.github.io/</id><updated>2020-11-09T10:30:00+01:00</updated><subtitle>... still playing with this Lego</subtitle><entry><title>k8s on Windows Devbox - Part 0.2</title><link href="https://rasor.github.io/k8s-on-windows-devbox-part-02.html" rel="alternate"></link><published>2020-10-12T00:00:00+02:00</published><updated>2020-11-09T10:30:00+01:00</updated><author><name>rasor</name></author><id>tag:rasor.github.io,2020-10-12:/k8s-on-windows-devbox-part-02.html</id><summary type="html">&lt;p&gt;This blog is part of a serie:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://rasor.github.io/docker-desktop-for-windows-on-wsl2-part-01.html"&gt;Part 0.1: Install Docker Desktop on Windows 10 Home - including WSL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rasor.github.io/k8s-on-windows-devbox-part-02.html"&gt;Part 0.2: Install k8s using kind on Windows - including arkade&lt;/a&gt; (this blog)&lt;/li&gt;
&lt;li&gt;Others coming ...&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I want to install &lt;strong&gt;OpenFaaS&lt;/strong&gt; again.&lt;br&gt;
This time running on &lt;strong&gt;Kubernetes (k8s)&lt;/strong&gt;, &lt;strong&gt;Docker Desktop&lt;/strong&gt;, &lt;strong&gt;Windows Home …&lt;/strong&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;This blog is part of a serie:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://rasor.github.io/docker-desktop-for-windows-on-wsl2-part-01.html"&gt;Part 0.1: Install Docker Desktop on Windows 10 Home - including WSL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rasor.github.io/k8s-on-windows-devbox-part-02.html"&gt;Part 0.2: Install k8s using kind on Windows - including arkade&lt;/a&gt; (this blog)&lt;/li&gt;
&lt;li&gt;Others coming ...&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I want to install &lt;strong&gt;OpenFaaS&lt;/strong&gt; again.&lt;br&gt;
This time running on &lt;strong&gt;Kubernetes (k8s)&lt;/strong&gt;, &lt;strong&gt;Docker Desktop&lt;/strong&gt;, &lt;strong&gt;Windows Home 10&lt;/strong&gt; with &lt;strong&gt;Virtual Machine Platform&lt;/strong&gt; on &lt;strong&gt;WSL2&lt;/strong&gt;.&lt;br&gt;
Running Docker Desktop with &lt;a href="https://docs.docker.com/docker-for-windows/wsl/"&gt;WSL2 backend has many improvements&lt;/a&gt; over alternatives.&lt;br&gt;
Last time I installed Docker (in this &lt;a href="https://rasor.github.io/openfaas-on-windows-devbox.html"&gt;blog&lt;/a&gt;), I was running on &lt;strong&gt;Docker Swarm&lt;/strong&gt;, &lt;strong&gt;Docker CE&lt;/strong&gt;, &lt;strong&gt;Windows Pro 10&lt;/strong&gt; and &lt;strong&gt;Hyper-V&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://twitter.com/alexellisuk"&gt;@alexellisuk&lt;/a&gt; has build great tools. One being &lt;a href="https://github.com/alexellis/arkade"&gt;Arkade&lt;/a&gt;.&lt;br&gt;
It is great for installing lots of K8s goodies both locally and in cloud. It also includes OpenFaaS.&lt;/p&gt;
&lt;h1&gt;Install k8s and Arkade on devbox on Windows&lt;/h1&gt;
&lt;h2&gt;Prerequisites.&lt;/h2&gt;
&lt;p&gt;You need Docker. Start by typing    &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker -v
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;to see if you already have it installed.&lt;br&gt;
If not then follow &lt;a href="https://rasor.github.io/docker-desktop-for-windows-on-wsl2-part-01.html"&gt;this tutorial to get it&lt;/a&gt;.&lt;br&gt;
In that blog I ended up with &lt;strong&gt;Docker Desktop&lt;/strong&gt; on &lt;strong&gt;Windows Home 10&lt;/strong&gt; with &lt;strong&gt;Virtual Machine Platform&lt;/strong&gt; incl. &lt;strong&gt;WSL2&lt;/strong&gt;.&lt;/p&gt;
&lt;h2&gt;About&lt;/h2&gt;
&lt;h3&gt;About Akade&lt;/h3&gt;
&lt;p&gt;What is Arkade?&lt;br&gt;
&lt;em&gt;Your one-stop CLI for Kubernetes&lt;/em&gt; (its slogan)&lt;/p&gt;
&lt;p&gt;I'll use arkade for installing various k8s CLIs and Apps.  &lt;/p&gt;
&lt;h3&gt;About K8S clusters&lt;/h3&gt;
&lt;p&gt;Now that we have Docker, then it is time to play with Arkade to install k8s and other stuff&lt;/p&gt;
&lt;p&gt;But there are other options than &lt;strong&gt;Arkade&lt;/strong&gt; to install k8s&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;On localhost&lt;ul&gt;
&lt;li&gt;Using &lt;strong&gt;Kind&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://kubernetes.io/docs/setup/learning-environment/kind/"&gt;Installing Kubernetes with Kind&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kind.sigs.k8s.io/docs/user/quick-start/"&gt;kind Quick Start&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Using &lt;strong&gt;k3d&lt;/strong&gt; - for dev, Raspberry Pi or IoT&lt;/li&gt;
&lt;li&gt;Using &lt;strong&gt;Minikube&lt;/strong&gt; - for dev&lt;ul&gt;
&lt;li&gt;&lt;a href="https://kubernetes.io/docs/tasks/tools/install-minikube/"&gt;Install Minikube&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kubernetes.io/docs/setup/learning-environment/minikube/"&gt;Installing Kubernetes with Minikube&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Enable k8s in &lt;strong&gt;Docker Desktop&lt;/strong&gt; - for dev&lt;/li&gt;
&lt;li&gt;OpenShift&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;In cloud&lt;ul&gt;
&lt;li&gt;All cloud providers have their own k8s services:&lt;ul&gt;
&lt;li&gt;EKS (AWS)&lt;/li&gt;
&lt;li&gt;AKS (Az)&lt;/li&gt;
&lt;li&gt;GKE (Google)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.civo.com/kube100"&gt;Kube100&lt;/a&gt; (Civo) - a k3s cluster&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Using &lt;strong&gt;&lt;a href="https://rancher.com/products"&gt;RKE&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So why use Arkade to install k8s?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If you only need a single node cluster then option 3 - using &lt;strong&gt;Docker Desktop&lt;/strong&gt; automates the work you manually can do with &lt;strong&gt;Minikube&lt;/strong&gt;.  &lt;/li&gt;
&lt;li&gt;If you need a multi node cluster then option 0 - using &lt;strong&gt;Arkade&lt;/strong&gt; automates the work you manually can do with &lt;strong&gt;Kind&lt;/strong&gt;.  &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Arkade&lt;/strong&gt; also automates the work you need to do with other k8s related tools.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Already have a k8s cluster?&lt;/h3&gt;
&lt;p&gt;k8s install is only the top of the iceberg of Arkade.&lt;br&gt;
If you already have a k8s cluster then Arkade kicks in by installing lost of &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;k8s apps from e.g. &lt;a href="https://hub.helm.sh/"&gt;Helm Hub&lt;/a&gt; (with &lt;code&gt;ark install&lt;/code&gt;) and/or&lt;/li&gt;
&lt;li&gt;CLIs for k8s or apps (with &lt;code&gt;ark get&lt;/code&gt;) &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Arkade then &lt;strong&gt;unifies fetching packages&lt;/strong&gt; across platforms.&lt;br&gt;
Before you would use package tools like:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;apt-get&lt;/code&gt; on some Linux versions&lt;/li&gt;
&lt;li&gt;&lt;code&gt;yum&lt;/code&gt; on some other Linux versions&lt;/li&gt;
&lt;li&gt;&lt;code&gt;choco&lt;/code&gt; on Windows&lt;/li&gt;
&lt;li&gt;&lt;code&gt;brew&lt;/code&gt; on Mac&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;and having to deal with all their parameters.  &lt;/p&gt;
&lt;p&gt;Under the hood Arkade &lt;strong&gt;simplifies commands&lt;/strong&gt; by using &lt;a href="https://helm.sh/"&gt;Helm&lt;/a&gt; as the k8s package manager and &lt;code&gt;kubectl&lt;/code&gt; commands.&lt;/p&gt;
&lt;h2&gt;Install Arkade&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Check that curl is installed&lt;/span&gt;
curl --version
&lt;span class="c1"&gt;# curl 7.67.0 (x86_64-w64-mingw32) libcurl/7.67.0 OpenSSL/1.1.1d (Schannel) zlib/1.2.11 libidn2/2.3.0 nghttp2/1.39.2&lt;/span&gt;
&lt;span class="c1"&gt;# Release-Date: 2019-11-06&lt;/span&gt;
&lt;span class="c1"&gt;# Protocols: dict file ftp ftps gopher http https imap imaps ldap ldaps pop3 pop3s rtsp smtp smtps telnet tftp&lt;/span&gt;
&lt;span class="c1"&gt;# Features: AsynchDNS HTTP2 HTTPS-proxy IDN IPv6 Kerberos Largefile libz Metalink MultiSSL NTLM SPNEGO SSL SSPI TLS-SRP&lt;/span&gt;

&lt;span class="c1"&gt;# Check that docker is installed&lt;/span&gt;
docker -v
&lt;span class="c1"&gt;# Docker version 19.03.12, build 48a66213fe&lt;/span&gt;

&lt;span class="c1"&gt;# Check that a k8s cluster is not yet installed&lt;/span&gt;
kubectl version
&lt;span class="c1"&gt;# Client Version: version.Info{Major:&amp;quot;1&amp;quot;, Minor:&amp;quot;16+&amp;quot;, GitVersion:&amp;quot;v1.16.6-beta.0&amp;quot;, GitCommit:&amp;quot;e7f962ba86f4ce7033828210ca3556393c377bcc&amp;quot;, GitTreeState:&amp;quot;clean&amp;quot;, BuildDate:&amp;quot;2020-01-15T08:26:26Z&amp;quot;, GoVersion:&amp;quot;go1.13.5&amp;quot;, Compiler:&amp;quot;gc&amp;quot;, Platform:&amp;quot;windows/amd64&amp;quot;}&lt;/span&gt;
&lt;span class="c1"&gt;# Unable to connect to the server: dial tcp [::1]:8080: connectex: No connection could be made because the target machine actively refused it.&lt;/span&gt;

&lt;span class="c1"&gt;# Check that arkade is not installed&lt;/span&gt;
arkade --help
&lt;span class="c1"&gt;# bash: arkade: command not found&lt;/span&gt;

&lt;span class="c1"&gt;# Install Arkade on Windows&lt;/span&gt;
&lt;span class="c1"&gt;# https://github.com/alexellis/arkade#get-arkade&lt;/span&gt;
curl -sLS https://dl.get-arkade.dev &lt;span class="p"&gt;|&lt;/span&gt; sh
&lt;span class="c1"&gt;# Downloading package https://github.com/alexellis/arkade/releases/download/0.6.12/arkade.exe as //arkade.exe&lt;/span&gt;
&lt;span class="c1"&gt;# curl: (23) Failed writing body (0 != 16360)&lt;/span&gt;

&lt;span class="c1"&gt;# Trying as-admin&lt;/span&gt;
curl -sLS https://dl.get-arkade.dev &lt;span class="p"&gt;|&lt;/span&gt; sh
&lt;span class="c1"&gt;# Downloading package https://github.com/alexellis/arkade/releases/download/0.6.12/arkade.exe as //arkade.exe&lt;/span&gt;
&lt;span class="c1"&gt;# chmod: cannot access &amp;#39;//arkade.exe&amp;#39;: No such file or directory&lt;/span&gt;
&lt;span class="c1"&gt;# Download complete.&lt;/span&gt;

&lt;span class="c1"&gt;# Running with sufficient permissions to attempt to move arkade to /c/Users/Soren/bin&lt;/span&gt;
&lt;span class="c1"&gt;# mv: cannot stat &amp;#39;//arkade.exe&amp;#39;: No such file or directory&lt;/span&gt;
&lt;span class="c1"&gt;# ln: failed to create symbolic link &amp;#39;/c/Users/Soren/bin/ark&amp;#39;: No such file or directory&lt;/span&gt;
&lt;span class="c1"&gt;# Creating alias &amp;#39;ark&amp;#39; for &amp;#39;arkade&amp;#39;.&lt;/span&gt;
&lt;span class="c1"&gt;# main: line 172: arkade: command not found&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Both attemps failed - instead get manual recipe from &lt;a href="https://raw.githubusercontent.com/alexellis/arkade/master/get.sh"&gt;get.sh&lt;/a&gt;  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Open your web browser and go to https://github.com/alexellis/arkade/releases&lt;/li&gt;
&lt;li&gt;Download the latest release for windows to C:\Users\yourusername.arkade\bin\arkade`&lt;/li&gt;
&lt;li&gt;Add path to environment&lt;br&gt;
&lt;code&gt;setx PATH "%path%;C:\Users\yourusername\.arkade\bin"&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Create a symbolic link&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;ALIAS_NAME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;ark&amp;quot;&lt;/span&gt;
&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;REPO&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;arkade
&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;BINLOCATION&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/c/users/yourusername/.arkade/bin&amp;quot;&lt;/span&gt;
chmod +x &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$BINLOCATION&lt;/span&gt;&lt;span class="s2"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;$REPO&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
ln -sf &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$BINLOCATION&lt;/span&gt;&lt;span class="s2"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;$REPO&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$BINLOCATION&lt;/span&gt;&lt;span class="s2"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;$ALIAS_NAME&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;

&lt;span class="c1"&gt;# Did it work?&lt;/span&gt;
arkade version
&lt;span class="c1"&gt;#             _             _&lt;/span&gt;
&lt;span class="c1"&gt;#   __ _ _ __| | ____ _  __| | ___&lt;/span&gt;
&lt;span class="c1"&gt;#  / _` | &amp;#39;__| |/ / _` |/ _` |/ _ \&lt;/span&gt;
&lt;span class="c1"&gt;# | (_| | |  |   &amp;lt; (_| | (_| |  __/&lt;/span&gt;
&lt;span class="c1"&gt;#  \__,_|_|  |_|\_\__,_|\__,_|\___|&lt;/span&gt;
&lt;span class="c1"&gt;# Get Kubernetes apps the easy way&lt;/span&gt;
&lt;span class="c1"&gt;# Version: 0.6.12&lt;/span&gt;
&lt;span class="c1"&gt;# Git Commit: 0415b5fa9d0a6740feb3d9093b7555d38c7e1a51&lt;/span&gt;

ark get --help
&lt;span class="c1"&gt;# The get command downloads a CLI or application from the specific tool&amp;#39;s releases or downloads page. &lt;/span&gt;
&lt;span class="c1"&gt;# The tool is usually downloaded in binary format and provides a fast and easy alternative to a package manager.&lt;/span&gt;

&lt;span class="c1"&gt;# Usage:&lt;/span&gt;
&lt;span class="c1"&gt;#   arkade get [flags]&lt;/span&gt;

&lt;span class="c1"&gt;# Examples:&lt;/span&gt;
&lt;span class="c1"&gt;#   arkade get helm&lt;/span&gt;
&lt;span class="c1"&gt;#   arkade get linkerd2 --stash=false&lt;/span&gt;

&lt;span class="c1"&gt;# See which CLIs arkade can install:&lt;/span&gt;
ark get
&lt;span class="c1"&gt;# Use &amp;quot;arkade get TOOL&amp;quot; to download a tool or application:&lt;/span&gt;
&lt;span class="c1"&gt;# faas-cli&lt;/span&gt;
&lt;span class="c1"&gt;# helm&lt;/span&gt;
&lt;span class="c1"&gt;# kubectl&lt;/span&gt;
&lt;span class="c1"&gt;# kubectx&lt;/span&gt;
&lt;span class="c1"&gt;# kind&lt;/span&gt;
&lt;span class="c1"&gt;# k3d&lt;/span&gt;
&lt;span class="c1"&gt;# k3sup&lt;/span&gt;
&lt;span class="c1"&gt;# kubeseal&lt;/span&gt;
&lt;span class="c1"&gt;# inletsctl&lt;/span&gt;
&lt;span class="c1"&gt;# osm&lt;/span&gt;
&lt;span class="c1"&gt;# linkerd2&lt;/span&gt;
&lt;span class="c1"&gt;# kubebuilder&lt;/span&gt;
&lt;span class="c1"&gt;# kustomize&lt;/span&gt;
&lt;span class="c1"&gt;# doctl&lt;/span&gt;
&lt;span class="c1"&gt;# k9s&lt;/span&gt;
&lt;span class="c1"&gt;# civo&lt;/span&gt;
&lt;span class="c1"&gt;# terraform&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Great - we have Arkade now.  &lt;/p&gt;
&lt;h2&gt;Install k8s cluster&lt;/h2&gt;
&lt;p&gt;Now lets install a k8s cluster.  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# We need kubectl to manage k8s. Install it:&lt;/span&gt;
arkade get kubectl
&lt;span class="c1"&gt;# Downloading kubectl&lt;/span&gt;
&lt;span class="c1"&gt;# https://storage.googleapis.com/kubernetes-release/release/v1.18.0/bin/windows/amd64/kubectl.exe&lt;/span&gt;
&lt;span class="c1"&gt;# Tool written to: C:\Users\yourusername/.arkade/bin/kubectl.exe&lt;/span&gt;

&lt;span class="c1"&gt;# Did it install?&lt;/span&gt;
kubectl version
&lt;span class="c1"&gt;# Client Version: version.Info{Major:&amp;quot;1&amp;quot;, Minor:&amp;quot;19&amp;quot;,&lt;/span&gt;

&lt;span class="c1"&gt;# We will use kind to create a k8s cluster, but first install it:&lt;/span&gt;
arkade get kind
&lt;span class="c1"&gt;# Downloading kind&lt;/span&gt;
&lt;span class="c1"&gt;# https://github.com/kubernetes-sigs/kind/releases/download/v0.9.0/kind-windows-amd64&lt;/span&gt;
&lt;span class="c1"&gt;# Tool written to: C:\Users\yourusername/.arkade/bin/kind.exe&lt;/span&gt;
kind version
&lt;span class="c1"&gt;# kind v0.9.0 go1.15.2 windows/amd64&lt;/span&gt;

&lt;span class="c1"&gt;# Crate a k8s cluster:&lt;/span&gt;
kind create cluster
&lt;span class="c1"&gt;# Creating cluster &amp;quot;kind&amp;quot; ...&lt;/span&gt;
&lt;span class="c1"&gt;#  • Ensuring node image (kindest/node:v1.19.1) 🖼  ...&lt;/span&gt;
&lt;span class="c1"&gt;#  ✓ Ensuring node image (kindest/node:v1.19.1) 🖼&lt;/span&gt;
&lt;span class="c1"&gt;#  • Preparing nodes 📦   ...&lt;/span&gt;
&lt;span class="c1"&gt;#  ✓ Preparing nodes 📦&lt;/span&gt;
&lt;span class="c1"&gt;#  • Writing configuration 📜  ...&lt;/span&gt;
&lt;span class="c1"&gt;#  ✓ Writing configuration 📜&lt;/span&gt;
&lt;span class="c1"&gt;#  • Starting control-plane 🕹️  ...&lt;/span&gt;
&lt;span class="c1"&gt;#  ✓ Starting control-plane 🕹️&lt;/span&gt;
&lt;span class="c1"&gt;#  • Installing CNI 🔌  ...&lt;/span&gt;
&lt;span class="c1"&gt;#  ✓ Installing CNI 🔌&lt;/span&gt;
&lt;span class="c1"&gt;#  • Installing StorageClass 💾  ...&lt;/span&gt;
&lt;span class="c1"&gt;#  ✓ Installing StorageClass 💾&lt;/span&gt;
&lt;span class="c1"&gt;# Set kubectl context to &amp;quot;kind-kind&amp;quot;&lt;/span&gt;
&lt;span class="c1"&gt;# You can now use your cluster with:&lt;/span&gt;
kubectl cluster-info --context kind-kind
&lt;span class="c1"&gt;# Kubernetes master is running at https://127.0.0.1:52295&lt;/span&gt;
&lt;span class="c1"&gt;# KubeDNS is running at https://127.0.0.1:52295/api/v1/namespaces/kube-system/services/kube-dns:dns/proxy&lt;/span&gt;
&lt;span class="c1"&gt;# To further debug and diagnose cluster problems, use &amp;#39;kubectl cluster-info dump&amp;#39;.&lt;/span&gt;

&lt;span class="c1"&gt;# And what is the name of cluster?&lt;/span&gt;
kind get clusters
&lt;span class="c1"&gt;# kind&lt;/span&gt;

&lt;span class="c1"&gt;# If you need to delete your cluster:&lt;/span&gt;
&lt;span class="c1"&gt;# kind delete cluster&lt;/span&gt;
&lt;span class="c1"&gt;# kind delete cluster --name kind&lt;/span&gt;

&lt;span class="c1"&gt;# Seems like I have a client version from docker and a server version is in the cluster with the version installed by arkade.&lt;/span&gt;
kubectl version
&lt;span class="c1"&gt;# Client Version: version.Info{Major:&amp;quot;1&amp;quot;, Minor:&amp;quot;16+&amp;quot;, GitVersion:&amp;quot;v1.16.6-beta.0&amp;quot;, GitCommit:&amp;quot;e7f962ba86f4ce7033828210ca3556393c377bcc&amp;quot;, GitTreeState:&amp;quot;clean&amp;quot;, BuildDate:&amp;quot;2020-01-15T08:26:26Z&amp;quot;, GoVersion:&amp;quot;go1.13.5&amp;quot;, Compiler:&amp;quot;gc&amp;quot;, Platform:&amp;quot;windows/amd64&amp;quot;}&lt;/span&gt;
&lt;span class="c1"&gt;# Server Version: version.Info{Major:&amp;quot;1&amp;quot;, Minor:&amp;quot;19&amp;quot;, GitVersion:&amp;quot;v1.19.1&amp;quot;, GitCommit:&amp;quot;206bcadf021e76c27513500ca24182692aabd17e&amp;quot;, GitTreeState:&amp;quot;clean&amp;quot;, BuildDate:&amp;quot;2020-09-14T07:30:52Z&amp;quot;, GoVersion:&amp;quot;go1.15&amp;quot;, Compiler:&amp;quot;gc&amp;quot;, Platform:&amp;quot;linux/amd64&amp;quot;}&lt;/span&gt;

&lt;span class="c1"&gt;# Check cluster location and credentials that kubectl knows about:&lt;/span&gt;
kubectl config view
&lt;span class="c1"&gt;# apiVersion: v1&lt;/span&gt;
&lt;span class="c1"&gt;# clusters:&lt;/span&gt;
&lt;span class="c1"&gt;# - cluster:&lt;/span&gt;
&lt;span class="c1"&gt;#     certificate-authority-data: DATA+OMITTED&lt;/span&gt;
&lt;span class="c1"&gt;#     server: https://127.0.0.1:55555&lt;/span&gt;
&lt;span class="c1"&gt;#   name: kind-kind&lt;/span&gt;
&lt;span class="c1"&gt;# contexts:&lt;/span&gt;
&lt;span class="c1"&gt;# - context:&lt;/span&gt;
&lt;span class="c1"&gt;#     cluster: kind-kind&lt;/span&gt;
&lt;span class="c1"&gt;#     user: kind-kind&lt;/span&gt;
&lt;span class="c1"&gt;#   name: kind-kind&lt;/span&gt;
&lt;span class="c1"&gt;# current-context: kind-kind&lt;/span&gt;
&lt;span class="c1"&gt;# kind: Config&lt;/span&gt;
&lt;span class="c1"&gt;# preferences: {}&lt;/span&gt;
&lt;span class="c1"&gt;# users:&lt;/span&gt;
&lt;span class="c1"&gt;# - name: kind-kind&lt;/span&gt;
&lt;span class="c1"&gt;#   user:&lt;/span&gt;
&lt;span class="c1"&gt;#     client-certificate-data: REDACTED&lt;/span&gt;
&lt;span class="c1"&gt;#     client-key-data: REDACTED&lt;/span&gt;

kubectl get nodes
&lt;span class="c1"&gt;# NAME                 STATUS   ROLES    AGE   VERSION&lt;/span&gt;
&lt;span class="c1"&gt;# kind-control-plane   Ready    master   18m   v1.19.1&lt;/span&gt;

kubectl get pods
&lt;span class="c1"&gt;# No resources found in default namespace.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The cluster config seen in &lt;code&gt;kubectl config view&lt;/code&gt; is stored in C:\Users\youruserid.kube\config &lt;br&gt;
When you want to connect to other clusters you need to modify or replace that file.&lt;br&gt;
In the file one cluster will be your default.  &lt;/p&gt;
&lt;p&gt;So now having a master node running and no pod what is next?  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;We could add worker nodes to the cluster&lt;/li&gt;
&lt;li&gt;We could install apps&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Issues: &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Booting Windows made bash unable to access cluster. Why?&lt;ul&gt;
&lt;li&gt;It was not an envir var problem, since after delete + create cluster then no new envir vars were created&lt;/li&gt;
&lt;li&gt;In vid &lt;a href="https://www.youtube.com/watch?v=8wU9s_mua8M"&gt;Walk-through of arkade - for Kubernetes&lt;/a&gt;, Alex think boot persistence has been implemented - and before we had to recreate cluster after boot.&lt;/li&gt;
&lt;li&gt;Tips about accessing clusters: &lt;a href="https://kubernetes.io/docs/tasks/access-application-cluster/access-cluster/"&gt;Accessing Clusters&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Perhaps you just need to start the master node: &lt;code&gt;docker start kind-control-plane&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Stop and start the cluster&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# stop the k8s cluster&lt;/span&gt;
docker stop kind-control-plane

&lt;span class="c1"&gt;# check if k8s cluster is running&lt;/span&gt;
kubectl cluster-info
&lt;span class="c1"&gt;# Unable to connect to the server: dial tcp 127.0.0.1:52295: connectex: No connection could be made&lt;/span&gt;

&lt;span class="c1"&gt;# Check if there are any clusters&lt;/span&gt;
$ kind get clusters
&lt;span class="c1"&gt;# kind&lt;/span&gt;

&lt;span class="c1"&gt;# Check it the container is running&lt;/span&gt;
docker ps -a &lt;span class="p"&gt;|&lt;/span&gt; grep kind
&lt;span class="c1"&gt;# CONTAINER ID        IMAGE                  COMMAND                  CREATED             STATUS                   PORTS                       NAMES&lt;/span&gt;
&lt;span class="c1"&gt;# 0b9a7220b4f8        kindest/node:v1.19.1   &amp;quot;/usr/local/bin/entr…&amp;quot;   5 weeks ago         Exited (0) 3 weeks ago   127.0.0.1:52295-&amp;gt;6443/tcp   kind-control-plane&lt;/span&gt;

&lt;span class="c1"&gt;# start the k8s cluster&lt;/span&gt;
docker start kind-control-plane

&lt;span class="c1"&gt;# check if k8s cluster is running&lt;/span&gt;
kubectl cluster-info
&lt;span class="c1"&gt;# Kubernetes master is running at https://127.0.0.1:52295&lt;/span&gt;
&lt;span class="c1"&gt;# KubeDNS is running at https://127.0.0.1:52295/api/v1/namespaces/kube-system/services/kube-dns:dns/proxy&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Install k8s apps&lt;/h2&gt;
&lt;p&gt;Arkade makes it easy to install many ready-to-use apps. You can print the list it contains:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Check which apps arkade lets you easily install:&lt;/span&gt;
ark install --help
&lt;span class="c1"&gt;# Install Kubernetes apps from helm charts or YAML files using the &amp;quot;install&amp;quot; command.&lt;/span&gt;

&lt;span class="c1"&gt;# You can also find the post-install message for each app with the &amp;quot;info&amp;quot; command.&lt;/span&gt;

&lt;span class="c1"&gt;# Usage:&lt;/span&gt;
&lt;span class="c1"&gt;#   arkade install [flags]&lt;/span&gt;
&lt;span class="c1"&gt;#   arkade install [command]&lt;/span&gt;

&lt;span class="c1"&gt;# Examples:&lt;/span&gt;
&lt;span class="c1"&gt;#   arkade install&lt;/span&gt;
&lt;span class="c1"&gt;#   arkade install openfaas  --gateways=2&lt;/span&gt;
&lt;span class="c1"&gt;#   arkade install inlets-operator --token-file $HOME/do-token&lt;/span&gt;

&lt;span class="c1"&gt;# Available Commands:&lt;/span&gt;
&lt;span class="c1"&gt;#   argocd                  Install argocd&lt;/span&gt;
&lt;span class="c1"&gt;#   cert-manager            Install cert-manager&lt;/span&gt;
&lt;span class="c1"&gt;#   chart                   Install the specified helm chart&lt;/span&gt;
&lt;span class="c1"&gt;#   cron-connector          Install cron-connector for OpenFaaS&lt;/span&gt;
&lt;span class="c1"&gt;#   crossplane              Install Crossplane&lt;/span&gt;
&lt;span class="c1"&gt;#   docker-registry         Install a Docker registry&lt;/span&gt;
&lt;span class="c1"&gt;#   docker-registry-ingress Install registry ingress with TLS&lt;/span&gt;
&lt;span class="c1"&gt;#   gitea                   Install gitea&lt;/span&gt;
&lt;span class="c1"&gt;#   grafana                 Install grafana&lt;/span&gt;
&lt;span class="c1"&gt;#   info                    Find info about a Kubernetes app&lt;/span&gt;
&lt;span class="c1"&gt;#   ingress-nginx           Install ingress-nginx&lt;/span&gt;
&lt;span class="c1"&gt;#   inlets-operator         Install inlets-operator&lt;/span&gt;
&lt;span class="c1"&gt;#   istio                   Install istio&lt;/span&gt;
&lt;span class="c1"&gt;#   jenkins                 Install jenkins&lt;/span&gt;
&lt;span class="c1"&gt;#   kafka-connector         Install kafka-connector for OpenFaaS&lt;/span&gt;
&lt;span class="c1"&gt;#   kube-image-prefetch     Install kube-image-prefetch&lt;/span&gt;
&lt;span class="c1"&gt;#   kube-state-metrics      Install kube-state-metrics&lt;/span&gt;
&lt;span class="c1"&gt;#   kubernetes-dashboard    Install kubernetes-dashboard&lt;/span&gt;
&lt;span class="c1"&gt;#   linkerd                 Install linkerd&lt;/span&gt;
&lt;span class="c1"&gt;#   loki                    Install Loki for monitoring and tracing&lt;/span&gt;
&lt;span class="c1"&gt;#   metrics-server          Install metrics-server&lt;/span&gt;
&lt;span class="c1"&gt;#   minio                   Install minio&lt;/span&gt;
&lt;span class="c1"&gt;#   mongodb                 Install mongodb&lt;/span&gt;
&lt;span class="c1"&gt;#   nats-connector          Install OpenFaaS connector for NATS&lt;/span&gt;
&lt;span class="c1"&gt;#   nfs-client-provisioner  Install nfs client provisioner&lt;/span&gt;
&lt;span class="c1"&gt;#   openfaas                Install openfaas&lt;/span&gt;
&lt;span class="c1"&gt;#   openfaas-ingress        Install openfaas ingress with TLS&lt;/span&gt;
&lt;span class="c1"&gt;#   openfaas-loki           Install Loki-OpenFaaS and Configure Loki logs provider for OpenFaaS&lt;/span&gt;
&lt;span class="c1"&gt;#   osm                     Install osm&lt;/span&gt;
&lt;span class="c1"&gt;#   portainer               Install portainer to visualise and manage containers&lt;/span&gt;
&lt;span class="c1"&gt;#   postgresql              Install postgresql&lt;/span&gt;
&lt;span class="c1"&gt;#   redis                   Install redis&lt;/span&gt;
&lt;span class="c1"&gt;#   registry-creds          Install registry-creds&lt;/span&gt;
&lt;span class="c1"&gt;#   tekton                  Install Tekton pipelines and dashboard&lt;/span&gt;
&lt;span class="c1"&gt;#   traefik2                Install traefik2&lt;/span&gt;

&lt;span class="c1"&gt;# Flags:&lt;/span&gt;
&lt;span class="c1"&gt;#   -h, --help                help for install&lt;/span&gt;
&lt;span class="c1"&gt;#       --kubeconfig string   Local path for your kubeconfig file (default &amp;quot;kubeconfig&amp;quot;)&lt;/span&gt;
&lt;span class="c1"&gt;#       --wait                If we should wait for the resource to be ready before returning (helm3 only, default false)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Install k8s app kubernetes-dashboard&lt;/h3&gt;
&lt;p&gt;kubernetes-dashboard gives you a GUI for viewing what your cluster contains. Let's install it:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;arkade install kubernetes-dashboard
&lt;span class="c1"&gt;# Using kubeconfig: C:\Users\youruserid/.kube/config&lt;/span&gt;
&lt;span class="c1"&gt;# Node architecture: &amp;quot;amd64&amp;quot;&lt;/span&gt;
&lt;span class="c1"&gt;# # To create the Service Account and the ClusterRoleBinding&lt;/span&gt;
&lt;span class="c1"&gt;# # @See https://github.com/kubernetes/dashboard/blob/master/docs/user/access-control/creating-sample-user.md#creating-sample-user&lt;/span&gt;

cat &lt;span class="s"&gt;&amp;lt;&amp;lt;EOF | kubectl apply -f -&lt;/span&gt;
&lt;span class="s"&gt;---&lt;/span&gt;
&lt;span class="s"&gt;apiVersion: v1&lt;/span&gt;
&lt;span class="s"&gt;kind: ServiceAccount&lt;/span&gt;
&lt;span class="s"&gt;metadata:&lt;/span&gt;
&lt;span class="s"&gt;    name: admin-user&lt;/span&gt;
&lt;span class="s"&gt;    namespace: kubernetes-dashboard&lt;/span&gt;
&lt;span class="s"&gt;---&lt;/span&gt;
&lt;span class="s"&gt;apiVersion: rbac.authorization.k8s.io/v1&lt;/span&gt;
&lt;span class="s"&gt;kind: ClusterRoleBinding&lt;/span&gt;
&lt;span class="s"&gt;metadata:&lt;/span&gt;
&lt;span class="s"&gt;    name: admin-user&lt;/span&gt;
&lt;span class="s"&gt;roleRef:&lt;/span&gt;
&lt;span class="s"&gt;    apiGroup: rbac.authorization.k8s.io&lt;/span&gt;
&lt;span class="s"&gt;    kind: ClusterRole&lt;/span&gt;
&lt;span class="s"&gt;    name: cluster-admin&lt;/span&gt;
&lt;span class="s"&gt;subjects:&lt;/span&gt;
&lt;span class="s"&gt;- kind: ServiceAccount&lt;/span&gt;
&lt;span class="s"&gt;    name: admin-user&lt;/span&gt;
&lt;span class="s"&gt;    namespace: kubernetes-dashboard&lt;/span&gt;
&lt;span class="s"&gt;---&lt;/span&gt;
&lt;span class="s"&gt;EOF&lt;/span&gt;

&lt;span class="c1"&gt;# #To get your Token for logging in&lt;/span&gt;
kubectl -n kubernetes-dashboard describe secret &lt;span class="k"&gt;$(&lt;/span&gt;kubectl -n kubernetes-dashboard get secret &lt;span class="p"&gt;|&lt;/span&gt; grep admin-user-token &lt;span class="p"&gt;|&lt;/span&gt; awk &lt;span class="s1"&gt;&amp;#39;{print $1}&amp;#39;&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# Shown last part of the output&lt;/span&gt;
&lt;span class="c1"&gt;# Name:         admin-user-token-8ltkm&lt;/span&gt;
&lt;span class="c1"&gt;# Namespace:    kubernetes-dashboard&lt;/span&gt;
&lt;span class="c1"&gt;# Labels:       &amp;lt;none&amp;gt;&lt;/span&gt;
&lt;span class="c1"&gt;# Annotations:  kubernetes.io/service-account.name: admin-user&lt;/span&gt;
&lt;span class="c1"&gt;#               kubernetes.io/service-account.uid: cf8c00d4-e353-46cd-a60f-52b976278a5c&lt;/span&gt;

&lt;span class="c1"&gt;# Type:  kubernetes.io/service-account-token&lt;/span&gt;

&lt;span class="c1"&gt;# Data&lt;/span&gt;
&lt;span class="c1"&gt;# ====&lt;/span&gt;
&lt;span class="c1"&gt;# ca.crt:     1066 bytes&lt;/span&gt;
&lt;span class="c1"&gt;# namespace:  20 bytes&lt;/span&gt;
&lt;span class="c1"&gt;# token:      eyJhbGciOiJSUzI1NiIsImtpZCI6InBXbUdUMG01cHU1b21mWl9HQ2hvckpnc2piTE8xZFhraE16Qnl6b0FUYWsifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJrdWJlcm5ldGVzLWRhc2hib2FyZCIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VjcmV0Lm5hbWUiOiJhZG1pbi11c2VyLXRva2VuLThsdGttIiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZXJ2aWNlLWFjY291bnQubmFtZSI6ImFkbWluLXVzZXIiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC51aWQiOiJjZjhjMDBkNC1lMzUzLTQ2Y2QtYTYwZi01MmI5NzYyNzhhNWMiLCJzdWIiOiJzeXN0ZW06c2VydmljZWFjY291bnQ6a3ViZXJuZXRlcy1kYXNoYm9hcmQ6YWRtaW4tdXNlciJ9.HOkirmDW_KEpNcH_W2kotH5V_r_MgxzMiZnYctyP2bdCt7yBZijfwVK6rv3SuYizZM5FuxWsHARR8aFmsIG5wtL4Pv1mS0wHggt1Tt3rX-8Du2kj0UZwjM6pKZ5zECSC-JM1fItUAjsZyad2qxAThPaYtaJw2HVbJHdrQxn7I65kZY9qNGTPevwVrfs8PeUnpeUqlmaeZ9doob0x1zB_3TKvvST9r38m9nsRblfQU2P9QY82Q4qU74sV3lwE5cRs0XuviyQBEvfGxH5od7ahTXea5B5zHA-3_7SSyvLWHvjMMk4fn8_ZWwxJKFYc1zbxL2JqNvqzvvqRqsfbwOjX8g&lt;/span&gt;

&lt;span class="c1"&gt;# #To forward the dashboard to your local machine&lt;/span&gt;
kubectl proxy
&lt;span class="c1"&gt;# Starting to serve on 127.0.0.1:8001&lt;/span&gt;

&lt;span class="c1"&gt;# # Once Proxying you can navigate to the below&lt;/span&gt;
&lt;span class="c1"&gt;# http://localhost:8001/api/v1/namespaces/kubernetes-dashboard/services/https:kubernetes-dashboard:/proxy/#/login&lt;/span&gt;
&lt;span class="c1"&gt;# Paste the token above into the Dashboard login screen&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You need to copy-paste your token from above to the login screen:  &lt;/p&gt;
&lt;p&gt;&lt;img alt="k8s dashboard login" src="../img/2020/2020-09-06-OpenFaaS25.PNG" title="k8s dashboard login"&gt;  &lt;/p&gt;
&lt;p&gt;When logged in:&lt;br&gt;
&lt;img alt="k8s dashboard logged in" src="../img/2020/2020-09-06-OpenFaaS26.PNG" title="k8s dashboard logged in"&gt;  &lt;/p&gt;
&lt;p&gt;There are several k8s namespaces. Select some to see what they are comprised of:&lt;br&gt;
&lt;img alt="k8s dashboard namespaces" src="../img/2020/2020-09-06-OpenFaaS27.PNG" title="k8s dashboard namespaces"&gt;  &lt;/p&gt;
&lt;p&gt;Issues:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;You get "Default user has too little permissions", if you forget to paste the &lt;code&gt;cat &amp;lt;&amp;lt; EOF&lt;/code&gt; block.&lt;ul&gt;
&lt;li&gt;Create An &lt;a href="https://github.com/kubernetes/dashboard#create-an-authentication-token-rbac"&gt;Authentication Token (RBAC)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Read about &lt;a href="https://github.com/kubernetes/dashboard/blob/master/docs/user/access-control/README.md"&gt;Access control&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;More info: &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Other apis exposed though &lt;a href="http://127.0.0.1:8001/"&gt;local proxy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kubernetes.io/docs/tasks/access-application-cluster/web-ui-dashboard/"&gt;Web UI (Dashboard)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Github: &lt;a href="https://github.com/kubernetes/dashboard"&gt;kubernetes/dashboard&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Install k8s app metrics-server (- and heml)&lt;/h3&gt;
&lt;p&gt;Metrics Server is a cluster-wide aggregator of resource usage data.  &lt;/p&gt;
&lt;p&gt;Apparently installing metrics-server does also do &lt;code&gt;arkade get helm&lt;/code&gt;, when it is not yet installed.&lt;br&gt;
Helm is a package manager for k8s apps (packaged in helm charts).  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;arkade install metrics-server
&lt;span class="c1"&gt;# Using kubeconfig: C:\Users\youruserid/.kube/config&lt;/span&gt;
&lt;span class="c1"&gt;# Node architecture: &amp;quot;amd64&amp;quot;&lt;/span&gt;
&lt;span class="c1"&gt;# Client: &amp;quot;x86_64&amp;quot;, &amp;quot;MINGW64_NT-10.0-19041&amp;quot;&lt;/span&gt;
&lt;span class="c1"&gt;# 2020/09/22 12:41:45 User dir established as: C:\Users\youruserid/.arkade/&lt;/span&gt;
&lt;span class="c1"&gt;# https://get.helm.sh/helm-v3.2.4-windows-amd64.zip&lt;/span&gt;
&lt;span class="c1"&gt;# C:\Users\Soren\AppData\Local\Temp/windows-amd64&lt;/span&gt;
&lt;span class="c1"&gt;# C:\Users\Soren\AppData\Local\Temp/helm.exe&lt;/span&gt;
&lt;span class="c1"&gt;# C:\Users\Soren\AppData\Local\Temp/README.md&lt;/span&gt;
&lt;span class="c1"&gt;# C:\Users\Soren\AppData\Local\Temp/LICENSE&lt;/span&gt;
&lt;span class="c1"&gt;# 2020/09/22 12:42:19 extracted zip into C:\Users\youruserid\AppData\Local\Temp: 4 files, 0 dirs (991.479ms)&lt;/span&gt;
&lt;span class="c1"&gt;# Downloaded to:  C:\Users\youruserid/.arkade/bin/helm.exe helm.exe&lt;/span&gt;
&lt;span class="c1"&gt;# Error: no repositories found. You must add one before updating&lt;/span&gt;
&lt;span class="c1"&gt;# Error: exit code 1&lt;/span&gt;

helm version
&lt;span class="c1"&gt;# version.BuildInfo{Version:&amp;quot;v3.2.4&amp;quot;, GitCommit:&amp;quot;0ad800ef43d3b826f31a5ad8dfbb4fe05d143688&amp;quot;, GitTreeState:&amp;quot;clean&amp;quot;, GoVersion:&amp;quot;go1.13.12&amp;quot;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;So what's with &lt;code&gt;Error: no repositories found&lt;/code&gt;?
&lt;a href="https://www.jforte.me/2020/01/getting-started-with-helm-v3/"&gt;Getting Started with Helm v3&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Verify repo (list of helm charts) is missing&lt;/span&gt;
helm repo update
&lt;span class="c1"&gt;# Error: no repositories found. You must add one before updating&lt;/span&gt;

&lt;span class="c1"&gt;# get stable repo - this can take 10s of minutes without output in the shell...&lt;/span&gt;
helm repo add stable https://kubernetes-charts.storage.googleapis.com/
&lt;span class="c1"&gt;# &amp;quot;stable&amp;quot; has been added to your repositories&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;On https://helm.sh/docs/intro/quickstart/ in the version dropdown you will see which version of Helm is the latest stable version, which was installed above.  &lt;/p&gt;
&lt;p&gt;Having the helm chart list downloaded we try again:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;arkade install metrics-server
&lt;span class="c1"&gt;# Using kubeconfig: C:\Users\youruserid/.kube/config&lt;/span&gt;
&lt;span class="c1"&gt;# Node architecture: &amp;quot;amd64&amp;quot;&lt;/span&gt;
&lt;span class="c1"&gt;# Client: &amp;quot;x86_64&amp;quot;, &amp;quot;MINGW64_NT-10.0-19041&amp;quot;&lt;/span&gt;
&lt;span class="c1"&gt;# 2020/09/24 17:27:20 User dir established as: C:\Users\youruserid/.arkade/&lt;/span&gt;
&lt;span class="c1"&gt;# https://get.helm.sh/helm-v3.2.4-windows-amd64.zip&lt;/span&gt;
&lt;span class="c1"&gt;# C:\Users\youruserid\AppData\Local\Temp/windows-amd64&lt;/span&gt;
&lt;span class="c1"&gt;# C:\Users\youruserid\AppData\Local\Temp/helm.exe&lt;/span&gt;
&lt;span class="c1"&gt;# C:\Users\youruserid\AppData\Local\Temp/README.md&lt;/span&gt;
&lt;span class="c1"&gt;# C:\Users\youruserid\AppData\Local\Temp/LICENSE&lt;/span&gt;
&lt;span class="c1"&gt;# 2020/09/24 17:27:22 extracted zip into C:\Users\youruserid\AppData\Local\Temp: 4 files, 0 dirs (406.024ms)&lt;/span&gt;
&lt;span class="c1"&gt;# Downloaded to:  C:\Users\youruserid/.arkade/bin/helm.exe helm.exe&lt;/span&gt;
&lt;span class="c1"&gt;# Hang tight while we grab the latest from your chart repositories...&lt;/span&gt;
&lt;span class="c1"&gt;# ...Successfully got an update from the &amp;quot;stable&amp;quot; chart repository&lt;/span&gt;
&lt;span class="c1"&gt;# Update Complete. ⎈ Happy Helming!⎈&lt;/span&gt;
&lt;span class="c1"&gt;# Chart path:  C:\Users\youruserid\AppData\Local\Temp/charts&lt;/span&gt;
&lt;span class="c1"&gt;# VALUES values.yaml&lt;/span&gt;
&lt;span class="c1"&gt;# Command: C:\Users\youruserid/.arkade/bin/helm [upgrade --install metrics-server stable/metrics-server --namespace kube-system --values C:\Users\youruserid\AppData\Local\Temp/charts/metrics-server/values.yaml --set args={--kubelet-insecure-tls,--kubelet-preferred-address-types=InternalIP\,ExternalIP\,Hostname}]&lt;/span&gt;
&lt;span class="c1"&gt;# Release &amp;quot;metrics-server&amp;quot; does not exist. Installing it now.&lt;/span&gt;
&lt;span class="c1"&gt;# NAME: metrics-server&lt;/span&gt;
&lt;span class="c1"&gt;# LAST DEPLOYED: Thu Sep 24 17:27:29 2020&lt;/span&gt;
&lt;span class="c1"&gt;# NAMESPACE: kube-system&lt;/span&gt;
&lt;span class="c1"&gt;# STATUS: deployed&lt;/span&gt;
&lt;span class="c1"&gt;# REVISION: 1&lt;/span&gt;
&lt;span class="c1"&gt;# NOTES:&lt;/span&gt;
&lt;span class="c1"&gt;# The metric server has been deployed.&lt;/span&gt;

&lt;span class="c1"&gt;# In a few minutes you should be able to list metrics using the following&lt;/span&gt;
&lt;span class="c1"&gt;# command:&lt;/span&gt;

&lt;span class="c1"&gt;#   kubectl get --raw &amp;quot;/apis/metrics.k8s.io/v1beta1/nodes&amp;quot;&lt;/span&gt;
&lt;span class="c1"&gt;# =======================================================================&lt;/span&gt;
&lt;span class="c1"&gt;# = metrics-server has been installed.                                  =&lt;/span&gt;
&lt;span class="c1"&gt;# =======================================================================&lt;/span&gt;

&lt;span class="c1"&gt;# # It can take a few minutes for the metrics-server to collect data&lt;/span&gt;
&lt;span class="c1"&gt;# # from the cluster. Try these commands and wait a few moments if&lt;/span&gt;
&lt;span class="c1"&gt;# # no data is showing.&lt;/span&gt;

&lt;span class="c1"&gt;# # Check pod usage&lt;/span&gt;
&lt;span class="c1"&gt;# kubectl top pod&lt;/span&gt;

&lt;span class="c1"&gt;# # Check node usage&lt;/span&gt;
kubectl top node
&lt;span class="c1"&gt;# Error from server (ServiceUnavailable): the server is currently unable to handle the request (get nodes.metrics.k8s.io)&lt;/span&gt;

&lt;span class="c1"&gt;# # Find out more at:&lt;/span&gt;
&lt;span class="c1"&gt;# # https://github.com/helm/charts/tree/master/stable/metrics-server&lt;/span&gt;

&lt;span class="c1"&gt;# Thanks for using arkade!&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;So now we have &lt;code&gt;Error from server (ServiceUnavailable)&lt;/code&gt;.&lt;br&gt;
Try fix: &lt;a href="https://github.com/kubernetes-sigs/metrics-server/issues/448"&gt;issue 448&lt;/a&gt;.  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Is pod running?&lt;/span&gt;
kubectl get pods -n kube-system
&lt;span class="c1"&gt;# NAME                                         READY   STATUS    RESTARTS   AGE&lt;/span&gt;
&lt;span class="c1"&gt;# metrics-server-56c4ff648b-jdzv6              1/1     Running   0          53m&lt;/span&gt;

&lt;span class="c1"&gt;# Is service running?&lt;/span&gt;
kubectl get svc -n kube-system
&lt;span class="c1"&gt;# NAME             TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)                  AGE&lt;/span&gt;
&lt;span class="c1"&gt;# metrics-server   ClusterIP   10.106.132.12   &amp;lt;none&amp;gt;        443/TCP                  55m&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;3 days later ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;kubectl top node
&lt;span class="c1"&gt;# NAME                 CPU(cores)   CPU%   MEMORY(bytes)   MEMORY%&lt;/span&gt;
&lt;span class="c1"&gt;# kind-control-plane   473m         5%     952Mi           8%&lt;/span&gt;

kubectl top pod

kubectl get --raw &lt;span class="s2"&gt;&amp;quot;/apis/metrics.k8s.io/v1beta1/nodes&amp;quot;&lt;/span&gt;
&lt;span class="c1"&gt;# Error from server (NotFound): the server could not find the requested resource&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Start proxy in another terminal&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;kubectl proxy
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Then open browser http://127.0.0.1:8001/&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;paths&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;/apis/metrics.k8s.io&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;/apis/metrics.k8s.io/v1beta1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;http://127.0.0.1:8001/apis/metrics.k8s.io/v1beta1/nodes 
gives "ERR_CONNECTION_REFUSED"&lt;/p&gt;
&lt;p&gt;OK, I'm not done with this, but I'll fill in, when focus comes back onto it...&lt;/p&gt;
&lt;p&gt;More info:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Metrics Server:&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/helm/charts/tree/master/stable/metrics-server"&gt;helm/charts - metrics-server&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Github: &lt;a href="https://github.com/kubernetes-sigs/metrics-server"&gt;kubernetes-sigs/metrics-server&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;k8s Debug: &lt;a href="https://kubernetes.io/docs/tasks/debug-application-cluster/resource-metrics-pipeline/"&gt;Resource metrics pipeline&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Helm:&lt;ul&gt;
&lt;li&gt;&lt;a href="https://helm.sh/docs/intro/quickstart/"&gt;Quickstart Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Download: &lt;a href="https://github.com/helm/helm/releases"&gt;Releases · helm/helm&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/helm/charts/tree/master/stable"&gt;helm/charts&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;What's next?&lt;/h1&gt;
&lt;p&gt;I didn't get the the OpenFaaS part, yet - I'll park that for later.  &lt;/p&gt;
&lt;p&gt;I also want to build apps on a solid setup.&lt;br&gt;
What I have in mind is the &lt;a href="https://kubeprod.io/"&gt;Bitnami stack&lt;/a&gt;&lt;br&gt;
&lt;img alt="Bitnami stack" src="https://kubeprod.io/assets/images/bkpr.png"&gt;&lt;br&gt;
(&lt;em&gt;Image on kubeprod.io&lt;/em&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Apps - e.g &lt;a href="https://kubeapps.com/"&gt;Kubeapps, deploy your applications in Kubernetes&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://hub.kubeapps.com/charts"&gt;Charts hub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kubeapps/kubeapps/blob/master/docs/user/getting-started.md"&gt;Get Started with Kubeapps&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;BKPR (Bitnami Kubernetes Production Runtime)&lt;ul&gt;
&lt;li&gt;Monitoring&lt;ul&gt;
&lt;li&gt;Prometheus&lt;/li&gt;
&lt;li&gt;Grafana&lt;/li&gt;
&lt;li&gt;Alertmanager&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Logging&lt;ul&gt;
&lt;li&gt;Fluentd&lt;/li&gt;
&lt;li&gt;Elasticsearch&lt;/li&gt;
&lt;li&gt;Kibana&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Ingress&lt;ul&gt;
&lt;li&gt;nginx-ingress&lt;/li&gt;
&lt;li&gt;ExternalDNS&lt;/li&gt;
&lt;li&gt;cert-manager&lt;/li&gt;
&lt;li&gt;OAuth2 Proxy&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;k8s&lt;ul&gt;
&lt;li&gt;Google Kubernetes Engine (GKE), &lt;/li&gt;
&lt;li&gt;Azure Kubernetes Service (AKS) and &lt;/li&gt;
&lt;li&gt;Amazon Elastic Container Service for Kubernetes (EKS)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I might want to add to the stack:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://hub.kubeapps.com/charts?q=rabbitmq"&gt;charts/rabbitmq&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Some apps I have in mind could be &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A DeFi app using &lt;ul&gt;
&lt;li&gt;a private &lt;a href="https://hub.kubeapps.com/charts/stable/ethereum"&gt;ethereum&lt;/a&gt; network as transaction and currency cluster&lt;/li&gt;
&lt;li&gt;&lt;a href="https://hub.kubeapps.com/charts/vulcanlink"&gt;vulcanlink&lt;/a&gt; - chainlink as Dapp GW&lt;ul&gt;
&lt;li&gt;&lt;a href="https://vulcan.link/"&gt;Vulcan Link&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Dedicated &lt;a href="https://elastos.academy/did/"&gt;Elastos DID sidechain&lt;/a&gt; as customer IdM cluster&lt;ul&gt;
&lt;li&gt;&lt;a href="https://medium.com/@leo.vigna/bringing-chainlink-to-elastos-mainnet-9134bb3da6c9"&gt;Bringing Chainlink to Elastos Mainnet&lt;/a&gt;    &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://gnosis-safe.io/"&gt;Gnosis Safe&lt;/a&gt; as multisig provider&lt;/li&gt;
&lt;li&gt;Perhaps use aelf as common sidechain?&lt;br&gt;
&lt;img alt="aelf" src="https://pbs.twimg.com/media/EiliSVUVkAAH1Kc?format=jpg&amp;amp;name=large"&gt;&lt;br&gt;
(&lt;em&gt;Image on &lt;a href="https://twitter.com/aelfblockchain/status/1308688001073991680/photo/1"&gt;twitter&lt;/a&gt;&lt;/em&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;More Links&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Docker:&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.docker.com/docker-for-windows/troubleshoot/"&gt;Logs and troubleshooting&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;k8s:&lt;ul&gt;
&lt;li&gt;&lt;a href="https://kubernetes.io/docs/reference/generated/kubectl/kubectl-commands"&gt;Kubectl Reference Docs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kubernetes.io/docs/reference/kubectl/cheatsheet/"&gt;kubectl Cheat Sheet&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.docker.com/docker-for-windows/kubernetes/"&gt;Deploy on Kubernetes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.docker.com/docker-for-windows/kubernetes/#example-app"&gt;Deploy on Kubernetes - Example app&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Vid 2017: &lt;a href="https://www.youtube.com/watch?v=6xJwQgDnMFE"&gt;Create a 2-node Kubernetes cluster in 10 minutes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;When k8s? &lt;a href="https://www.linkedin.com/posts/alexellisuk_then-he-asked-me-is-kubernetes-right-for-activity-6703625976351346688-6343"&gt;Alex Ellis posted on LinkedIn&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Vid: &lt;a href="https://www.youtube.com/watch?v=3RTvoI-A7UQ"&gt;Kubernetes and Container Orchestration 101 - Hanselman&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kubernetes.io/docs/concepts/workloads/pods/init-containers/"&gt;Init Containers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rancher.com/learning-paths/best-practices-for-monitoring-and-alerting-on-kubernetes/"&gt;Best Practices for Monitoring and Alerting on Kubernetes&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/bashofmann/rancher-2.5-monitoring"&gt;bashofmann/rancher-2.5-monitoring&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rancher.com/events"&gt;Events&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;k3s (k8s that can run on Raspberry Pi):&lt;ul&gt;
&lt;li&gt;SaaS: &lt;a href="https://www.civo.com/"&gt;Managed Kubernetes service, powered by k3s - Civo.com&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Kind:&lt;ul&gt;
&lt;li&gt;&lt;a href="https://kind.sigs.k8s.io/#installation-and-usage"&gt;Installation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kind.sigs.k8s.io/docs/user/quick-start/"&gt;Quick start&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;helm: &lt;ul&gt;
&lt;li&gt;&lt;a href="https://artifacthub.io/"&gt;Artifact Hub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Arkade:&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/alexellis/arkade"&gt;alexellis/arkade&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.linkedin.com/posts/alexellisuk_kubernetes-cloudnative-cncf-activity-6702550586610487296-atGD"&gt;Alex Ellis - arkade&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Vid 2020: &lt;a href="https://www.youtube.com/watch?v=8wU9s_mua8M"&gt;Walk-through of arkade - for Kubernetes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OpenFaaS:&lt;ul&gt;
&lt;li&gt;My blog 2019:&lt;a href="https://rasor.github.io/openfaas-on-windows-devbox.html"&gt;OpenFaaS on Windows Devbox&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.openfaas.com/deployment/kubernetes/"&gt;Kubernetes - OpenFaaS&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;VPN Connect to OnPrem server/service&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.inlets.dev/#/"&gt;inlets: Cloud Native Tunnel&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Ngrok&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The End&lt;/p&gt;</content><category term="DevOps"></category><category term="#arkade"></category><category term="#docker"></category><category term="#openfaas"></category><category term="#curl"></category><category term="#hyperv"></category><category term="#virtualbox"></category><category term="#kitematic"></category><category term="#wsl2"></category><category term="#win10"></category><category term="#virtualmachineplatform"></category><category term="#kubernetes-dashboard"></category><category term="#metrics-server"></category><category term="#k8s"></category></entry><entry><title>Docker Desktop for Windows on WSL2 - Part 0.1</title><link href="https://rasor.github.io/docker-desktop-for-windows-on-wsl2-part-01.html" rel="alternate"></link><published>2020-09-07T00:00:00+02:00</published><updated>2020-11-09T10:30:00+01:00</updated><author><name>rasor</name></author><id>tag:rasor.github.io,2020-09-07:/docker-desktop-for-windows-on-wsl2-part-01.html</id><summary type="html">&lt;p&gt;This blog is part of a serie:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://rasor.github.io/docker-desktop-for-windows-on-wsl2-part-01.html"&gt;Part 0.1: Install Docker Desktop on Windows 10 Home - including WSL&lt;/a&gt; (this blog)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rasor.github.io/k8s-on-windows-devbox-part-02.html"&gt;Part 0.2: Install k8s using kind on Windows - including arkade&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Other coming ...&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In this blog I just wanted Docker on my Windows 10 Home box.&lt;br&gt;
I ended up …&lt;/p&gt;</summary><content type="html">&lt;p&gt;This blog is part of a serie:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://rasor.github.io/docker-desktop-for-windows-on-wsl2-part-01.html"&gt;Part 0.1: Install Docker Desktop on Windows 10 Home - including WSL&lt;/a&gt; (this blog)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rasor.github.io/k8s-on-windows-devbox-part-02.html"&gt;Part 0.2: Install k8s using kind on Windows - including arkade&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Other coming ...&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In this blog I just wanted Docker on my Windows 10 Home box.&lt;br&gt;
I ended up with upgrading Windows allowing me to install Docker Desktop running on WSL2.&lt;br&gt;
This is the path I took to get there and some additional experiments I had with WSL2.  &lt;/p&gt;
&lt;h1&gt;Getting Docker up working&lt;/h1&gt;
&lt;h2&gt;Something nice-to-know&lt;/h2&gt;
&lt;p&gt;I have run docker some times before, where it was running on Hyper-V on a Windows 10 Pro. I thought I was going to perhaps run on Hyper-V or VirtualBox.  &lt;/p&gt;
&lt;p&gt;Info:  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Docker needs a hypervisor, which on Windows can either be &lt;strong&gt;hyper-v&lt;/strong&gt;, &lt;strong&gt;VirtualBox&lt;/strong&gt; and now also &lt;strong&gt;Virtual Machine Platform&lt;/strong&gt;.  &lt;ul&gt;
&lt;li&gt;Ref: &lt;a href="https://superuser.com/a/1510175"&gt;Hypervisor alternatives&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Docker Desktop For Windows (DD4W)&lt;/strong&gt; superseeds &lt;strong&gt;Docker CE For Windows (DCE4W)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Presumingly DD4W runs on top of &lt;a href="https://docs.microsoft.com/en-us/windows/wsl/wsl2-about"&gt;WSL2&lt;/a&gt;, so it is only on Windows 10 from May 2020&lt;/li&gt;
&lt;li&gt;DCE4W:&lt;ul&gt;
&lt;li&gt;By default &lt;a href="https://hub.docker.com/editions/community/docker-ce-desktop-windows"&gt;DCE4W&lt;/a&gt; will use hyper-v.  &lt;/li&gt;
&lt;li&gt;If you wanted to use VirtualBox you could get it included with &lt;a href="https://kitematic.com/"&gt;Kitematic&lt;/a&gt; in &lt;a href="https://docs.docker.com/toolbox/overview/"&gt;Docker Toolbox&lt;/a&gt;. You could then can use Kitematic to swap from hyper-v to ViretualBox.  &lt;/li&gt;
&lt;li&gt;With DD4W then &lt;strong&gt;Docker Toolbox&lt;/strong&gt;, &lt;strong&gt;Kitematic&lt;/strong&gt; and &lt;strong&gt;Docker machine&lt;/strong&gt; are &lt;a href="https://docs.docker.com/kitematic/userguide/"&gt;superceeded products&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;My older blogs on howto install DCE4W:&lt;ul&gt;
&lt;li&gt;&lt;a href="https://rasor.github.io/docker-for-windows.html"&gt;Docker for Windows&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Heading Practice &lt;a href="https://rasor.github.io/openfaas-on-windows-devbox.html"&gt;on this blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Install Docker&lt;/h2&gt;
&lt;p&gt;In the beginning I didn't want to upgrade Windows - I thought I could make it work without upgrade.&lt;br&gt;
Here is how it went on:  &lt;/p&gt;
&lt;p&gt;To check if you have Docker. Start by typing    &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker -v
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;to see if you already have docker installed.  &lt;/p&gt;
&lt;p&gt;I Downloaded latest DD4W. I tried to use &lt;a href="https://docs.docker.com/docker-for-windows/release-notes/#docker-desktop-community-2304"&gt;v.2.3.0.4&lt;/a&gt;  &lt;/p&gt;
&lt;p&gt;I had several issues and possible solutions:  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Tried to install v.2.3.0.4 gave me this error:&lt;ul&gt;
&lt;li&gt;Error: &lt;code&gt;Docker Desktop requires Windows 10 Pro/Enterprise (15063+) or Windows 10 Home (19018+).&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Mine was only Home os 18362 / &lt;a href="https://docs.microsoft.com/en-us/windows/release-information/"&gt;v1909&lt;/a&gt; (see System Information) &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Yet a failed try: &lt;a href="https://docs.docker.com/docker-for-windows/release-notes/#docker-desktop-community-2105"&gt;Download DD4W v.2.1.0.5&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;Error: &lt;code&gt;Docker Desktop requires Windows 10 Pro or Enterprise version 15063 to run.&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Yet a failed try: &lt;a href="https://docs.docker.com/docker-for-windows/release-notes/#docker-community-edition-2000-win81-2018-12-07"&gt;Download DCE4W v.2.0.0.0&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;Error: &lt;code&gt;Docker for Windows requires Windows 10 Pro or Enterprise version 14393 to run.&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Yet a failed try: &lt;a href="https://docs.docker.com/docker-for-windows/release-notes/#docker-community-edition-17091-ce-win42-2017-12-11"&gt;Download DCE4W v.17.0.9.1&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;Error: &lt;code&gt;Docker for Windows requires Windows 10 Pro or Enterprise version 10586, or Windows server 2016 RTM to run&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Yet a failed try: &lt;a href="https://docs.docker.com/docker-for-windows/release-notes/#docker-community-edition-17090-ce-win33-2017-10-06"&gt;Download DCE4W v.17.0.9.0&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;Error: &lt;code&gt;Unable to stop: The running command stopped because the preference variable "ErrorActionPreference" or common parameter is set to Stop: The specified module 'Hyper-V' was not loaded because no valid module file was found in any module directory.&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;OK, Hyper-V needs to be activated - Activate the &lt;code&gt;windows hypervisor platform&lt;/code&gt; feature.&lt;br&gt;
&lt;img alt="Activate win hypervisor" src="../img/2020/2020-09-06-OpenFaaS10.PNG" title="Activate win hypervisor"&gt;  &lt;/li&gt;
&lt;li&gt;Boot the PC&lt;/li&gt;
&lt;li&gt;Uninstall DCE4W&lt;/li&gt;
&lt;li&gt;Re-install DCE4w&lt;/li&gt;
&lt;li&gt;Start DCE4w&lt;/li&gt;
&lt;li&gt;Error - same as above - yak!&lt;/li&gt;
&lt;li&gt;Deactivate &lt;code&gt;windows hypervisor platform&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Please uninstall DCE4W again.&lt;/li&gt;
&lt;li&gt;Boot PC&lt;/li&gt;
&lt;li&gt;Apparently win Hypervisor does not cover for hyper-v from this old Docker version!  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Yet a failed try: Trying to install hyper-v on win 10 home:  &lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# https://answers.microsoft.com/en-us/windows/forum/all/hyper-v-is-missing/191e7c79-2c95-4417-b877-f40f6f856108&lt;/span&gt;
dism.exe /Online /Enable-Feature:Microsoft-Hyper-V /All

&lt;span class="c1"&gt;# Deployment Image Servicing and Management tool&lt;/span&gt;
&lt;span class="c1"&gt;# Version: 10.0.18362.900&lt;/span&gt;

&lt;span class="c1"&gt;# Image Version: 10.0.18362.1016&lt;/span&gt;

&lt;span class="c1"&gt;# Error: 0x800f080c&lt;/span&gt;

&lt;span class="c1"&gt;# Feature name Microsoft-Hyper-V is unknown.&lt;/span&gt;
&lt;span class="c1"&gt;# A Windows feature name was not recognized.&lt;/span&gt;
&lt;span class="c1"&gt;# Use the /Get-Features option to find the name of the feature in the image and try the command again.&lt;/span&gt;

&lt;span class="c1"&gt;# The DISM log file can be found at C:\windows\Logs\DISM\dism.log&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Status:&lt;br&gt;
I could not install Hyper-V on the Windows 10 Home! It requires Pro or more.&lt;br&gt;
So I could choose between running on VirtualBox or update Windows so I could run on WSL2.&lt;br&gt;
I thought that now I had already wasted much time, then I could just as well go for the trouble and install WSL2:  &lt;/p&gt;
&lt;p&gt;Install WSL2:  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.microsoft.com/en-us/software-download/windows10"&gt;Download Windows 10 may 2020 update (v 2004)&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;Click Update Now - this takes a loooong time.&lt;/li&gt;
&lt;li&gt;Boot the PC&lt;/li&gt;
&lt;li&gt;Now running os 10.0.19041.423 &lt;a href="https://docs.microsoft.com/en-us/windows/release-information/"&gt;v2004&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;OK, another Hypervisor needs to be activated - Activate the &lt;code&gt;Virtual Machine Platform&lt;/code&gt; feature.
&lt;img alt="Activate Virtual Machine Platform" src="../img/2020/2020-09-06-OpenFaaS11.PNG" title="Activate Virtual Machine Platform"&gt;&lt;/li&gt;
&lt;li&gt;Boot the PC&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Next install Docker Desktop:  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.docker.com/docker-for-windows/release-notes/#docker-desktop-community-2304"&gt;Download DD4W v.2.3.0.4&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;Choose to enable WSL2&lt;br&gt;
&lt;img alt="Enable WSL2" src="../img/2020/2020-09-06-OpenFaaS12.PNG" title="Enable WSL2"&gt;  &lt;/li&gt;
&lt;li&gt;Boot the PC&lt;/li&gt;
&lt;li&gt;WSL2 is now enabled&lt;br&gt;
&lt;img alt="WSL2 enabled" src="../img/2020/2020-09-06-OpenFaaS15.PNG" title="WSL2 enabled"&gt;  &lt;/li&gt;
&lt;li&gt;Now you are told to &lt;a href="https://docs.microsoft.com/en-us/windows/wsl/wsl2-kernel"&gt;Update the WSL2 Linux kernel&lt;/a&gt;&lt;br&gt;
&lt;img alt="Update Linux kernel" src="../img/2020/2020-09-06-OpenFaaS13.PNG" title="Update Linux kernel"&gt;  &lt;/li&gt;
&lt;li&gt;From the link you enter a web, where you can download the X64 update. When you execute it, you see&lt;br&gt;
&lt;img alt="WSL2 Update wiz" src="../img/2020/2020-09-06-OpenFaaS14.PNG" title="WSL2 Update wiz"&gt;  &lt;/li&gt;
&lt;li&gt;Now press &lt;code&gt;Restart&lt;/code&gt; - This restarts DD4W - and now it will come up in state &lt;code&gt;runnning&lt;/code&gt;. You can see it in the taskbar.
&lt;img alt="DD4W running" src="../img/2020/2020-09-06-OpenFaaS17.PNG" title="DD4W running"&gt;  &lt;/li&gt;
&lt;li&gt;There is a new &lt;code&gt;virtual network adapter (WSL)&lt;/code&gt;. Before - with Hyper-V there were two: &lt;code&gt;Default switch&lt;/code&gt; and &lt;code&gt;DockerNAT&lt;/code&gt;&lt;br&gt;
&lt;img alt="WSL virtual network adapter" src="../img/2020/2020-09-06-OpenFaaS19.PNG" title="WSL virtual network adapter"&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Check that Docker is installed&lt;/span&gt;
docker -v
&lt;span class="c1"&gt;# Docker version 19.03.12, build 48a66213fe&lt;/span&gt;

&lt;span class="c1"&gt;# Check WSL modes (1 or 2):&lt;/span&gt;
wsl -l -v
&lt;span class="c1"&gt;#   NAME                   STATE           VERSION&lt;/span&gt;
&lt;span class="c1"&gt;# * docker-desktop         Running         2&lt;/span&gt;
&lt;span class="c1"&gt;#   docker-desktop-data    Running         2&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Some extra tips:   &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Visual Studio Code recommends to install &lt;a href="https://marketplace.visualstudio.com/items?itemName=ms-vscode-remote.remote-wsl"&gt;Remote - WSL extension&lt;/a&gt;&lt;br&gt;
&lt;img alt="VSCode WSL extension" src="../img/2020/2020-09-06-OpenFaaS16.PNG" title="VSCode WSL extension"&gt;  &lt;/li&gt;
&lt;li&gt;This enables you to start a terminal into the Linux machines running in WSL2&lt;br&gt;
&lt;img alt="Connect to WSL2 machines" src="../img/2020/2020-09-06-OpenFaaS18.PNG" title="Connect to WSL2 machines"&gt;  &lt;/li&gt;
&lt;li&gt;In DD4W settings you see that with Win Home you can only run in WSL2 (opposed to Hyper-V or VirtualBox). We know that - we had to update Win 10 to v2004 in order to install DD4W!&lt;br&gt;
&lt;img alt="DD4W settings" src="../img/2020/2020-09-06-OpenFaaS20.PNG" title="DD4W settings"&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Great - Docker is running on WSL2 now.  &lt;/p&gt;
&lt;h1&gt;Using Docker&lt;/h1&gt;
&lt;p&gt;I'll follow up on using Docker in another blog. Here I'll just remind you that you need somewhere to get Docker images from.  &lt;/p&gt;
&lt;h2&gt;Connect to an Image Registry - DockerHub&lt;/h2&gt;
&lt;p&gt;When using Docker you need an image registry to read base images from and to save your images to.
I'll just use the public and free &lt;strong&gt;Docker hub&lt;/strong&gt;.&lt;br&gt;
If you don't have an account then create one.  &lt;/p&gt;
&lt;p&gt;&lt;img alt="SignIn to DockerHub" src="../img/2020/2020-09-06-OpenFaaS21.PNG" title="SignIn to DockerHub"&gt;  &lt;/p&gt;
&lt;h1&gt;Using WSL2&lt;/h1&gt;
&lt;p&gt;WSL not only gives Linux distros hosting Docker.&lt;br&gt;
It also gives you possibility to host other Linux distros - for instance if you want to develop inside a Linix disto running in WSL on Windows.  &lt;/p&gt;
&lt;h2&gt;Develop remote in WSL2 with Docker&lt;/h2&gt;
&lt;p&gt;A development strategy - here just an experiment.  &lt;/p&gt;
&lt;p&gt;If you have the need of developing in Linux then you can use WSL as your DevBox - cool, if you need that.  &lt;br&gt;
I had an idea of developing in the Linux CentOS distro, since it is where the community edition of OpenShift is installed by default (or that is something like that I think it is).&lt;br&gt;
Here is where that brought me:  &lt;/p&gt;
&lt;p&gt;By using workflow &lt;a href="https://docs.docker.com/docker-for-windows/wsl/#develop-with-docker-and-wsl-2"&gt;Develop with Docker and WSL2&lt;/a&gt; then you work with VSCode in your default Linux distro running in WSL2.&lt;br&gt;
Using VSCode extention &lt;a href="https://marketplace.visualstudio.com/items?itemName=ms-vscode-remote.remote-wsl"&gt;Remote - WSL&lt;/a&gt; then you can get a remote CLI into your linux distro by typing &lt;code&gt;wsl&lt;/code&gt; (and &lt;code&gt;exit&lt;/code&gt; to get back locally).&lt;br&gt;
From the remote CLI you startup vscode just as when you work locally: &lt;code&gt;code .&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;Choosing and installing a Linux Distro&lt;/h3&gt;
&lt;p&gt;But you might be missing a WSL2 distro - I did:
&lt;img alt="Missing WSL2 distro" src="../img/2020/2020-09-06-OpenFaaS22.PNG" title="Missing WSL2 distro"&gt;&lt;br&gt;
There is a small &lt;a href="https://docs.microsoft.com/en-us/windows/wsl/install-win10#install-your-linux-distribution-of-choice"&gt;selection of distros&lt;/a&gt;.  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Most of all I wanted a CenOS distro, since I want to have OpenShift in it and CentOS is the RedHat community version coming with OpenShift.  &lt;/li&gt;
&lt;li&gt;There is &lt;a href="https://www.microsoft.com/da-dk/p/pengwin-enterprise/9n8lp0x93vcp?rtc=1&amp;amp;activetab=pivot:overviewtab"&gt;Pengwin Enterprise&lt;/a&gt; based on CentOS, but what - now Microsoft wants me to pay for Linúx???&lt;br&gt;
And also Biz users are required to get a Red Hat Enterprise Linux subscription, when using it.  &lt;/li&gt;
&lt;li&gt;I'll go for 2nd best which is &lt;a href="https://en.wikipedia.org/wiki/List_of_Linux_distributions#RPM-based"&gt;another RPM based distro&lt;/a&gt;.  &lt;/li&gt;
&lt;li&gt;I can choose between Fedora and OpenSuse.
Also &lt;a href="https://www.microsoft.com/da-dk/p/fedora-remix-for-wsl/9n6gdm4k2hnc?rtc=1&amp;amp;activetab=pivot:overviewtab"&gt;Fedora Remix for WSL&lt;/a&gt; is not free....  &lt;/li&gt;
&lt;li&gt;So remaining is &lt;a href="https://www.microsoft.com/da-dk/p/opensuse-leap-15-1/9njfzk00fgkv?rtc=1&amp;amp;activetab=pivot:overviewtab"&gt;openSUSE-Leap-15-1&lt;/a&gt;, which still is free.  &lt;/li&gt;
&lt;li&gt;Also there are two SUSE Enterprise for free.  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;A little sidestep to OpenShift&lt;/h3&gt;
&lt;p&gt;As an alternative to have CentOS there are&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.openshift.com/blog/guide-to-installing-an-okd-4-4-cluster-on-your-home-lab"&gt;Guide to Installing an OKD 4.4 Cluster on your Home Lab&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://itnext.io/guide-installing-an-okd-4-5-cluster-508a2631cbee"&gt;Installing an OKD 4.5 Cluster&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://computingforgeeks.com/setup-openshift-origin-local-cluster-on-centos/"&gt;Setup Local OpenShift Origin (OKD) Cluster on CentOS 7&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Install &lt;a href="https://www.okd.io/"&gt;OKD - The Community Distribution of Kubernetes that powers Red Hat OpenShift.&lt;/a&gt; (before: openshift.org)&lt;/li&gt;
&lt;li&gt;Install &lt;a href="https://kubic.opensuse.org/"&gt;openSUSE Kubic&lt;/a&gt; container manager&lt;ul&gt;
&lt;li&gt;Install &lt;a href="https://hackweek.suse.com/17/projects/openshift-origin-on-kubic?"&gt;OpenShift Origin on Kubic&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Kubic is using &lt;a href="https://cri-o.io/"&gt;cri-o&lt;/a&gt; container runtime&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://software.opensuse.org/package/rubygem-rhc"&gt;OpenShift Client Tools&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://computingforgeeks.com/how-to-setup-openshift-origin-on-ubuntu/"&gt;Setup OpenShift Origin (OKD) on Ubuntu 19.04/18.04/16.04&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.techrepublic.com/article/how-to-install-openshift-origin-on-ubuntu-18-04/"&gt;Install OpenShift Origin on Ubuntu 18.04&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;And perhaps this could be of interest&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Yet another pod manager &lt;a href="https://podman.io/getting-started/installation.html"&gt;Podman Installation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.infoworld.com/article/3265059/10-kubernetes-distributions-leading-the-container-revolution.html"&gt;10 Kubernetes distributions leading the container revolution&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Install a WSL distro&lt;/h3&gt;
&lt;p&gt;&lt;img alt="Installing WSL2 distro" src="../img/2020/2020-09-06-OpenFaaS23.PNG" title="Installing WSL2 distro"&gt;&lt;br&gt;
Note: You have to give this WSL PC a default username and psw - just like your Windows box.  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;wsl -l -v
&lt;span class="c1"&gt;#   NAME                   STATE           VERSION&lt;/span&gt;
&lt;span class="c1"&gt;# * docker-desktop         Running         2      &lt;/span&gt;
&lt;span class="c1"&gt;#   docker-desktop-data    Running         2      &lt;/span&gt;
&lt;span class="c1"&gt;#   openSUSE-Leap-15-1     Running         1&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Hmm - Suse is not running wsl2 and is not default&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# future WSLs will be v2&lt;/span&gt;
wsl --set-default-version &lt;span class="m"&gt;2&lt;/span&gt;

&lt;span class="c1"&gt;# set suse v2&lt;/span&gt;
wsl --set-version openSUSE-Leap-15-1 &lt;span class="m"&gt;2&lt;/span&gt;
&lt;span class="c1"&gt;# Conversion in progress, this may take a few minutes...&lt;/span&gt;
&lt;span class="c1"&gt;# For information on key differences with WSL 2 please visit https://aka.ms/wsl2&lt;/span&gt;
&lt;span class="c1"&gt;# Conversion complete.&lt;/span&gt;

&lt;span class="c1"&gt;# so what is status now?&lt;/span&gt;
wsl -l -v
&lt;span class="c1"&gt;#   NAME                   STATE           VERSION&lt;/span&gt;
&lt;span class="c1"&gt;#   openSUSE-Leap-15-1     Stopped         2&lt;/span&gt;

&lt;span class="c1"&gt;# Please help&lt;/span&gt;
wsl -h
&lt;span class="c1"&gt;# Usage: wsl.exe [Argument] [Options...] [CommandLine]&lt;/span&gt;
&lt;span class="c1"&gt;# Options:&lt;/span&gt;
&lt;span class="c1"&gt;#     --distribution, -d &amp;lt;Distro&amp;gt;&lt;/span&gt;
&lt;span class="c1"&gt;#         Run the specified distribution.&lt;/span&gt;

&lt;span class="c1"&gt;# Arguments for managing Windows Subsystem for Linux:&lt;/span&gt;
&lt;span class="c1"&gt;#     --set-default, -s &amp;lt;Distro&amp;gt;&lt;/span&gt;
&lt;span class="c1"&gt;#         Sets the distribution as the default.&lt;/span&gt;

&lt;span class="c1"&gt;# set suse default and start it&lt;/span&gt;
wsl --set-default openSUSE-Leap-15-1

&lt;span class="c1"&gt;# so what is status now?&lt;/span&gt;
wsl -l -v
&lt;span class="c1"&gt;#   NAME                   STATE           VERSION&lt;/span&gt;
&lt;span class="c1"&gt;# * openSUSE-Leap-15-1     Running         2&lt;/span&gt;

&lt;span class="c1"&gt;# Now you can enter your default SUSE wsl just by typing&lt;/span&gt;
wsl
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Note about sharing folders&lt;/h3&gt;
&lt;p&gt;Notice the local folder in Windows is mounted inside the Linux distro,&lt;br&gt;
so you are able to work from Linux on your files in your Windows drive.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;rasorwin@MYPC&amp;gt; &lt;span class="c1"&gt;# Now in Windows&lt;/span&gt;
rasorwin@MYPC❯ wsl &lt;span class="c1"&gt;# Enter SUSE &lt;/span&gt;
rasorsuse@MYPC:/mnt/c/Users/rasorwin&amp;gt; &lt;span class="nb"&gt;cd&lt;/span&gt; .. &lt;span class="c1"&gt;# Notice current dir is in windows&lt;/span&gt;
rasorsuse@MYPC:/mnt/c/Users&amp;gt; ls
All Users  Default  Default User  desktop.ini  Public  rasorwin
rasorsuse@MYPC:/mnt/c/Users&amp;gt; &lt;span class="nb"&gt;exit&lt;/span&gt; &lt;span class="c1"&gt;# Go back into windows&lt;/span&gt;
&lt;span class="nb"&gt;logout&lt;/span&gt;
rasorwin@MYPC&amp;gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Best practice for &lt;strong&gt;sharing folders&lt;/strong&gt; are not sharing windows into linux, but instead &lt;a href="https://docs.docker.com/docker-for-windows/wsl/#best-practices"&gt;sharing linux out to windows&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Docker integration&lt;/h3&gt;
&lt;p&gt;Going back in docker - Press Refresh - then you will also see your OpenSuse installed&lt;br&gt;
&lt;img alt="WSL2 distro installed" src="../img/2020/2020-09-06-OpenFaaS24.PNG" title="WSL2 distro installed"&gt;&lt;br&gt;
you don't have to enable integration there, since you have set it default and you have enabled integration to default distro.&lt;/p&gt;
&lt;h1&gt;USeful Links&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.docker.com/docker-for-windows/install-windows-home/"&gt;Install Docker Desktop on Windows Home&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.docker.com/docker-for-windows/faqs/"&gt;DD4W Frequently asked questions (FAQ)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Deploy containers to cloud without k8s:&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.docker.com/engine/context/aci-integration/"&gt;Deploying Docker containers on Azure ACI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.docker.com/engine/context/ecs-integration/"&gt;Deploying Docker containers on Amazon ECS&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The End&lt;/p&gt;</content><category term="DevOps"></category><category term="#docker"></category><category term="#hyperv"></category><category term="#virtualbox"></category><category term="#openfaas"></category><category term="#kitematic"></category><category term="#wsl2"></category><category term="#win10"></category><category term="#virtualmachineplatform"></category></entry><entry><title>Neo4j on Windows</title><link href="https://rasor.github.io/neo4j-on-windows.html" rel="alternate"></link><published>2019-05-08T00:00:00+02:00</published><updated>2019-05-15T00:00:00+02:00</updated><author><name>rasor</name></author><id>tag:rasor.github.io,2019-05-08:/neo4j-on-windows.html</id><summary type="html">&lt;p&gt;Time for me to play with Neo4j. I have a project, where a graph DB makes most sense. In this blog I'll install Neo4j on Windows.&lt;br&gt;
First I'll install a docker version. It might come handy in deployment case.&lt;br&gt;
Next I'll install a Desktop version to get a GUI both …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Time for me to play with Neo4j. I have a project, where a graph DB makes most sense. In this blog I'll install Neo4j on Windows.&lt;br&gt;
First I'll install a docker version. It might come handy in deployment case.&lt;br&gt;
Next I'll install a Desktop version to get a GUI both for management, but mostly for a data editing interface.  &lt;/p&gt;
&lt;h2&gt;Neo4j - editions&lt;/h2&gt;
&lt;p&gt;So what is out there to install?&lt;/p&gt;
&lt;p&gt;On the &lt;a href="https://neo4j.com/download-center/"&gt;Neo4j Download&lt;/a&gt; page you have options to download &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;two server versions, &lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Enterprise&lt;/strong&gt; or &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Community&lt;/strong&gt;. You also have option of downloading &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;a &lt;strong&gt;Desktop&lt;/strong&gt; version with a &lt;strong&gt;GUI&lt;/strong&gt; included.&lt;/li&gt;
&lt;li&gt;A Cypher &lt;strong&gt;CLI&lt;/strong&gt; is a separate install.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="https://neo4j.com/developer/kb/using-neo4j-shell-neo4j-ce-3x/"&gt;Neo4j KB article&lt;/a&gt; talks about &lt;strong&gt;CLIs&lt;/strong&gt;. There you find a handy script for a Neo4j &lt;strong&gt;docker container&lt;/strong&gt;. &lt;/p&gt;
&lt;p&gt;From the the download page I'll grap&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Neo4j Desktop&lt;/li&gt;
&lt;li&gt;SDK for JavaScript and possibly some plugins&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;From the KB article I'll grap the Neo4j Docker script and modify it a bit.&lt;/p&gt;
&lt;h2&gt;Install Docker Container edition&lt;/h2&gt;
&lt;p&gt;From &lt;a href="https://neo4j.com/developer/kb/using-neo4j-shell-neo4j-ce-3x/"&gt;Neo4j KB article&lt;/a&gt; you'll find this script:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Script from https://neo4j.com/developer/kb/using-neo4j-shell-neo4j-ce-3x/&lt;/span&gt;
docker pull neo4j
&lt;span class="nv"&gt;CONTAINER&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;docker run -d --name neo4j -p &lt;span class="m"&gt;7474&lt;/span&gt;:7474 -v /path/to/data:/data -v /path/to/csv-files:/var/lib/neo4j/import neo4j&lt;span class="k"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Running Neo4j as &lt;/span&gt;&lt;span class="nv"&gt;$CONTAINER&lt;/span&gt;&lt;span class="s2"&gt;, waiting for startup&amp;quot;&lt;/span&gt;
sleep &lt;span class="m"&gt;10&lt;/span&gt;
&lt;span class="c1"&gt;# to import a file from `/path/to/csv-files/import.cypher`&lt;/span&gt;
docker &lt;span class="nb"&gt;exec&lt;/span&gt; &lt;span class="nv"&gt;$CONTAINER&lt;/span&gt; /var/lib/neo4j/bin/neo4j-shell -f /var/lib/neo4j/import/import.cypher
&lt;span class="c1"&gt;# or for interactive mode&lt;/span&gt;
docker &lt;span class="nb"&gt;exec&lt;/span&gt; -ti &lt;span class="nv"&gt;$CONTAINER&lt;/span&gt; /var/lib/neo4j/bin/neo4j-shell
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Here is what I modified it to on Windows:  &lt;/p&gt;
&lt;p&gt;From CMD: (Run as admin)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Set envir for Neo4j database files - notice folder format is not Linux, though it will be used from GIT BASH&lt;/span&gt;
setx NEO_DATA &lt;span class="s2"&gt;&amp;quot;C:\Users\user\ItData\neodata\neo4jDatabases&amp;quot;&lt;/span&gt; /M
&lt;span class="c1"&gt;# SUCCESS: Specified value was saved.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;From Git Bash:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Optionally do some cleanup:&lt;/span&gt;
docker system prune
&lt;span class="c1"&gt;# WARNING! This will remove:&lt;/span&gt;
&lt;span class="c1"&gt;#         - all stopped containers&lt;/span&gt;
&lt;span class="c1"&gt;#         - all networks not used by at least one container&lt;/span&gt;
&lt;span class="c1"&gt;#         - all dangling images&lt;/span&gt;
&lt;span class="c1"&gt;#         - all dangling build cache&lt;/span&gt;
&lt;span class="c1"&gt;# Are you sure you want to continue? [y/N] y&lt;/span&gt;

&lt;span class="c1"&gt;# Download image from docker hub&lt;/span&gt;
&lt;span class="c1"&gt;# 3.5.5 is currently latest neo4j image&lt;/span&gt;
docker pull neo4j:3.5.5
&lt;span class="c1"&gt;# ...&lt;/span&gt;
&lt;span class="c1"&gt;# Status: Downloaded newer image for neo4j:3.5.5&lt;/span&gt;

&lt;span class="c1"&gt;# Verify envir&lt;/span&gt;
printenv &lt;span class="p"&gt;|&lt;/span&gt; grep NEO
&lt;span class="c1"&gt;# NEO_DATA_BASH=C:\Users\user\ItData\neodata&lt;/span&gt;

&lt;span class="c1"&gt;# Create folder for the container and for CYPHER CSV imports&lt;/span&gt;
&lt;span class="nb"&gt;cd&lt;/span&gt; &lt;span class="nv"&gt;$NEO_DATA&lt;/span&gt;
mkdir docker-container1 &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;cd&lt;/span&gt; docker-container1 &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; mkdir import &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; mkdir data

&lt;span class="c1"&gt;# Start Docker&lt;/span&gt;

&lt;span class="c1"&gt;# Map a DB data folder and an CSV import folder on your PC for a Neo4j container and start it&lt;/span&gt;
&lt;span class="c1"&gt;# https://neo4j.com/docs/operations-manual/current/docker/introduction/#docker-volumes&lt;/span&gt;
&lt;span class="nv"&gt;CONTAINER&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;docker run -d --name neo4j -p &lt;span class="m"&gt;7474&lt;/span&gt;:7474 -v &lt;span class="nv"&gt;$NEO_DATA&lt;/span&gt;/docker-container1/data:/data -v &lt;span class="nv"&gt;$NEO_DATA&lt;/span&gt;/docker-container1/import:/var/lib/neo4j/import neo4j&lt;span class="k"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Running Neo4j as &lt;/span&gt;&lt;span class="nv"&gt;$CONTAINER&lt;/span&gt;&lt;span class="s2"&gt;, waiting for startup&amp;quot;&lt;/span&gt;
sleep &lt;span class="m"&gt;10&lt;/span&gt;

&lt;span class="c1"&gt;# iIs it running?&lt;/span&gt;
docker ps
&lt;span class="c1"&gt;# CONTAINER ID        IMAGE                         COMMAND                  CREATED              STATUS              PORTS                                        NAMES&lt;/span&gt;
&lt;span class="c1"&gt;# 95f89a2b0956        neo4j                         &amp;quot;/sbin/tini -g -- /d…&amp;quot;   About a minute ago   Up About a minute   7473/tcp, 7687/tcp, 0.0.0.0:7474-&amp;gt;7474/tcp   neo4j&lt;/span&gt;

&lt;span class="c1"&gt;# Whats in its log? &lt;/span&gt;
docker logs neo4j
&lt;span class="c1"&gt;# Active database: graph.db&lt;/span&gt;
&lt;span class="c1"&gt;# Directories in use:&lt;/span&gt;
&lt;span class="c1"&gt;#   home:         /var/lib/neo4j&lt;/span&gt;
&lt;span class="c1"&gt;#   config:       /var/lib/neo4j/conf&lt;/span&gt;
&lt;span class="c1"&gt;#   logs:         /logs&lt;/span&gt;
&lt;span class="c1"&gt;#   plugins:      /var/lib/neo4j/plugins&lt;/span&gt;
&lt;span class="c1"&gt;#   import:       /var/lib/neo4j/import&lt;/span&gt;
&lt;span class="c1"&gt;#   data:         /var/lib/neo4j/data&lt;/span&gt;
&lt;span class="c1"&gt;#   certificates: /var/lib/neo4j/certificates&lt;/span&gt;
&lt;span class="c1"&gt;#   run:          /var/lib/neo4j/run&lt;/span&gt;
&lt;span class="c1"&gt;# Starting Neo4j.&lt;/span&gt;

&lt;span class="c1"&gt;# So when container was started it created a DB with&lt;/span&gt;

&lt;span class="c1"&gt;# to import a file from `$NEO_DATA_BASH/import/import.cypher`&lt;/span&gt;
&lt;span class="c1"&gt;# docker exec $CONTAINER /var/lib/neo4j/bin/neo4j-shell -f /var/lib/neo4j/import/import.cypher&lt;/span&gt;

&lt;span class="c1"&gt;# or for interactive mode&lt;/span&gt;
docker &lt;span class="nb"&gt;exec&lt;/span&gt; -ti &lt;span class="nv"&gt;$CONTAINER&lt;/span&gt; /var/lib/neo4j/bin/neo4j-shell
&lt;span class="c1"&gt;# the input device is not a TTY.  If you are using mintty, try prefixing the command with &amp;#39;winpty&amp;#39;&lt;/span&gt;

&lt;span class="c1"&gt;# Annoying could not connect - the one fix I know is to repeat the command from the PS1 Docker CLI, which you can start from Kitematic or directly from Kitematic&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;From Kitematic:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Select the &lt;strong&gt;neo4j&lt;/strong&gt; container&lt;/li&gt;
&lt;li&gt;Press &lt;strong&gt;EXEC&lt;/strong&gt; icon&lt;ul&gt;
&lt;li&gt;This will open a PS1 prompt&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c"&gt;# where are we?&lt;/span&gt;
&lt;span class="nb"&gt;pwd&lt;/span&gt;
&lt;span class="c"&gt;# /var/lib/neo4j&lt;/span&gt;

&lt;span class="c"&gt;# What is the version?&lt;/span&gt;
&lt;span class="p"&gt;./&lt;/span&gt;&lt;span class="n"&gt;bin&lt;/span&gt;&lt;span class="p"&gt;/&lt;/span&gt;&lt;span class="n"&gt;neo4j&lt;/span&gt; &lt;span class="p"&gt;-&lt;/span&gt;&lt;span class="n"&gt;-version&lt;/span&gt;
&lt;span class="c"&gt;# neo4j 3.5.5&lt;/span&gt;

&lt;span class="c"&gt;# now run the shell from here - neo4j-shell is now cypher-shell&lt;/span&gt;
&lt;span class="p"&gt;./&lt;/span&gt;&lt;span class="n"&gt;bin&lt;/span&gt;&lt;span class="p"&gt;/&lt;/span&gt;&lt;span class="n"&gt;cypher-shell&lt;/span&gt;
&lt;span class="c"&gt;# username: neo4j&lt;/span&gt;
&lt;span class="c"&gt;# password: neo4j&lt;/span&gt;
&lt;span class="c"&gt;# Connected to Neo4j 3.5.5 at bolt://localhost:7687 as user neo4j.&lt;/span&gt;
&lt;span class="c"&gt;# Type :help for a list of available commands or :exit to exit the shell.&lt;/span&gt;
&lt;span class="c"&gt;# Note that Cypher queries must end with a semicolon.&lt;/span&gt;
&lt;span class="c"&gt;# neo4j&amp;gt;&lt;/span&gt;
&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="n"&gt;help&lt;/span&gt;
&lt;span class="c"&gt;# Available commands:&lt;/span&gt;
&lt;span class="c"&gt;#   :begin    Open a transaction&lt;/span&gt;
&lt;span class="c"&gt;#   :commit   Commit the currently open transaction&lt;/span&gt;
&lt;span class="c"&gt;#   :exit     Exit the logger&lt;/span&gt;
&lt;span class="c"&gt;#   :help     Show this help message&lt;/span&gt;
&lt;span class="c"&gt;#   :history  Print a list of the last commands executed&lt;/span&gt;
&lt;span class="c"&gt;#   :param    Set the value of a query parameter&lt;/span&gt;
&lt;span class="c"&gt;#   :params   Prints all currently set query parameters and their values&lt;/span&gt;
&lt;span class="c"&gt;#   :rollback Rollback the currently open transaction&lt;/span&gt;
&lt;span class="c"&gt;# For help on a specific command type:&lt;/span&gt;
&lt;span class="c"&gt;#     :help command&lt;/span&gt;
&lt;span class="c"&gt;# For help on cypher please visit:&lt;/span&gt;
&lt;span class="c"&gt;#     https://neo4j.com/docs/developer-manual/current/cypher/&lt;/span&gt;
&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="n"&gt;exit&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;When you are done using the shell you can just close it with Alt+F5.&lt;br&gt;
When you are done with using the DB, you can stop it from GIT BASH&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker stop neo4j
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;More info on &lt;a href="https://hub.docker.com/_/neo4j?tab=description"&gt;Docker Hub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Even more on &lt;a href="https://neo4j.com/docs/operations-manual/current/docker/"&gt;Docker - The Neo4j Operations Manual v3.5&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Tutorial: &lt;a href="https://neo4j.com/developer/guide-importing-data-and-etl/"&gt;Neo4j Data Import: Moving Data from RDBMS to Graph&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Windows Desktop edition&lt;/h2&gt;
&lt;p&gt;It is still nice to have the Desktop edition. You get the browser and you can connect to the docker DB.&lt;/p&gt;
&lt;h3&gt;Install Neo4j Desktop&lt;/h3&gt;
&lt;p&gt;You can install Neo4j for personal use into&lt;br&gt;
&lt;code&gt;C:\Users\user\AppData\Local\Programs\Neo4j Desktop&lt;/code&gt;&lt;br&gt;
or for all users into&lt;br&gt;
&lt;code&gt;C:\Program Files\Neo4j Desktop&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;The default place it wants to place your data is 
&lt;code&gt;C:\Users\user\.Neo4jDesktop&lt;/code&gt;&lt;br&gt;
I want it shared with my docker install into&lt;br&gt;
&lt;code&gt;C:\Users\user\ItData\neodata&lt;/code&gt;&lt;br&gt;
Warnings: &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;When you uninstall neo4j it will delete the whole folder, but you can choose option to backup, so you still have the data for e.g. your docker container&lt;/li&gt;
&lt;li&gt;In some countries you will get message &lt;code&gt;You are not online so you can not 'Register via Social Login'&lt;/code&gt;, when starting Neo4j. &lt;ul&gt;
&lt;li&gt;Solution A: Use VPN to get access from another country.&lt;/li&gt;
&lt;li&gt;Solution B: Work offline (if that is enough). For development it probably is. You can also get an activation key via email. You'll get this supportive message: &lt;code&gt;Your friendly neighborhood Neo4j representative can get an activation key for you. If you're not sure who to call send an inquiry to info@neo4j.com&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Create a local graph DB&lt;/h3&gt;
&lt;p&gt;You can connect towards an exiting local or remote graph DB - or you can create a new local one.&lt;br&gt;
Since the docker uses same port you should stop it first&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker stop neo4j
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;To create a new local graph DB &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Click on &lt;code&gt;Add Graph&lt;/code&gt;&lt;ul&gt;
&lt;li&gt;You can now create a local graph or connect to a remote one. You could have started the container and have connected towards that one&lt;/li&gt;
&lt;li&gt;Instead - Create the local one (I am just exploring anyway) &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Give it a name, a password and click &lt;code&gt;Create&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;I called this one &lt;code&gt;NeoGraphTest1&lt;/code&gt;&lt;br&gt;
&lt;img alt="Add local DB" src="img/2019/2019-05-07-Neo4j01.PNG"&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;This will create the DB in a folder below what you chose during installation&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;In my case the DB is in &lt;code&gt;\neodata\neo4jDatabases\database-876bd4d5-067b-4558-8793-8cebca8e06e1\installation-3.5.2\data\databases\graph.db&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;So that is why I put the container data folder into &lt;code&gt;\neodata\neo4jDatabases\container1\data&lt;/code&gt;. This keeps it separated in the same level except that I have left out the installation version. If I needed that I would instead have called the folder &lt;code&gt;\container1-3.5.5\&lt;/code&gt;. &lt;/li&gt;
&lt;li&gt;The level &lt;code&gt;\database-876bd4d5-067b-4558-8793-8cebca8e06e1\installation-3.5.2&lt;/code&gt; gives you the content of &lt;code&gt;NeoGraphTest1&lt;/code&gt;&lt;ul&gt;
&lt;li&gt;It has all the files as the container has including &lt;code&gt;\bin\&lt;/code&gt; folder - but these are the Windows files opposed to the Linux files in the container&lt;br&gt;
&lt;img alt="DB folder" src="img/2019/2019-05-07-Neo4j02.PNG"&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The new DB is stopped. You can start it from the &lt;strong&gt;project page&lt;/strong&gt; or you can press &lt;code&gt;Manage&lt;/code&gt; to enter the &lt;strong&gt;DB page&lt;/strong&gt; for &lt;code&gt;NeoGraphTest1&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;On DB page you have a dashboard to a lot - most importantly to &lt;strong&gt;start&lt;/strong&gt; the DB and to connect to it with the &lt;strong&gt;Cypher Browser&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Press &lt;code&gt;Start&lt;/code&gt;&lt;br&gt;
&lt;img alt="Stopped DB" src="img/2019/2019-05-07-Neo4j03.PNG"&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;With the DB started you get to know the ports it&lt;br&gt;
&lt;img alt="Running DB" src="img/2019/2019-05-07-Neo4j04.PNG"&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Connect to your docker container graph DB&lt;/h3&gt;
&lt;p&gt;The docker neo4j DB is easy to intall into cloud, so lets get aquainted with connecting to that as well.
Since the docker uses same port as &lt;code&gt;NeoGraphTest1&lt;/code&gt; you should stop &lt;code&gt;NeoGraphTest1&lt;/code&gt; first and start docker.  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker start neo4j
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;Just browse docker&lt;/h4&gt;
&lt;p&gt;To browse the docker Graph with Cypher&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;From Neo4j Desktop Click on &lt;code&gt;Neo4j Browser&lt;/code&gt;&lt;br&gt;
&lt;img alt="Browse remote DB" src="img/2019/2019-05-07-Neo4j06.PNG"&gt;&lt;br&gt;
A new window opens and complains that it can't connect to &lt;code&gt;bolt://localhost:7687&lt;/code&gt;.  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You need to help it with username/password.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;In the cypher prompt enter command &lt;code&gt;:server connect neo4j neo4j&lt;/code&gt;&lt;br&gt;
&lt;img alt="Connect to remote DB" src="img/2019/2019-05-07-Neo4j07.PNG"&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The response is displayed in a box below. If you are connected, then just press &lt;code&gt;X&lt;/code&gt; to cleanup.&lt;br&gt;
&lt;img alt="Connect response" src="img/2019/2019-05-07-Neo4j08.PNG"&gt;  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;When you are done you can &lt;code&gt;:server disconnect&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Save the docker browser&lt;/h4&gt;
&lt;p&gt;You could also save the link to the docker Graph just as &lt;code&gt;NeoGraphTest1&lt;/code&gt;  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;From Neo4j Desktop Click on &lt;code&gt;Add Graph&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Click on &lt;code&gt;Connect to Remote&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Name: &lt;code&gt;NeoContainer1&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Url: &lt;code&gt;bolt://localhost:7687&lt;/code&gt;&lt;br&gt;
&lt;img alt="Add remote DB" src="img/2019/2019-05-07-Neo4j05.PNG"&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Press &lt;code&gt;Username/Password&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;User: &lt;code&gt;neo4j&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Password: &lt;code&gt;neo4j&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Press &lt;code&gt;Connect&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Press &lt;code&gt;Start&lt;/code&gt;&lt;br&gt;
&lt;img alt="Connected remote DB" src="img/2019/2019-05-07-Neo4j09.PNG"&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Press &lt;code&gt;Open Browser&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Notes:   &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;After restarting the container at one point I hade to add the port 7687 in Kitematic to be able to connect&lt;/li&gt;
&lt;li&gt;When you connect to the container remotely you also have to change the default password from &lt;code&gt;neo4j&lt;/code&gt; after opening it in the browser&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Installation Guides&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://neo4j.com/docs/operations-manual/current/installation/windows/"&gt;2.5. Windows installation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://neo4j.com/download-thanks-desktop/?edition=desktop&amp;amp;flavour=windows&amp;amp;release=1.1.21&amp;amp;offline=true"&gt;Neo4j Desktop&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;What's next?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Play with Cypher to add and read some data&lt;/li&gt;
&lt;li&gt;Create some code to interact with the data&lt;/li&gt;
&lt;li&gt;Change ports on local DB, so it doesn't collide with the docker DB.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Learn and Communities&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://community.neo4j.com/"&gt;Neo4j Community&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Cypher:&lt;ul&gt;
&lt;li&gt;&lt;a href="https://neo4j.com/developer/cypher-query-language/"&gt;Neo4j's Graph Query Language: An Introduction to Cypher&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.quackit.com/neo4j/tutorial/neo4j_create_a_node_using_cypher.cfm"&gt;Neo4j - Create a Node using Cypher&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;eBooks:&lt;ul&gt;
&lt;li&gt;&lt;a href="https://neo4j.com/books/"&gt;Neo4j Books: Free Graph Database Ebooks&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://neo4j.com/whitepapers/graph-databases-beginners-ebook/?ref=home"&gt;Graph Databases for Beginners - Neo4j Graph Database Platform&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://neo4j.com/graph-algorithms-book/"&gt;O'Reilly Graph Algorithms Book - Neo4j Graph Database Platform&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The End&lt;/p&gt;</content><category term="DevOps"></category><category term="#graphdb"></category><category term="#cypher"></category><category term="#neo4j"></category><category term="#docker"></category></entry><entry><title>VPN client - Download on IPhone - Copy to PC</title><link href="https://rasor.github.io/vpn-client-download-on-iphone-copy-to-pc.html" rel="alternate"></link><published>2019-05-06T00:00:00+02:00</published><updated>2019-07-13T00:00:00+02:00</updated><author><name>rasor</name></author><id>tag:rasor.github.io,2019-05-06:/vpn-client-download-on-iphone-copy-to-pc.html</id><summary type="html">&lt;p&gt;While writing this blog I am in China. I have an immediate need for VPN, since so much SW and websites are dependent on the websites, which are barred in China.
I can install VPN clients on IPhone from AppStore, but I can't install VPN client on PC, since I …&lt;/p&gt;</summary><content type="html">&lt;p&gt;While writing this blog I am in China. I have an immediate need for VPN, since so much SW and websites are dependent on the websites, which are barred in China.
I can install VPN clients on IPhone from AppStore, but I can't install VPN client on PC, since I can't reach the sites from China. So here is a fix.&lt;/p&gt;
&lt;h2&gt;Download VPN client on IPhone - and Copy it to PC&lt;/h2&gt;
&lt;p&gt;If you can't download a VPN client to PC (due to restrictions in the country), then you can fetch the setup-file via IPhone:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;From AppStore install a &lt;strong&gt;VPN client&lt;/strong&gt; - e.g. Le VPN, Astrill, IPVanish&lt;/li&gt;
&lt;li&gt;Subscribe, start VPN, login and activate VPN&lt;ul&gt;
&lt;li&gt;Note: You will need to supply an email as userid - but also to receive VPN login details in.&lt;br&gt;
So you'll need an email provider that can be accessed from you country - so case of China you can use &lt;a href="https://outlook.live.com/owa/"&gt;Outlook.com&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;From AppStore install &lt;strong&gt;Firefox&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;From Firefox browse to the &lt;a href="https://www.le-vpn.com/vpn-windows/"&gt;VPN Download page&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Upload to &lt;strong&gt;cloud drive&lt;/strong&gt; e.g. ICloud, Onedrive, pCloud - you can do that with the app for the specific iCloud or with IPhone &lt;strong&gt;Files&lt;/strong&gt; app&lt;ul&gt;
&lt;li&gt;Download from Windows&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Or connect IPhone to PC with usb&lt;ul&gt;
&lt;li&gt;Use iTunes on PC to transfer file&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Choose VPN&lt;/h2&gt;
&lt;p&gt;I have not tested much of VPNs, so it is limited knowledge I can come with. &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.astrill.com/"&gt;Astrill VPN&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;Pros:&lt;ul&gt;
&lt;li&gt;Stays connected on the VPN even though you loose wifi or snoose your IPhone&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Cons:&lt;ul&gt;
&lt;li&gt;Yearly charge - I need monthly - or less&lt;/li&gt;
&lt;li&gt;Low score on Trustpilot&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Info:&lt;ul&gt;
&lt;li&gt;I have not tested IPVanish from PC&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.le-vpn.com/"&gt;Le VPN&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;Pros:&lt;ul&gt;
&lt;li&gt;One week trial account - with no payment&lt;/li&gt;
&lt;li&gt;Monthly charge - currently $10&lt;/li&gt;
&lt;li&gt;Subscription is not default. By default you only pay for one period.&lt;/li&gt;
&lt;li&gt;Can pay with Bitcoin (You don't have to supply your id through payment card)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Cons:&lt;ul&gt;
&lt;li&gt;Disconnects the VPN when you loose wifi or snoose your IPhone&lt;/li&gt;
&lt;li&gt;On PC I have trouble finding VPN servers, that lets me connect (from China). It does not seem to be a problem from IPhone. I wonder what it is on the PC, that gives those differnces?&lt;/li&gt;
&lt;li&gt;Low score on Trustpilot&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.ipvanish.com"&gt;IPVanish VPN&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;Pros:&lt;ul&gt;
&lt;li&gt;Top score on Trustpilot&lt;/li&gt;
&lt;li&gt;Monthly charge&lt;/li&gt;
&lt;li&gt;1 year plan: $3,25/mo&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Cons:&lt;ul&gt;
&lt;li&gt;Subscription is default and mandatory. You will keep paying untill your card expires or you unsubscibe&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Info:&lt;ul&gt;
&lt;li&gt;I have not tested IPVanish&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.namecheap.com/vpn/"&gt;Namecheap VPN&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;Pros:&lt;ul&gt;
&lt;li&gt;Cheap 3 year plan: $2/mo&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Cons:&lt;ul&gt;
&lt;li&gt;No Linux app&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.privateinternetaccess.com/"&gt;Private Internet Access&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;Pros:&lt;ul&gt;
&lt;li&gt;2 year plan: $3½/mo&lt;/li&gt;
&lt;li&gt;Recommended by &lt;a href="https://tutanota.com/blog/posts/private-internet-access-pia/"&gt;TutaNota&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Opera &lt;a href="https://mashtips.com/enable-free-vpn-opera-browser-android/"&gt;How to Enable Free VPN on Opera Browser for Android | Mashtips&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;Pros:&lt;ul&gt;
&lt;li&gt;Free&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Cons:&lt;ul&gt;
&lt;li&gt;Probably only works with Opera Browser&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I have not not been choosing VPN for speed, privacy or security reasons, so there you have to do your own research.  &lt;/p&gt;
&lt;h2&gt;Links&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.trustpilot.com/categories/vpn_providers"&gt;Trustpilot VPN Providers&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The End&lt;/p&gt;</content><category term="DevOps"></category><category term="#vpn"></category><category term="#icloud"></category></entry><entry><title>Tools for Wordpress sites</title><link href="https://rasor.github.io/tools-for-wordpress-sites.html" rel="alternate"></link><published>2018-06-10T22:00:00+02:00</published><updated>2018-06-10T22:00:00+02:00</updated><author><name>rasor</name></author><id>tag:rasor.github.io,2018-06-10:/tools-for-wordpress-sites.html</id><summary type="html">&lt;p&gt;Wordpress sites is still going strong with a large community creating beautiful themes.&lt;/p&gt;
&lt;h2&gt;Chrome Plugin: WP Sniffer&lt;/h2&gt;
&lt;p&gt;PenguinWP has created a  &lt;a href="https://chrome.google.com/webstore/detail/wpsniffer-wordpress-theme/kihhefcbenhkjgjhchanjfhhflaojldn"&gt;Chrome plugin&lt;/a&gt; called &lt;a href="https://penguinwp.com/better-way-to-find-most-popular-wordpress-themes/"&gt;WPSniffer&lt;/a&gt; &lt;/p&gt;
&lt;h3&gt;Testing&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;GoTo a site hosted by WordPress - e.g. &lt;a href="http://www.knowledgecube.net/"&gt;Knowledge Cube&lt;/a&gt;&lt;br&gt;
=&amp;gt; The plugin will change color to orange in the address bar.&lt;/li&gt;
&lt;li&gt;Press the plugin …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;Wordpress sites is still going strong with a large community creating beautiful themes.&lt;/p&gt;
&lt;h2&gt;Chrome Plugin: WP Sniffer&lt;/h2&gt;
&lt;p&gt;PenguinWP has created a  &lt;a href="https://chrome.google.com/webstore/detail/wpsniffer-wordpress-theme/kihhefcbenhkjgjhchanjfhhflaojldn"&gt;Chrome plugin&lt;/a&gt; called &lt;a href="https://penguinwp.com/better-way-to-find-most-popular-wordpress-themes/"&gt;WPSniffer&lt;/a&gt; &lt;/p&gt;
&lt;h3&gt;Testing&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;GoTo a site hosted by WordPress - e.g. &lt;a href="http://www.knowledgecube.net/"&gt;Knowledge Cube&lt;/a&gt;&lt;br&gt;
=&amp;gt; The plugin will change color to orange in the address bar.&lt;/li&gt;
&lt;li&gt;Press the plugin&lt;br&gt;
=&amp;gt; DETECTED WORDPRESS THEME: &lt;a href="https://themeforest.net/item/jupiter-multipurpose-responsive-theme/5177775?s_rank=1"&gt;JUPITER&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="WPSniffer" src="https://lh3.googleusercontent.com/-4HDYqRKhxBQWvniHkf7AAMtLKmL9L2jySRvb8cIesOIYAR9PdvxzrtaTEsLkiEHWAxvroM=w640-h400-e365"&gt;&lt;/p&gt;
&lt;h2&gt;Theme: Jupiter&lt;/h2&gt;
&lt;p&gt;Jupiter has an &lt;a href="https://themes.artbees.net/docs/installing-theme-and-child-theme/"&gt;Installation instruction&lt;/a&gt; telling how to install a child theme to avoid theme customizations to be overwritten by theme updates.&lt;/p&gt;
&lt;h2&gt;Tool: Visual Composer&lt;/h2&gt;
&lt;p&gt;Knowledge Cube web also uses the tool &lt;a href="https://visualcomposer.io/"&gt;Visual Composer&lt;/a&gt; to edit the Website.&lt;/p&gt;
&lt;h2&gt;WP Plugin: Yoast SEO&lt;/h2&gt;
&lt;p&gt;Knowledge Cube web does SEO optimisation with &lt;a href="https://yoast.com/wordpress/plugins/seo/"&gt;Yoast SEO&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The End&lt;/p&gt;</content><category term="DevOps"></category><category term="#wordpress"></category><category term="#themes"></category><category term="#seo"></category></entry><entry><title>Vue Storefront installation on Windows Dev box</title><link href="https://rasor.github.io/vue-storefront-installation-on-windows-dev-box.html" rel="alternate"></link><published>2018-05-15T23:00:00+02:00</published><updated>2020-06-26T19:00:00+02:00</updated><author><name>rasor</name></author><id>tag:rasor.github.io,2018-05-15:/vue-storefront-installation-on-windows-dev-box.html</id><summary type="html">&lt;p&gt;&lt;a href="https://medium.com/@piotrkarwatka/vue-storefront-1-0rc-3-has-arrived-5c770a338d4"&gt;Vue Storefront&lt;/a&gt; will soon be out (june 2018).
It is a PWA frontend to the Magento webshop.  &lt;/p&gt;
&lt;p&gt;I think I'll give it a testdrive.&lt;br&gt;
I am attending a online marketing seminar and workshop presented by &lt;a href="https://twitter.com/tzacchi"&gt;Thomas Zacchi (@tzacchi)&lt;/a&gt; from &lt;a href="https://www.intoto.dk/"&gt;intoto digital&lt;/a&gt;, so I could use a modern webshop to play …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;a href="https://medium.com/@piotrkarwatka/vue-storefront-1-0rc-3-has-arrived-5c770a338d4"&gt;Vue Storefront&lt;/a&gt; will soon be out (june 2018).
It is a PWA frontend to the Magento webshop.  &lt;/p&gt;
&lt;p&gt;I think I'll give it a testdrive.&lt;br&gt;
I am attending a online marketing seminar and workshop presented by &lt;a href="https://twitter.com/tzacchi"&gt;Thomas Zacchi (@tzacchi)&lt;/a&gt; from &lt;a href="https://www.intoto.dk/"&gt;intoto digital&lt;/a&gt;, so I could use a modern webshop to play with.  &lt;/p&gt;
&lt;h2&gt;Initial thoughts about installation&lt;/h2&gt;
&lt;p&gt;I think I'll deploy Magento to a cheap PHP webhotel I have and then at another time roll it out as a Docker container.&lt;br&gt;
&lt;a href="https://hub.docker.com/r/bitnami/magento/"&gt;bitnami/magento/&lt;/a&gt; looks good for test - it proposes a data volume with MariaDB.&lt;br&gt;
Vue Storefront could just as well be served from the same container as Magento.  &lt;/p&gt;
&lt;p&gt;But hey - I won't need it neither front nor back deployed - I only want to play. Then instead I'll serve it in MiniShift from my PC.  &lt;/p&gt;
&lt;h2&gt;Got a little wiser&lt;/h2&gt;
&lt;p&gt;In the article  &lt;a href="https://www.linkedin.com/pulse/magento2-nosql-database-pwa-support-piotr-karwatka/"&gt;"Magento2 - NoSQL database and PWA support"&lt;/a&gt; &lt;a href="https://twitter.com/piotrkarwatka"&gt;Piotr Karwatka (@piotrkarwatka)&lt;/a&gt; explains there is a little more the setup than a Vue frontend and a Magento backend.&lt;br&gt;
There seems to be two chains that works something like  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;OLTP chain: &lt;a href="https://github.com/DivanteLtd/vue-storefront"&gt;VueFront&lt;/a&gt; -&amp;gt; &lt;a href="https://github.com/DivanteLtd/vue-storefront-api"&gt;ExpressApiBack&lt;/a&gt; -&amp;gt; ElasticSearch or MongoDB container &lt;/li&gt;
&lt;li&gt;Sync with Magento chain: &lt;a href="https://github.com/Automattic/kue"&gt;KueWorker&lt;/a&gt; -&amp;gt; KueBack(Redis) container -&amp;gt;  &lt;a href="https://github.com/DivanteLtd/mage2vuestorefront"&gt;Mage2VueFront&lt;/a&gt; -&amp;gt; ElasticSearch or MongoDB &amp;lt;-&amp;gt; Magento DB  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The model of VueFront the data apparently is great for NoSQL storage and querying, which supposedly scales better than the models used in SQL (which the Magento DB uses).&lt;br&gt;
So I guess we for the dev envir again are down to three containers:  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Vue apps: VueFront, ExpressApiBack, KueWorker, Mage2VueFront&lt;/li&gt;
&lt;li&gt;Vue storage: Redis, ElasticSearch or MongoDB&lt;/li&gt;
&lt;li&gt;Magento app, Magento DB&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If we for a quick start skip the sync chain, then &lt;a href="https://github.com/DivanteLtd/vue-storefront/blob/master/doc/Installing%20on%20Linux%20and%20MacOS.md#install-the-vue-storefront-api"&gt;data can be fetched&lt;/a&gt; from &lt;a href="https://github.com/magento/magento2-sample-data"&gt;magento2-sample-data&lt;/a&gt;&lt;br&gt;
Let's see if that is doable.&lt;/p&gt;
&lt;h2&gt;&lt;a href="https://github.com/DivanteLtd/vue-storefront/blob/master/doc/Installing%20on%20Windows.md"&gt;Installing on Windows&lt;/a&gt;&lt;/h2&gt;
&lt;h3&gt;Prerequisites&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Install &lt;a href="https://git-scm.com/downloads"&gt;Git for Windows&lt;/a&gt; - This will install &lt;code&gt;Git Bash&lt;/code&gt;&lt;ol&gt;
&lt;li&gt;Optional Install &lt;a href="https://rasor.github.io/curl-cli-on-windows.html"&gt;cUrl CLI on Windows&lt;/a&gt; - This will ensure that you can call a remote end over SSL&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;Install &lt;a href="https://store.docker.com/editions/community/docker-ce-desktop-windows"&gt;Docker CE for Windows&lt;/a&gt;. &lt;ol&gt;
&lt;li&gt;I installed &lt;a href="2018-05-06-Docker4Win.md"&gt;Docker4Win here&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;Moore info: &lt;a href="https://blog.jayway.com/2017/04/19/running-docker-on-bash-on-windows/"&gt;Running Docker containers on Bash on Windows&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;If you use VS Code you could install &lt;a href="https://marketplace.visualstudio.com/items?itemName=PeterJausovec.vscode-docker"&gt;Docker Support for VSCode&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;Install &lt;a href="https://rasor.github.io/using-nvm-for-windows-and-yarn.html"&gt;NVM for Windows, Node.js and Yarn&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;Install &lt;a href="https://www.npmjs.com/package/vue-cli"&gt;vue-cli&lt;/a&gt;  &lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# print installed node versions&lt;/span&gt;
nvm list

&lt;span class="c1"&gt;# At time of writing vue-cli 3 is still in beta, so I choose an old one&lt;/span&gt;
&lt;span class="c1"&gt;#nvm install 8.11.1&lt;/span&gt;
nvm use &lt;span class="m"&gt;8&lt;/span&gt;.11.1 
npm install -g vue-cli@2.9.3
vue --version
&lt;span class="c1"&gt;# Test drive&lt;/span&gt;
vue list
&lt;span class="nb"&gt;cd&lt;/span&gt; .&lt;span class="se"&gt;\y&lt;/span&gt;our-vue-root&lt;span class="se"&gt;\&lt;/span&gt;
vue init webpack-simple my-29project
&lt;span class="nb"&gt;cd&lt;/span&gt; my-29project
code . &lt;span class="c1"&gt;#if you are using VS Code editor&lt;/span&gt;
npm install
npm run dev &lt;span class="c1"&gt;# Opens http://localhost:8080/&lt;/span&gt;

&lt;span class="c1"&gt;# When vue-cli 3 comes out I want to have that cli together with another node version - notice - the cli changed name @npm&lt;/span&gt;
&lt;span class="c1"&gt;#nvm install 10.1.0&lt;/span&gt;
nvm use &lt;span class="m"&gt;10&lt;/span&gt;.1.0
npm install -g @vue/cli@3.0.0-beta.10
vue --version
&lt;span class="c1"&gt;# Test drive&lt;/span&gt;
&lt;span class="nb"&gt;cd&lt;/span&gt; .&lt;span class="se"&gt;\y&lt;/span&gt;our-vue-root&lt;span class="se"&gt;\&lt;/span&gt;
vue create my-30project
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;1. v2.9.3 [vue-cli](https://github.com/vuejs/vue-cli/tree/master) intro&lt;/span&gt;
&lt;span class="err"&gt;2. v3.0. [@vue/cli](https://github.com/vuejs/vue-cli/blob/dev/docs/README.md#introduction) intro&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;If you use VSCode you could install &lt;a href="https://marketplace.visualstudio.com/items?itemName=octref.vetur"&gt;Vetur&lt;/a&gt; - Vue tooling for VSCode for syntax highlight and snippets&lt;/li&gt;
&lt;li&gt;If you use Chrome you need &lt;a href="https://chrome.google.com/webstore/detail/vuejs-devtools/nhdogjmejiglipccpnnnanhbledajbpd?hl=en"&gt;Vue.js devtools&lt;/a&gt; for debugging&lt;ol&gt;
&lt;li&gt;The devtools has &lt;strong&gt;Open in editor&lt;/strong&gt; button to bring you back to the code. check out &lt;a href="https://medium.com/the-vue-point/whats-new-in-vue-devtools-4-0-9361e75e05d0"&gt;What’s new in Vue Devtools 4.0&lt;/a&gt;, which also points you to this &lt;a href="https://github.com/vuejs/vue-devtools/blob/master/docs/open-in-editor.md"&gt;setup guide&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;Install Vue Storefront&lt;/h3&gt;
&lt;p&gt;There are two parts&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;the Express API including a Docker container for the data&lt;/li&gt;
&lt;li&gt;the Vue frontend&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;VS API&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;Start Docker VM by double-click on the desktop icon. This takes a while&lt;/li&gt;
&lt;li&gt;Install VS API&lt;br&gt;
From GitBash:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; .&lt;span class="se"&gt;\y&lt;/span&gt;our-vue-root&lt;span class="se"&gt;\&lt;/span&gt;
git clone https://github.com/DivanteLtd/vue-storefront-api.git vue-storefront-api
&lt;span class="nb"&gt;cd&lt;/span&gt; vue-storefront-api
&lt;span class="c1"&gt;# Fetch dependencies&lt;/span&gt;
yarn
&lt;/pre&gt;&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;Load you docker VM with containers from docker-compose.yaml&lt;br&gt;
From CMD prompt:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# login to docker - this did not work from GitBash, but did from CMD&lt;/span&gt;
docker login -u yourUseridNotYourEmail -p yourPassword
&lt;span class="c1"&gt;# Run Docker containers required by vue-storefront-api. This can take a while ...&lt;/span&gt;
docker-compose up
&lt;span class="c1"&gt;# this CMD promt won&amp;#39;t return the promt. It is probably a Daemon now, so switch back to GitBash&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;Load the Docker data containers with data&lt;br&gt;
From GitBash:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Verify that the containers are running&lt;/span&gt;
docker network ls
&lt;span class="c1"&gt;# Open browser for Elastic Search (es1) container&lt;/span&gt;
start http://localhost:9200/
&lt;span class="c1"&gt;# Restore products database (yarn restore) and run latest migrations (yarn migrate)&lt;/span&gt;
yarn restore
yarn migrate
&lt;/pre&gt;&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;Copy &lt;code&gt;config/default.json&lt;/code&gt; to &lt;code&gt;config/local.json&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Add &lt;a href="https://gist.github.com/rasor/6eb9293a025ae919d66a31a8f8bdcb3d"&gt;..vscode\launch.json&lt;/a&gt; to the project&lt;/li&gt;
&lt;li&gt;Edit package.json - change:  &lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;  &lt;span class="s"&gt;&amp;quot;scripts&amp;quot;&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt; &lt;span class="p p-Indicator"&gt;{&lt;/span&gt;
    &lt;span class="s"&gt;&amp;quot;dev&amp;quot;&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;nodemon&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;-w&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;src&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;--exec&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;\&amp;quot;babel-node&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;src&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;--presets&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;es2015,stage-0\&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p p-Indicator"&gt;,&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;to (add --inspect)  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;  &lt;span class="s"&gt;&amp;quot;scripts&amp;quot;&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt; &lt;span class="p p-Indicator"&gt;{&lt;/span&gt;
    &lt;span class="s"&gt;&amp;quot;dev&amp;quot;&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;nodemon&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;--inspect&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;-w&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;src&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;--exec&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;\&amp;quot;babel-node&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;src&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;--presets&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;es2015,stage-0\&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p p-Indicator"&gt;,&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;Run API using &lt;code&gt;yarn dev&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Verify API is running&lt;br&gt;
start http://localhost:8080/api/&lt;br&gt;
Response:  &lt;code&gt;{"version":"0.1.0"}&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Debug the API from VSCode by setting breakpoints and press &lt;code&gt;play Attach&lt;/code&gt; on the Debug tab.&lt;/li&gt;
&lt;/ol&gt;
&lt;h4&gt;VS Frontend&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;Install VS API&lt;br&gt;
From GitBash 2:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; .&lt;span class="se"&gt;\y&lt;/span&gt;our-vue-root&lt;span class="se"&gt;\&lt;/span&gt;
git clone https://github.com/DivanteLtd/vue-storefront.git vue-storefront
&lt;span class="nb"&gt;cd&lt;/span&gt; vue-storefront
&lt;span class="c1"&gt;# Fetch dependencies&lt;/span&gt;
yarn install
&lt;/pre&gt;&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;Copy &lt;code&gt;config/default.json&lt;/code&gt; to &lt;code&gt;config/local.json&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Images: because vue-storefront-api uses &lt;code&gt;imagemagick&lt;/code&gt; and some nodejs cmdline bindings it can be dificult to run the image proxy on localhost/windows machine. Please point out the vue-storefront to image proxy provided by changing &lt;code&gt;config/local.json&lt;/code&gt; images.baseUrl:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kr"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;elasticsearch&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;httpAuth&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;host&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;localhost:8080/api/catalog&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;vue_storefront_catalog&amp;#39;&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="c1"&gt;// we have vue-storefront-api (https://github.com/DivanteLtd/vue-storefront-api) endpoints below:&lt;/span&gt;
  &lt;span class="nx"&gt;orders&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;endpoint&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;localhost:8080/api/order/create&amp;#39;&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="nx"&gt;images&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;baseUrl&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;https://demo.vuestorefront.io/img/&amp;#39;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;Run Vue Storefront Server using &lt;code&gt;yarn dev&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Verify Fronteend is running&lt;br&gt;
start http://localhost:3000/  &lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;You will see a &lt;a href="https://medium.com/@deepusnath/4-points-to-keep-in-mind-before-introducing-progressive-web-apps-pwa-to-your-team-8dc66bcf6011"&gt;PWA&lt;/a&gt; webshop
&lt;a href="https://demo.vuestorefront.io/"&gt;&lt;img alt="Vue Storefront" src="img/2018/2018-05-15-VueStore1.PNG"&gt;&lt;/a&gt;  &lt;/p&gt;
&lt;p&gt;The shop is reponsive&lt;br&gt;
&lt;a href="https://demo.vuestorefront.io/"&gt;&lt;img alt="Vue Storefront" src="img/2018/2018-05-15-VueStore2.PNG"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;And images resizes to small, when devices are very small&lt;br&gt;
&lt;a href="https://demo.vuestorefront.io/"&gt;&lt;img alt="Vue Storefront" src="img/2018/2018-05-15-VueStore3.PNG"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Turn off Vue Storefront&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Frontend - in GitBash-2 is just a PWA server - there is nothing to save - just &lt;code&gt;X&lt;/code&gt; it&lt;/li&gt;
&lt;li&gt;API - in GitBash-1 is just an API server - there is nothing to save - just &lt;code&gt;X&lt;/code&gt; it&lt;/li&gt;
&lt;li&gt;Now what about the CMD and the VM? You need to tell the containers in the VM to close down and then close down the VM.&lt;ul&gt;
&lt;li&gt;Start a new GitBash-3  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Verify containers are there&lt;/span&gt;
docker container ls
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Output: &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;CONTAINER ID   IMAGE               COMMAND                  CREATED       STATUS       PORTS                              NAMES&lt;/span&gt;
&lt;span class="err"&gt;fcd38fe4910e   kibana:5.5          &amp;quot;/docker-entrypoint.…&amp;quot;   2 hours ago   Up 2 hours   0.0.0.0:5601-&amp;gt;5601/tcp             vue-storefront-api_kibana_1&lt;/span&gt;
&lt;span class="err"&gt;070f93cc3a08   redis               &amp;quot;docker-entrypoint.s…&amp;quot;   2 hours ago   Up 2 hours   0.0.0.0:6379-&amp;gt;6379/tcp             vue-storefront-api_redis_1&lt;/span&gt;
&lt;span class="err"&gt;a3fec0cc4f2b   elasticsearch:5.5   &amp;quot;/docker-entrypoint.…&amp;quot;   2 hours ago   Up 2 hours   9200/tcp, 9300/tcp                 vue-storefront-api_es2_1&lt;/span&gt;
&lt;span class="err"&gt;56caf26862c4   elasticsearch:5.5   &amp;quot;/docker-entrypoint.…&amp;quot;   2 hours ago   Up 2 hours   0.0.0.0:9200-&amp;gt;9200/tcp, 9300/tcp   es1&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Hmm - this is part of the &lt;a href="https://www.elastic.co/elk-stack"&gt;ELK Stack: Elasticsearch, Logstash, Kibana&lt;/a&gt; and the Redis needed for sync with Magento is also there, so perhaps it is ready to connect to a real Magento installation.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; .&lt;span class="se"&gt;\y&lt;/span&gt;our-vue-root&lt;span class="se"&gt;\&lt;/span&gt;
&lt;span class="nb"&gt;cd&lt;/span&gt; vue-storefront-api
&lt;span class="c1"&gt;# Turn off the containers&lt;/span&gt;
docker-compose stop
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Output:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;Stopping vue-storefront-api_kibana_1 ... done&lt;/span&gt;
&lt;span class="err"&gt;Stopping vue-storefront-api_redis_1  ... done&lt;/span&gt;
&lt;span class="err"&gt;Stopping vue-storefront-api_es2_1    ... done&lt;/span&gt;
&lt;span class="err"&gt;Stopping es1                         ... done&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The CMD promt will display this, so you can close it.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;redis_1&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="n"&gt;signal&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;handler&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1526416098&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Received&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;SIGTERM&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;scheduling&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;shutdown&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;redis_1&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="n"&gt;M&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;May&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;28&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="mf"&gt;18.957&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;User&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;requested&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;shutdown&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;redis_1&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="n"&gt;M&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;May&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;28&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="mf"&gt;19.142&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Saving&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;final&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;RDB&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;snapshot&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;before&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;exiting&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;es2_1&lt;/span&gt;&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;2018-05-15T20:28:19,274&lt;/span&gt;&lt;span class="o"&gt;][&lt;/span&gt;&lt;span class="n"&gt;INFO &lt;/span&gt;&lt;span class="o"&gt;][&lt;/span&gt;&lt;span class="n"&gt;o.e.n.Node               &lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;J8Lto-u&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;stopping&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;es1&lt;/span&gt;&lt;span class="w"&gt;       &lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;2018-05-15T20:28:19,271&lt;/span&gt;&lt;span class="o"&gt;][&lt;/span&gt;&lt;span class="n"&gt;INFO &lt;/span&gt;&lt;span class="o"&gt;][&lt;/span&gt;&lt;span class="n"&gt;o.e.n.Node               &lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;sH31WJW&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;stopping&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;redis_1&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="n"&gt;M&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;May&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;28&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="mf"&gt;19.306&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;DB&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;saved&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;on&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;disk&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;redis_1&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="n"&gt;M&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;May&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;28&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="mf"&gt;19.306&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Redis&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;is&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;now&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;ready&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;bye&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;bye&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;es1&lt;/span&gt;&lt;span class="w"&gt;       &lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;2018-05-15T20:28:19,444&lt;/span&gt;&lt;span class="o"&gt;][&lt;/span&gt;&lt;span class="n"&gt;INFO &lt;/span&gt;&lt;span class="o"&gt;][&lt;/span&gt;&lt;span class="n"&gt;o.e.n.Node               &lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;sH31WJW&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;stopped&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;es1&lt;/span&gt;&lt;span class="w"&gt;       &lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;2018-05-15T20:28:19,444&lt;/span&gt;&lt;span class="o"&gt;][&lt;/span&gt;&lt;span class="n"&gt;INFO &lt;/span&gt;&lt;span class="o"&gt;][&lt;/span&gt;&lt;span class="n"&gt;o.e.n.Node               &lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;sH31WJW&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;closing&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;es2_1&lt;/span&gt;&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;2018-05-15T20:28:19,473&lt;/span&gt;&lt;span class="o"&gt;][&lt;/span&gt;&lt;span class="n"&gt;INFO &lt;/span&gt;&lt;span class="o"&gt;][&lt;/span&gt;&lt;span class="n"&gt;o.e.n.Node               &lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;J8Lto-u&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;stopped&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;es2_1&lt;/span&gt;&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;2018-05-15T20:28:19,473&lt;/span&gt;&lt;span class="o"&gt;][&lt;/span&gt;&lt;span class="n"&gt;INFO &lt;/span&gt;&lt;span class="o"&gt;][&lt;/span&gt;&lt;span class="n"&gt;o.e.n.Node               &lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;J8Lto-u&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;closing&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;es1&lt;/span&gt;&lt;span class="w"&gt;       &lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;2018-05-15T20:28:19,509&lt;/span&gt;&lt;span class="o"&gt;][&lt;/span&gt;&lt;span class="n"&gt;INFO &lt;/span&gt;&lt;span class="o"&gt;][&lt;/span&gt;&lt;span class="n"&gt;o.e.n.Node               &lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;sH31WJW&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;closed&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;es2_1&lt;/span&gt;&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;2018-05-15T20:28:19,509&lt;/span&gt;&lt;span class="o"&gt;][&lt;/span&gt;&lt;span class="n"&gt;INFO &lt;/span&gt;&lt;span class="o"&gt;][&lt;/span&gt;&lt;span class="n"&gt;o.e.n.Node               &lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;J8Lto-u&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;closed&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;vue&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;storefront&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;api_es2_1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;exited&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;with&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;code&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;143&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;vue&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;storefront&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;api_redis_1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;exited&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;with&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;code&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;vue&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;storefront&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;api_kibana_1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;exited&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;with&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;code&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;143&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;es1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;exited&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;with&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;code&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;143&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;Optionally Close Docker from the taskbar-notification-icon: Select &lt;code&gt;Quit&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;Startup scripts&lt;/h2&gt;
&lt;p&gt;I've created &lt;a href="https://gist.github.com/rasor/a3e6e6d6fd824685956d922a3de55b63"&gt;three scripts&lt;/a&gt; that does the above startup.&lt;br&gt;
You can put them in &lt;code&gt;\your-vue-root\&lt;/code&gt; and just double-click on them to start up VueStorefront. They are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;vsapi1.bat&lt;/li&gt;
&lt;li&gt;vsapi2.sh&lt;/li&gt;
&lt;li&gt;vs3.sh&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Note: &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;You must set Git Bash to open extension .sh for this to work&lt;/li&gt;
&lt;li&gt;You must start them in above order and wait patiently for each part to start before you continue with the next script&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Whats next?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;You can customize your frontend theme and change the behavior (code)&lt;/li&gt;
&lt;li&gt;You can install Magento at some host and configure your shop to go towards it&lt;/li&gt;
&lt;li&gt;You can deploy your shop&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h1&gt;Links&lt;/h1&gt;
&lt;h2&gt;Vue Storefront&lt;/h2&gt;
&lt;h3&gt;4 - Vue Storefront - People&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://vuestorefront.slack.com/messages/DAP34PT8U/"&gt;vuestorefront.slack.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/VueStorefront"&gt;Vue Storefront (@VueStorefront) | Twitter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/piotrkarwatka"&gt;Piotr Karwatka (@piotrkarwatka) | Twitter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/filrakowski"&gt;Filip Rakowski (@filrakowski) | Twitter&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;1 - Vue Storefront - Events&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;2018 May &lt;a href="https://medium.com/@piotrkarwatka/vue-storefront-hackathon-1-0-stable-case-studies-29406050727a"&gt;Vue Storefront Hackathon, 1.0 STABLE, case studies – Piotr Karwatka – Medium&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2018 May &lt;a href="http://go.divante.co/wro-open-source/#lp-pom-block-1029"&gt;Wro Open Source 2018&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;2 - Vue Storefront - Github issues&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/DivanteLtd/vue-storefront/issues?q=is%3Aopen+is%3Aissue+label%3Avs-hackathon"&gt;vue-storefront issues&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;3 - Vue Storefront - Learn&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;eBook (2018, 122 pages): &lt;a href="http://go.divante.co/microservices-architecture-ecommerce/"&gt;Microservices Architecture for eCommerce&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCkm1F3Cglty3CE1QwKQUhhg"&gt;Vue Storefront - YouTube&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Blog: -&amp;gt; 2018.01.31 &lt;a href="https://medium.com/@piotrkarwatka/vue-storefront-how-to-install-and-integrate-with-magento2-227767dd65b2"&gt;Vue Storefront — how to install and integrate with Magento2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Blog: 2018.01.04 &lt;a href="https://medium.com/@piotrkarwatka/how-to-connect-3rd-party-platform-to-vue-storefront-df9cb30779f6"&gt;How to connect 3rd party platform to Vue Storefront?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Slides: 2018.02.26 &lt;a href="https://www.slideshare.net/FilipRakowski/vue-storefront-basics"&gt;Vue Storefront Basics - Why we created Vue Storefront and how it works&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;vue: PWA front, Magento back &lt;a href="https://github.com/DivanteLtd/vue-storefront"&gt;DivanteLtd/vue-storefront&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Demo: &lt;a href="https://demo.vuestorefront.io/"&gt;Home Page - Vue Storefront&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DivanteLtd/vue-storefront/blob/master/doc/Installing%20on%20Windows.md"&gt;Installing on Windows&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DivanteLtd/vue-storefront/blob/master/doc/Installing%20on%20Linux%20and%20MacOS.md"&gt;Installing on Linux and MacOS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.linkedin.com/pulse/magento2-nosql-database-pwa-support-piotr-karwatka/"&gt;Magento2 - NoSQL database and PWA support&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DivanteLtd/vue-storefront/blob/master/doc/FAQ%20and%20Receipes.md"&gt;FAQ and Receipes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DivanteLtd/vue-storefront/blob/master/doc/Project%20structure.md"&gt;Project structure&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DivanteLtd/vue-storefront/wiki/Config-file-format-for-vue-storefront"&gt;Config file format for vue storefront&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DivanteLtd/vue-storefront/tree/master/doc"&gt;More docs...&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Vue&lt;/h2&gt;
&lt;h3&gt;Vue Libs&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;vue &lt;a href="https://github.com/topics/shopping-cart?l=vue"&gt;shopping-carts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vue-bulma/nprogress"&gt;vue-bulma/nprogress&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.npmjs.com/package/vue-tags"&gt;vue-tags&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Vue - Learn&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://vuejs.org/v2/guide/installation.html"&gt;Installation — Vue.js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://egghead.io/courses/build-async-vue-js-apps-with-rxjs?utm_source=drip&amp;amp;utm_medium=email&amp;amp;utm_campaign=may2018&amp;amp;utm_term=vue&amp;amp;utm_content=build-async-vue-js-apps-with-rxjs"&gt;Build Async Vue.js Apps with RxJS&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Other&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.dropbox.com/s/8h9lo8ee65oo9y1/front-end-performance-checklist-2018.pdf?dl=0"&gt;front-end-performance-checklist-2018.pdf&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;SEO and PWA: &lt;a href="https://medium.com/progressive-web-apps/2018-state-of-progressive-web-apps-f7517d43ba70"&gt;2018 State of PWA&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="HeadlessApiFirst.md"&gt;Other headless / API first apps&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/topics/ecommerce"&gt;Other ecommerce projects on GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;My &lt;a href="https://github.com/rasor/awesome-tables/blob/master/awesome-cli-js.md#nvm-sets-of-tools---avoiding-version-conficts"&gt;list of npm installs locally&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.gatsbyjs.org/starters/AlexanderProd/gatsby-shopify-starter/"&gt;Gatsby Shopify Starter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.gatsbyjs.org/starters/GraphCMS/gatsby-graphcms-ecommerce-starter/"&gt;gatsby-graphcms-ecommerce-starter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.gatsbyjs.org/starters/rohitguptab/OneShopper/"&gt;OneShopper&lt;/a&gt; - using SnipChart&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;OpenShift&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://rasor.github.io/developing-with-openshift.html"&gt;Installing OpenShift&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.openshift.org/latest/minishift/getting-started/quickstart.html#deploy-sample-app"&gt;Deploying&lt;/a&gt; to MiniShift&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The End&lt;/p&gt;</content><category term="DevOps"></category><category term="#vue"></category><category term="#magento"></category><category term="#webshop"></category><category term="#seo"></category><category term="#pwa"></category><category term="#docker"></category><category term="#git"></category><category term="#yarn"></category><category term="#npm"></category><category term="#nvm"></category><category term="#shopify"></category><category term="#snipchart"></category></entry><entry><title>Docker for Windows</title><link href="https://rasor.github.io/docker-for-windows.html" rel="alternate"></link><published>2018-05-06T17:00:00+02:00</published><updated>2019-03-28T09:00:00+01:00</updated><author><name>rasor</name></author><id>tag:rasor.github.io,2018-05-06:/docker-for-windows.html</id><summary type="html">&lt;p&gt;For a development project I needed Docker for Windows (D4W).&lt;br&gt;
In this blog I'll install Docker. Playing with it I'll do in another post.  &lt;/p&gt;
&lt;h2&gt;Prerequisite&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Install &lt;a href="https://git-scm.com/downloads"&gt;Git for Windows&lt;/a&gt; - This will install &lt;code&gt;Git Bash&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Optional Install &lt;a href="https://rasor.github.io/curl-cli-on-windows.html"&gt;cUrl CLI on Windows&lt;/a&gt; - This will ensure that you can call a remote end …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;For a development project I needed Docker for Windows (D4W).&lt;br&gt;
In this blog I'll install Docker. Playing with it I'll do in another post.  &lt;/p&gt;
&lt;h2&gt;Prerequisite&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Install &lt;a href="https://git-scm.com/downloads"&gt;Git for Windows&lt;/a&gt; - This will install &lt;code&gt;Git Bash&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Optional Install &lt;a href="https://rasor.github.io/curl-cli-on-windows.html"&gt;cUrl CLI on Windows&lt;/a&gt; - This will ensure that you can call a remote end over SSL&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Install&lt;/h2&gt;
&lt;p&gt;You download &lt;a href="https://store.docker.com/editions/community/docker-ce-desktop-windows"&gt;Docker CE for Windows here&lt;/a&gt;.  &lt;/p&gt;
&lt;p&gt;Docker wants to know if you want to use Windows or Linux containers - Since I'll deploy to Linux in production, I also choose Linux here. Linux will ususally be the cheepest choise in cloud.&lt;br&gt;
The version I installed was 18.03.1-ce-win65.&lt;br&gt;
Note: The installer will log you out to be able to finish.  &lt;/p&gt;
&lt;h2&gt;1st test drive&lt;/h2&gt;
&lt;p&gt;When starting Docker from the Desktop Icon I was met with:&lt;br&gt;
&lt;img alt="Docker will disable VirtualBox" src="img/2018/2018-05-06-Docker4Win1.PNG"&gt;  &lt;/p&gt;
&lt;p&gt;Docker will disable VirtualBox. Oh-oh - I am using VirtualBox for OpenShift - so I don't want that option.&lt;br&gt;
When I press cancel I get:&lt;br&gt;
&lt;img alt="Docker will exit" src="img/2018/2018-05-06-Docker4Win2.PNG"&gt;    &lt;/p&gt;
&lt;p&gt;Damned - I don't have other option than to let the bastard disable VirtualBox - I wonder if this disabling is only for Docker4Windows... I'll bite the grasss and do as I'm told.  &lt;/p&gt;
&lt;h2&gt;2nd test drive&lt;/h2&gt;
&lt;p&gt;Ok, so 2nd time I started Docker I chose OK to enable Hyper-V and Container services. That also required a restart.  &lt;/p&gt;
&lt;p&gt;When it was done enabling and restarting it still needed some time to boot the Docker VM. Meanwhile I could take a look and see what the installation had done.&lt;br&gt;
It had enabled the Windows features Containers and Hyper-V as it told me&lt;br&gt;
&lt;img alt="Container services enabled" src="img/2018/2018-05-06-Docker4Win3.PNG"&gt;    &lt;/p&gt;
&lt;p&gt;It had enabled two Hyper-V Virtual Ethernet Adapters, but my VirtualBox networks remained. I wonder if I easily can switch to VirtualBox then?&lt;br&gt;
&lt;img alt="Docker VM Network enabled" src="img/2018/2018-05-06-Docker4Win5.PNG"&gt;    &lt;/p&gt;
&lt;p&gt;When it was done starting the Docker VM I could see it running in Hyper-V manager&lt;br&gt;
&lt;img alt="Hyper-V manager" src="img/2018/2018-05-06-Docker4Win6.PNG"&gt;   &lt;/p&gt;
&lt;p&gt;It was called MobyLinuxVM&lt;br&gt;
&lt;img alt="MobyLinuxVM" src="img/2018/2018-05-06-Docker4Win7.PNG"&gt;   &lt;/p&gt;
&lt;p&gt;Docker4Win wanted me to login to Docker Cloud. Docker Cloud uses Docker Hub as image registry, so even though I won't use Docker Cloud at this time, I'll need to be logged in to Docker.&lt;br&gt;
&lt;img alt="Docker for windows GUI" src="img/2018/2018-05-06-Docker4Win4.PNG"&gt;   &lt;/p&gt;
&lt;p&gt;Docker4Win GUI disappears, when you log in - but then you go to TaskBar-Notification area to find Docker4Win. Choose Settings&lt;br&gt;
&lt;img alt="Docker for windows GUI" src="img/2018/2018-05-06-Docker4Win8.PNG"&gt;   &lt;/p&gt;
&lt;p&gt;I unchecked &lt;code&gt;Start Docker when you log in&lt;/code&gt;. Then I hope I can be using VirtualBox, too. I am unsure if I have to disable Hyper-V and/or Container services before that is possible. I'll come back with an update later. &lt;/p&gt;
&lt;p&gt;After boot Docker VM will not be running, but you'll have docker client somewhere on the PC:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker -v
&lt;span class="c1"&gt;# Docker version 18.03.1-ce, build 9ee9f40&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;But while the VM is not running you'll get an error, when calling the VM:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker images
&lt;span class="c1"&gt;# error during connect: Get http://%2F%2F.%2Fpipe%2Fdocker_engine/v1.37/images/json: open //./pipe/docker_engine: The system cannot find the file specified. In the default daemon configuration on Windows, the docker client must be run elevated to connect. This error may also indicate that the docker daemon is not running.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Workflow&lt;/h2&gt;
&lt;p&gt;After boot you'll be able to do like this:  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Start D4W from the Desktop icon - and wait for the Docker animation in the taskbar-notofication-area to end - then Docker VM has started&lt;/li&gt;
&lt;li&gt;Call D4W:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker images
&lt;span class="c1"&gt;# REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Do some more work from bash e.g. read &lt;a href="https://www.syncfusion.com/ebooks/docker_succinctly"&gt;Docker Succinctly&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;AddOns&lt;/h2&gt;
&lt;p&gt;The Docker taksbar menu gives you an option called &lt;a href="https://kitematic.com/"&gt;Kitematic&lt;/a&gt;. When you select the menu you'll &lt;a href="https://download.docker.com/kitematic/Kitematic-Windows.zip"&gt;start downloading Kitematic&lt;/a&gt;.&lt;br&gt;
Kitematic is a GUI on top of your Docker CLI.&lt;br&gt;
Here I even have the option to switch back to VirtualBox. I'll do that later.&lt;br&gt;
&lt;img alt="Kitematic settings" src="img/2018/2018-05-06-Docker4Win9.PNG"&gt;   &lt;/p&gt;
&lt;p&gt;I wonder if that switch will work - changing shell from powershell to bash did not work - Kitematic is in time og writing only in Alpha.&lt;/p&gt;
&lt;h2&gt;D4W CLI - docker-machine&lt;/h2&gt;
&lt;p&gt;Behind the scenes it seemes like the D4W uses &lt;a href="https://github.com/docker/machine"&gt;docker-machine&lt;/a&gt; for setting up a docker host.&lt;br&gt;
You can use docker-machine for setting up a docker swarm cluster.&lt;br&gt;
Here is a Gist for setting up Swarm for host for OpenFaas: &lt;a href="https://gist.github.com/johnmccabe/55baab605c0fb82df9c1cbf8c3dde407"&gt;Running OpenFaaS on Windows 10 - using Docker Swarm on Hyper-V&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Links&lt;/h2&gt;
&lt;h3&gt;Learn&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.syncfusion.com/ebooks/docker_succinctly"&gt;Syncfusion Free Ebooks | Docker Succinctly&lt;/a&gt; (2018)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developers.redhat.com/cheat-sheets/containers/"&gt;Containers Cheat Sheet&lt;/a&gt; (2017)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Hosts&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://cloud.docker.com/"&gt;Docker Cloud&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;The Public Docker Image Registry &lt;a href="https://hub.docker.com/"&gt;Docker Hub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Other installation&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://rasor.github.io/curl-cli-on-windows.html"&gt;cUrl CLI on Windows&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.jayway.com/2017/04/19/running-docker-on-bash-on-windows/"&gt;Running Docker containers on Bash on Windows&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DivanteLtd/vue-storefront/blob/master/doc/Installing%20on%20Windows.md"&gt;vue-storefront Installing on Windows.md&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The End.&lt;/p&gt;</content><category term="DevOps"></category><category term="#docker"></category><category term="#hyperv"></category><category term="#virtualbox"></category><category term="#openfaas"></category><category term="#kitematic"></category></entry><entry><title>Developing with OpenShift</title><link href="https://rasor.github.io/developing-with-openshift.html" rel="alternate"></link><published>2018-04-15T15:00:00+02:00</published><updated>2020-10-27T20:00:00+01:00</updated><author><name>rasor</name></author><id>tag:rasor.github.io,2018-04-15:/developing-with-openshift.html</id><summary type="html">&lt;p&gt;It has become time (for me) to explore OpenShift.
OpenShift is a Build and Deployment block using Kubernetes and Docker as deployment target. In other words: It connects GitHub and DockerHub to your cloud provider. It allows you to do do on-premise deployment and to monitor and operate your cloud …&lt;/p&gt;</summary><content type="html">&lt;p&gt;It has become time (for me) to explore OpenShift.
OpenShift is a Build and Deployment block using Kubernetes and Docker as deployment target. In other words: It connects GitHub and DockerHub to your cloud provider. It allows you to do do on-premise deployment and to monitor and operate your cloud.
In this blog I'll run it (my own little cloud) locally on Windows.&lt;/p&gt;
&lt;h2&gt;Why OpenShift?&lt;/h2&gt;
&lt;p&gt;There are four good reasons seen with my dev glasses on: &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;OpenShift is my local cloud. I can build it locally and replicate it to a real cloud, when I see it is working as intended.&lt;/li&gt;
&lt;li&gt;I don't have to pay cloud resources for a test envir except for when testers needs it - I'll delete it, when it is not in use.&lt;/li&gt;
&lt;li&gt;Microservices like Redis and MongoDB - I can have it installed inside my OpenShift envir - just by fetching them as containers from DockerHub. Once I know how there'll not be any hassle and I won't be forsed to use SaaS services.&lt;/li&gt;
&lt;li&gt;When you build your OpenShift environment with Ansible it becomes an environment you can deploy to any cloud provider.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Of course there'll be pros and cons depending on your taste and on other requirement, but OpenShift is a great option.&lt;/p&gt;
&lt;h2&gt;So how to get started with OpenShift?&lt;/h2&gt;
&lt;h3&gt;Which editions (products) are awailbale?&lt;/h3&gt;
&lt;p&gt;Currently (spring 2018) you get a good helicopter view from the free eBook &lt;a href="https://www.openshift.com/promotions/deploying-to-openshift.html"&gt;Deploying to OpenShift&lt;/a&gt; - Preface - Online Resources.&lt;br&gt;
From there you'll learn that there are two editions (called products) of OpenShift:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;OpenShift Origin&lt;/code&gt; - This is the OpenShift repo, that you can also use while doing local dev.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;OpenShift Container Platform&lt;/code&gt; - An Enterprise version aimed for on-premise hosting of your own cloud.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;On the &lt;a href="https://docs.openshift.com/"&gt;OpenShift documentation&lt;/a&gt; homepage, you'll learn that there are also two more editions (products):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;OpenShift Dedicated&lt;/code&gt; - Redhat's managed public cloud edition of &lt;code&gt;OpenShift Container Platform&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;OpenShift Online&lt;/code&gt; - I think this is like the dedicated edition (single tenant) except that the VMs are not dedicated to only one customer, but are multi tenant.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The latter two editions seems to be clouds hosted by RedHat.&lt;/p&gt;
&lt;p&gt;OpenShift is a managed PaaS, that must be deployed to some IaaS &lt;a href="https://developers.redhat.com/products/cdk/overview/"&gt;explained here&lt;/a&gt; - Quote:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The containers you build can be easily deployed on any Red Hat container host or platform, including: &lt;code&gt;Red Hat Enterprise Linux&lt;/code&gt;, &lt;code&gt;Red Hat Enterprise Linux Atomic Host&lt;/code&gt;, and our platform-as-a-service solution, &lt;code&gt;OpenShift Container Platform 3&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I think this IaaS stack often will be RedHat OpenStack and probably also is it, when you are using RedHat Enterprise Linux as the container host.&lt;/p&gt;
&lt;h3&gt;How do I start playing with the toy?&lt;/h3&gt;
&lt;p&gt;You can locally play with either &lt;code&gt;OpenShift Origin&lt;/code&gt; or &lt;code&gt;OpenShift Container Platform&lt;/code&gt;.  &lt;/p&gt;
&lt;p&gt;With &lt;code&gt;OpenShift Origin&lt;/code&gt; you have &lt;a href="https://github.com/sclorg/nodejs-ex#nodejs-sample-app-on-openshift"&gt;5 options&lt;/a&gt;:  &lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;code&gt;OpenShift Origin&lt;/code&gt; Option&lt;/th&gt;
&lt;th&gt;Win/Mac/Lin&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1.&lt;/td&gt;
&lt;td&gt;Running a VM with &lt;code&gt;Vagrant&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;W/M/L&lt;/td&gt;
&lt;td&gt;*1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2.&lt;/td&gt;
&lt;td&gt;Running a VM managed by &lt;code&gt;MiniShift&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;W/M/L&lt;/td&gt;
&lt;td&gt;*1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3.&lt;/td&gt;
&lt;td&gt;Starting a &lt;code&gt;Docker&lt;/code&gt; container&lt;/td&gt;
&lt;td&gt;L (Fedora, CentOS, RHEL)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4.&lt;/td&gt;
&lt;td&gt;Downloading the &lt;code&gt;binary&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;L&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5.&lt;/td&gt;
&lt;td&gt;Running an &lt;code&gt;Ansible&lt;/code&gt; playbook&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;*1: &lt;code&gt;MiniShift&lt;/code&gt; is a newer method for local development than the method used in eBook &lt;code&gt;OpenShift for Developers&lt;/code&gt; called &lt;code&gt;Vagrant all-in-one virtual machine&lt;/code&gt;.&lt;br&gt;
In eBook &lt;code&gt;DevOps with OpenShift&lt;/code&gt; a local all-in-one cluster is started using &lt;code&gt;oc cluster up&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;In the table below there are some links provided by OpenShift:  &lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;code&gt;Origin&lt;/code&gt;&lt;/th&gt;
&lt;th&gt;&lt;code&gt;Container Platform&lt;/code&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Download and Run Openshift locally&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.openshift.org/minishift/"&gt;&lt;code&gt;MiniShift&lt;/code&gt;&lt;/a&gt; *1&lt;/td&gt;
&lt;td&gt;&lt;a href="https://developers.redhat.com/products/cdk/overview/"&gt;&lt;code&gt;Container Development Kit (CDK)&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Test Hosted Openshift&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://aws.amazon.com/testdrive/redhat/"&gt;Red Hat Test Drive&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Install Walkthrough&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://docs.openshift.com/container-platform/3.9/getting_started/install_openshift.html"&gt;Container Platform 3.9&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Configure Walkthrough&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://docs.openshift.com/container-platform/3.9/getting_started/configure_openshift.html"&gt;Container Platform 3.9&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Web Console&lt;/code&gt; Walkthrough&lt;/td&gt;
&lt;td&gt;&lt;a href="https://docs.openshift.org/3.9/getting_started/developers_console.html"&gt;Origin 3.9&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://docs.openshift.com/container-platform/3.9/getting_started/developers_console.html"&gt;Container Platform 3.9&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;CLI&lt;/code&gt; Walkthrough&lt;/td&gt;
&lt;td&gt;&lt;a href="https://docs.openshift.org/3.9/getting_started/developers_cli.html"&gt;Origin 3.9&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://docs.openshift.com/container-platform/3.9/getting_started/developers_cli.html"&gt;Container Platform 3.9&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;So there are lots of options to play with it locally. I'll use &lt;code&gt;MiniShift&lt;/code&gt;, which seems to be the simplest option.&lt;/p&gt;
&lt;h3&gt;What is in the box?&lt;/h3&gt;
&lt;p&gt;Fig 1. When you run the box there will be a REST API enabling you to manage the box (Drawing by &lt;a href="https://www.levvel.io/author/james-buckett"&gt;James Bucket&lt;/a&gt; hosted by levvel.io)
&lt;a href="https://www.levvel.io/our-ideas/differences-between-kubernetes-and-openshift"&gt;&lt;img alt="OpenShift access and control" src="https://cdn.levvel.io/blog_content/James+Buckett+Differences+Article/Differences2.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Fig 2. Your code (in docker containers) will be deployed to Kubernetes Pods inside the box (Drawing by &lt;a href="https://www.levvel.io/author/james-buckett"&gt;James Bucket&lt;/a&gt; hosted by levvel.io)&lt;br&gt;
&lt;a href="https://www.levvel.io/our-ideas/differences-between-kubernetes-and-openshift"&gt;&lt;img alt="OpenShift project (Namespace)" src="https://cdn.levvel.io/blog_content/James+Buckett+Differences+Article/Differences1.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If you compare Fig 2. to a deployment in GCP without OpenShift, then you'll notice that OpenShift takes all the pieces and put them into one box.&lt;br&gt;
So if you build your OpenShift environment (including DBs and other microservices) with Ansible, then you can deploy it to any cloud provider - you environment is now 100% portable.&lt;br&gt;
Fig 3. Continuous Deployment to Kubernetes Engine using Jenkins (Drawing hosted by google.com)&lt;br&gt;
&lt;a href="https://cloud.google.com/solutions/continuous-delivery-jenkins-kubernetes-engine?hl=en"&gt;&lt;img alt="Continuous Deployment to Kubernetes Engine using Jenkins" src="https://cloud.google.com/solutions/images/jenkins-cd-container-engine.svg"&gt;&lt;/a&gt;  &lt;/p&gt;
&lt;p&gt;Fig 4. RedHats own picture of OpenShift runtime environment (Drawing by &lt;a href="https://blog.openshift.com/author/mikebarrett/"&gt;Mike Barret&lt;/a&gt; hosted by openshift.com)
&lt;a href="https://blog.openshift.com/openshift-enterprise-3-evolving-paas-future/"&gt;&lt;img alt="OpenShift runtime environment" src="https://www.openshift.com/hubfs/Imported_Blog_Media/arch-diagram.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Installation&lt;/h2&gt;
&lt;h3&gt;VirtualBox&lt;/h3&gt;
&lt;p&gt;I am installing on Windows 10.&lt;br&gt;
Openshift needs a hypervisor. There are two options: Hyper-v or VirtualBox.&lt;br&gt;
VirtualBox is the easy one to handle is my experince. It is also an option that can be chosen both on Windows, Linux and Mac.&lt;br&gt;
I have used hypervisors some years ago on my local PC, so I know that I have already enabled &lt;code&gt;Intel Virtualization Technology&lt;/code&gt; (also known as &lt;code&gt;Intel VT&lt;/code&gt;) in the Bios. It was required for Hyper-v, so I assume it is either beneficial or required for VirtualBox, too.&lt;br&gt;
Notice: Not all PC's comes with Intel VT.  &lt;/p&gt;
&lt;p&gt;When you have &lt;a href="https://www.virtualbox.org/wiki/Downloads"&gt;downloaded VirtualBox&lt;/a&gt; and start to install it you are told that it will disconnect your network (why did I also just start a long running upload? - I'll abort that for a while)&lt;br&gt;
Fig 5. Your network will disconnect&lt;br&gt;
&lt;img alt="Will disconnect network" src="img/2018/2018-04-15-OpenShift1.PNG"&gt;&lt;/p&gt;
&lt;p&gt;After restart I had an extra network adapter&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ipconfig /all

&lt;span class="c1"&gt;# output:&lt;/span&gt;
&lt;span class="c1"&gt;# Ethernet adapter VirtualBox Host-Only Network:&lt;/span&gt;
&lt;span class="c1"&gt;#   Connection-specific DNS Suffix  . :&lt;/span&gt;
&lt;span class="c1"&gt;#   Description . . . . . . . . . . . : VirtualBox Host-Only Ethernet Adapter&lt;/span&gt;
&lt;span class="c1"&gt;#   IPv4 Address. . . . . . . . . . . : 192.168.56.1(Preferred)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;MiniShift&lt;/h3&gt;
&lt;p&gt;I downloaded and unzipped &lt;a href="https://github.com/minishift/minishift/releases"&gt;minishift/minishift&lt;/a&gt; for Windows.&lt;br&gt;
It could be unzipped to anywhere. I chose &lt;code&gt;C:\Program Files\&lt;/code&gt;, so after unzip the MiniShift path was &lt;code&gt;C:\Program Files\minishift-1.15.1-windows-amd64&lt;/code&gt;. That path had to be added to the environment %path%.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Verify minishift can be reached from any local path&lt;/span&gt;
&lt;span class="c1"&gt;# Note: On Windows minishift cannot be executed from a network drive&lt;/span&gt;
minishift --help
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If any issues consult &lt;a href="https://docs.openshift.org/latest/minishift/getting-started/installing.html"&gt;Installing Minishift&lt;/a&gt; guide.&lt;/p&gt;
&lt;h2&gt;Test driving MiniShift&lt;/h2&gt;
&lt;h3&gt;&lt;a href="https://docs.openshift.org/latest/minishift/getting-started/quickstart.html#starting-minishift"&gt;Start&lt;/a&gt; and stop&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Optionally Start hypervisor - if you don&amp;#39;t start the GUI, it will be started by MiniShift as headless using VBoxHeadless.exe&lt;/span&gt;
C:&lt;span class="se"&gt;\P&lt;/span&gt;rogram Files&lt;span class="se"&gt;\O&lt;/span&gt;racle&lt;span class="se"&gt;\V&lt;/span&gt;irtualBox&lt;span class="se"&gt;\V&lt;/span&gt;irtualBox.exe
&lt;span class="c1"&gt;# Start minishift&lt;/span&gt;
minishift start --vm-driver&lt;span class="o"&gt;=&lt;/span&gt;virtualbox
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Output&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;-- Starting profile &amp;#39;minishift&amp;#39;
-- Checking if requested OpenShift version &amp;#39;v3.7.2&amp;#39; is valid ... OK
-- Checking if requested OpenShift version &amp;#39;v3.7.2&amp;#39; is supported ... OK
-- Checking if requested hypervisor &amp;#39;virtualbox&amp;#39; is supported on this platform ... OK
-- Checking if VirtualBox is installed ... OK
-- Checking the ISO URL ... OK
-- Downloading OpenShift binary &amp;#39;oc&amp;#39; version &amp;#39;v3.7.2&amp;#39;
 38.44 MiB / 38.44 MiB [=======================================================================================================================================] 100.00% 0s-- Downloading OpenShift v3.7.2 checksums ... OK
-- Checking if provided oc flags are supported ... OK
-- Starting local OpenShift cluster using &amp;#39;virtualbox&amp;#39; hypervisor ...
-- Minishift VM will be configured with ...
   Memory:    2 GB
   vCPUs :    2
   Disk size: 20 GB

   Downloading ISO &amp;#39;https://github.com/minishift/minishift-b2d-iso/releases/download/v1.2.0/minishift-b2d.iso&amp;#39;
 40.00 MiB / 40.00 MiB [=======================================================================================================================================] 100.00% 0s
-- Starting Minishift VM ...................................... OK
-- Checking for IP address ... OK
-- Checking for nameservers ... OK
-- Checking if external host is reachable from the Minishift VM ...
   Pinging 8.8.8.8 ... OK
-- Checking HTTP connectivity from the VM ...
   Retrieving http://minishift.io/index.html ... OK
-- Checking if persistent storage volume is mounted ... OK
-- Checking available disk space ... 0% used OK
   Importing &amp;#39;openshift/origin:v3.7.2&amp;#39; . CACHE MISS
   Importing &amp;#39;openshift/origin-docker-registry:v3.7.2&amp;#39; . CACHE MISS
   Importing &amp;#39;openshift/origin-haproxy-router:v3.7.2&amp;#39; . CACHE MISS
-- OpenShift cluster will be configured with ...
   Version: v3.7.2
Starting OpenShift using openshift/origin:v3.7.2 ...
Pulling image openshift/origin:v3.7.2
Pulled 1/4 layers, 26% complete
Pulled 2/4 layers, 78% complete
Pulled 3/4 layers, 90% complete
Pulled 4/4 layers, 100% complete
Extracting
Image pull complete
OpenShift server started.

The server is accessible via web console at:
    https://192.168.99.100:8443

You are logged in as:
    User:     developer
    Password: &amp;lt;any value&amp;gt;

To login as administrator:
    oc login -u system:admin

-- Exporting of OpenShift images is occuring in background process with pid 11256.
&amp;gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If your screen looks like above the downloded minishift image wil be cached to&lt;br&gt;
&lt;code&gt;c:\users\youruserid\.minishift\cache\iso\b2d\v1.2.0\&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Fig 6. In VirtualBox you'll see the VM running:
&lt;img alt="Minishift running" src="img/2018/2018-04-15-OpenShift2.PNG"&gt;&lt;/p&gt;
&lt;p&gt;If you have trouble consult &lt;a href="https://docs.openshift.org/latest/minishift/getting-started/quickstart.html"&gt;Minishift Quickstart&lt;/a&gt; and &lt;a href="https://docs.openshift.org/latest/minishift/troubleshooting/troubleshooting-getting-started.html#minshift-startup-check-failed"&gt;Troubleshooting Minishift&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;As you could see from the output you got an url to the &lt;a href="https://192.168.99.100:8443/console/"&gt;Web Console: https://192.168.99.100:8443/&lt;/a&gt; that was shown in Fig 1.&lt;br&gt;
Fig 7. Log in to Minishift web console with user &lt;code&gt;developer&lt;/code&gt; and &lt;code&gt;&amp;lt;any key&amp;gt;&lt;/code&gt; as psw.
&lt;img alt="Log in to Minishift Web Console" src="img/2018/2018-04-15-OpenShift3.PNG"&gt;  &lt;/p&gt;
&lt;p&gt;Fig 8. MiniShift Web Console
&lt;img alt="MiniShift Web Console" src="img/2018/2018-04-15-OpenShift4.PNG"&gt;&lt;/p&gt;
&lt;p&gt;OK, we're in. How about turning off?&lt;/p&gt;
&lt;p&gt;VirtualBox has following options:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Action&lt;/th&gt;
&lt;th&gt;Keybord shortcut&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Pause&lt;/td&gt;
&lt;td&gt;Ctrl-P&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Reset&lt;/td&gt;
&lt;td&gt;Ctrl-T&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Close - save state&lt;/td&gt;
&lt;td&gt;Ctrl-V&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ACPI Shutdown&lt;/td&gt;
&lt;td&gt;Ctrl-H&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Power Off&lt;/td&gt;
&lt;td&gt;Ctrl-F&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;You could accidently power off the VM. No worries - you can just start from scratch with minishift start ... - as before.
But MiniShift has a corresponding command for stopping:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;minishift stop
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Did you notice during stop - the image is a &lt;a href="https://github.com/boot2docker/boot2docker"&gt;boot2docker&lt;/a&gt; - which apparently is what b2d is short for. On their githup page they recommend that on Windows one should rather use &lt;a href="https://www.docker.com/docker-windows"&gt;Docker For Windows&lt;/a&gt;. I wonder if that will be the default image, if you choose hyper-v as hyperviser...&lt;/p&gt;
&lt;h3&gt;The oc CLI&lt;/h3&gt;
&lt;p&gt;In Fig 1. you saw three clients for MiniShift: Dev CLI, Adm CLI and Web Console.&lt;br&gt;
I think the Dev and Adm CLI is one and same - just having different roles using it. At least I know that for CLI we have the &lt;code&gt;oc&lt;/code&gt; command.&lt;br&gt;
But where is it?&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Start again&lt;/span&gt;
minishift start --vm-driver&lt;span class="o"&gt;=&lt;/span&gt;virtualbox
&lt;span class="c1"&gt;# What does status print?&lt;/span&gt;
minishift status
&lt;span class="c1"&gt;# Output:&lt;/span&gt;
&lt;span class="c1"&gt;# Minishift:  Running&lt;/span&gt;
&lt;span class="c1"&gt;# Profile:    minishift&lt;/span&gt;
&lt;span class="c1"&gt;# OpenShift:  Running (openshift v3.7.2+5eda3fa-5)&lt;/span&gt;
&lt;span class="c1"&gt;# DiskUsage:  8% of 17.9G&lt;/span&gt;

&lt;span class="c1"&gt;# Print what to exec to add oc to your %path%&lt;/span&gt;
minishift oc-env
&lt;span class="c1"&gt;# Output&lt;/span&gt;
&lt;span class="c1"&gt;# export PATH=&amp;quot;C:\Users\youruserid\.minishift\cache\oc\v3.7.2\windows:$PATH&amp;quot;&lt;/span&gt;
&lt;span class="c1"&gt;# Run this command to configure your shell:&lt;/span&gt;
&lt;span class="c1"&gt;# eval $(minishift oc-env)&lt;/span&gt;

&lt;span class="c1"&gt;# Nice - then let&amp;#39;s do what it tells us to do. This works at least from the Git bash shell:&lt;/span&gt;
&lt;span class="nb"&gt;eval&lt;/span&gt; &lt;span class="k"&gt;$(&lt;/span&gt;minishift oc-env&lt;span class="k"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Did it work?&lt;/span&gt;
oc --help
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Output: &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;OpenShift Client

This client helps you develop, build, deploy, and run your applications on any OpenShift or Kubernetes compatible platform. It also includes the administrative commands for managing a cluster under the &amp;#39;adm&amp;#39; subcommand.

Basic Commands:
  types           An introduction to concepts and types
  login           Log in to a server
  new-project     Request a new project
  new-app         Create a new application
  status          Show an overview of the current project
  project         Switch to another project
  projects        Display existing projects
  explain         Documentation of resources
  cluster         Start and stop OpenShift cluster

Build and Deploy Commands:
  rollout         Manage a Kubernetes deployment or OpenShift deployment config
  rollback        Revert part of an application back to a previous deployment
  new-build       Create a new build configuration
  start-build     Start a new build
  cancel-build    Cancel running, pending, or new builds
  import-image    Imports images from a Docker registry
  tag             Tag existing images into image streams

Application Management Commands:
  get             Display one or many resources
  describe        Show details of a specific resource or group of resources
  edit            Edit a resource on the server
  set             Commands that help set specific features on objects
  label           Update the labels on a resource
  annotate        Update the annotations on a resource
  expose          Expose a replicated application as a service or route
  delete          Delete one or more resources
  scale           Change the number of pods in a deployment
  autoscale       Autoscale a deployment config, deployment, replication controller, or replica set
  secrets         Manage secrets
  serviceaccounts Manage service accounts in your project

Troubleshooting and Debugging Commands:
  logs            Print the logs for a resource
  rsh             Start a shell session in a pod
  rsync           Copy files between local filesystem and a pod
  port-forward    Forward one or more local ports to a pod
  debug           Launch a new instance of a pod for debugging
  exec            Execute a command in a container
  proxy           Run a proxy to the Kubernetes API server
  attach          Attach to a running container
  run             Run a particular image on the cluster
  cp              Copy files and directories to and from containers.

Advanced Commands:
  adm             Tools for managing a cluster
  create          Create a resource by filename or stdin
  replace         Replace a resource by filename or stdin
  apply           Apply a configuration to a resource by filename or stdin
  patch           Update field(s) of a resource using strategic merge patch
  process         Process a template into list of resources
  export          Export resources so they can be used elsewhere
  extract         Extract secrets or config maps to disk
  idle            Idle scalable resources
  observe         Observe changes to resources and react to them (experimental)
  policy          Manage authorization policy
  auth            Inspect authorization
  convert         Convert config files between different API versions
  import          Commands that import applications
  image           Useful commands for managing images

Settings Commands:
  logout          End the current server session
  config          Change configuration files for the client
  whoami          Return information about the current session
  completion      Output shell completion code for the specified shell (bash or zsh)

Other Commands:
  help            Help about any command
  plugin          Runs a command-line plugin
  version         Display client and server versions

Use &amp;quot;oc &amp;lt;command&amp;gt; --help&amp;quot; for more information about a given command.
Use &amp;quot;oc options&amp;quot; for a list of global command-line options (applies to all commands).
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If you save (&lt;a href="https://gist.github.com/rasor/2060037307731d2c2bb740e503c951bb"&gt;or download&lt;/a&gt;) the following to &lt;code&gt;C:\Program Files\minishift-1.15.1-windows-amd64\shiftcli.sh&lt;/code&gt;, then you can start your minishift from Git Bash with &lt;code&gt;shiftcli.sh&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/bin/bash&lt;/span&gt;
&lt;span class="c1"&gt;#shiftcli.sh&lt;/span&gt;
&lt;span class="c1"&gt;# Start a VM and start an OpenShift Cluster inside the VM&lt;/span&gt;
minishift start --vm-driver&lt;span class="o"&gt;=&lt;/span&gt;virtualbox
minishift status
&lt;span class="c1"&gt;# Enable oc - the CLI&lt;/span&gt;
&lt;span class="nb"&gt;eval&lt;/span&gt; &lt;span class="k"&gt;$(&lt;/span&gt;minishift oc-env&lt;span class="k"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# print oc cmds, if you prefer CLI to the Web Console&lt;/span&gt;
oc --help
&lt;span class="c1"&gt;# optionally start Web Console if you like that better than the CLI&lt;/span&gt;
start chrome https://192.168.99.100:8443/ 

&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;minishift stop #when done&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Tip: There is a desktop k8s clustermanager called &lt;a href="https://kubernetic.com/"&gt;Kubernetic&lt;/a&gt; - Details: &lt;a href="https://docs.kubernetic.com/"&gt;docs.kubernetic&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;Next: Deploying to MiniShift&lt;br&gt;
... to be continued in Part 2&lt;/p&gt;
&lt;h1&gt;Links&lt;/h1&gt;
&lt;h2&gt;References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.openshift.org/latest/minishift/command-ref/minishift.html"&gt;MiniShift - Command Reference&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.openshift.org/latest/cli_reference/index.html"&gt;oc CLI Reference&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.openshift.org/latest/apb_devel/index.html"&gt;apb CLI - Ansible Playbook Bundle Development Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developers.redhat.com/downloads/"&gt;Downloads | Red Hat Developer Program&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Getting Started&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.openshift.com/"&gt;OpenShift Blog&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.openshift.com/announcing-net-core-2-0-support-openshift/"&gt;Announcing .NET Core 2.0 Support for OpenShift&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.openshift.com/asp-net-on-openshift-getting-started-in-asp-net/"&gt;ASP.NET on OpenShift: Getting started in ASP.NET&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developers.redhat.com/blog/2017/10/11/running-nuget-server-openshift/"&gt;Running a NuGet server on OpenShift&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developers.redhat.com/products/dotnet/overview/"&gt;.NET Core 2.0 Overview&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developers.redhat.com/topics/dotnet/"&gt;.NET Core 2.0 Topics&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://commons.openshift.org/"&gt;OpenShift Commons&lt;/a&gt; - a community&lt;ul&gt;
&lt;li&gt;&lt;a href="https://commons.openshift.org/sig/Openshift.NET.html"&gt;OpenShift .NET Special Interest Group&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://commons.openshift.org/events.html"&gt;OpenShift Events&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Free eBook 1: &lt;a href="https://www.openshift.com/promotions/for-developers.html"&gt;OpenShift for Developers&lt;/a&gt; (2016)&lt;/li&gt;
&lt;li&gt;Free eBook 2: &lt;a href="https://www.openshift.com/promotions/devops-with-openshift.html"&gt;DevOps with OpenShift&lt;/a&gt; (2017)&lt;ul&gt;
&lt;li&gt;&lt;a href="https://12factor.net/"&gt;The Twelve-Factor App &lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Free eBook 3: &lt;a href="https://www.openshift.com/promotions/deploying-to-openshift.html"&gt;Deploying to OpenShift&lt;/a&gt; (2018)&lt;/li&gt;
&lt;li&gt;Free eBook 4: &lt;a href="https://developers.redhat.com/promotions/dot-net-core/"&gt;Transitioning to .NET Core on Red Hat Enterprise Linux&lt;/a&gt; (2016)&lt;/li&gt;
&lt;li&gt;More eBooks: &lt;a href="https://developers.redhat.com/search/?f=type~book&amp;amp;s=most-recent"&gt;Search Results Red Hat Developers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Cheat Sheet: &lt;a href="https://developers.redhat.com/cheat-sheets/red-hat-openshift-container-platform/"&gt;Red Hat OpenShift Container Platform&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Cheat Sheet: &lt;a href="https://developers.redhat.com/cheat-sheets/net-core-red-hat-enterprise-linux/"&gt;.NET Core 2.0 on Red Hat Enterprise Linux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;More Cheat Sheets: &lt;a href="https://developers.redhat.com/search/?f=type~cheatsheet&amp;amp;s=most-recent"&gt;Search Results Red Hat Developers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://learn.openshift.com/"&gt;OpenShift: Interactive Learning Portal&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;Above is based on &lt;a href="https://katacoda.com/"&gt;Katacoda - Interactive Learning Platform&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.alexellis.io/openshift-in-a-footloose-container/"&gt;Install OpenShift in a container with Weave Footloose&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/weaveworks/footloose"&gt;weaveworks/footloose&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.openshift.com/openfaas-on-openshift/"&gt;OpenFaaS on OpenShift - Red Hat OpenShift Blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Old &lt;a href="https://rasor.wordpress.com/2013/11/26/cloud-services/"&gt;Cloud&lt;/a&gt; landscape anno 2013 - from my old blog.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The End&lt;/p&gt;</content><category term="DevOps"></category><category term="#openshift"></category><category term="#docker"></category><category term="#kubernetes"></category><category term="#redhat"></category><category term="#paas"></category><category term="#virtualbox"></category><category term="#ansible"></category><category term="#kubernetic"></category><category term="#openfaas"></category><category term="#footloose"></category></entry><entry><title>Moveslink 2 crash</title><link href="https://rasor.github.io/moveslink-2-crash.html" rel="alternate"></link><published>2018-01-11T19:00:00+01:00</published><updated>2018-01-11T19:00:00+01:00</updated><author><name>rasor</name></author><id>tag:rasor.github.io,2018-01-11:/moveslink-2-crash.html</id><summary type="html">&lt;p&gt;A few days ago I &lt;a href="https://support.microsoft.com/ml-in/help/12415/windows-10-recovery-options"&gt;resat my Windows 10&lt;/a&gt;, so I could start from scratch.&lt;/p&gt;
&lt;h2&gt;Problem&lt;/h2&gt;
&lt;p&gt;The USB driver for my GPS watch, Suunto Ambit 2 misbehaved.&lt;/p&gt;
&lt;p&gt;I just connected the watch with USB cable.&lt;br&gt;
Then I installed &lt;a href="http://www.movescount.com/connect/moveslink"&gt;Moveslink2&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I would see Moveslink in the taskbar and the taskmanager for …&lt;/p&gt;</summary><content type="html">&lt;p&gt;A few days ago I &lt;a href="https://support.microsoft.com/ml-in/help/12415/windows-10-recovery-options"&gt;resat my Windows 10&lt;/a&gt;, so I could start from scratch.&lt;/p&gt;
&lt;h2&gt;Problem&lt;/h2&gt;
&lt;p&gt;The USB driver for my GPS watch, Suunto Ambit 2 misbehaved.&lt;/p&gt;
&lt;p&gt;I just connected the watch with USB cable.&lt;br&gt;
Then I installed &lt;a href="http://www.movescount.com/connect/moveslink"&gt;Moveslink2&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I would see Moveslink in the taskbar and the taskmanager for a while and then it would disappear.&lt;/p&gt;
&lt;p&gt;I thought it was a problem that I had the watch connected while I installed Moveslink, but no.&lt;/p&gt;
&lt;h2&gt;Solution&lt;/h2&gt;
&lt;p&gt;It turned out that it is a &lt;a href="http://www.suunto.com/Support/faq-articles/features/what-should-i-do-if-moveslink2-does-not-start-after-installing-the-windows-10-fall-creators-update/"&gt;known error&lt;/a&gt; which appears with Windows 10 Fall Creators Update (1709).&lt;/p&gt;
&lt;p&gt;The problem causes moveslink2 to crash.&lt;/p&gt;
&lt;p&gt;What I had to do to make it disappear was:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Turn off Wifi&lt;/li&gt;
&lt;li&gt;Reconnect watch with USB wire&lt;br&gt;
=&amp;gt; Now moveslink would show&lt;/li&gt;
&lt;li&gt;Turn on Wifi&lt;/li&gt;
&lt;li&gt;Sign in to movescount.com&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All back to normal - Me happy&lt;/p&gt;
&lt;h2&gt;How you can troubleshoot&lt;/h2&gt;
&lt;p&gt;In System Information I could see&lt;br&gt;
&lt;img alt="Error in System Information" src="img/2018/2018-01-11-Ambit4.PNG"&gt;&lt;/p&gt;
&lt;p&gt;In Event Viewer I could see&lt;br&gt;
&lt;img alt="Error in Event Viewer" src="img/2018/2018-01-11-Ambit5.PNG"&gt;&lt;/p&gt;
&lt;p&gt;In Devices and Printers I could see Ambit (after all was back to normal)&lt;br&gt;
&lt;img alt="Ambit in Devices and Printers" src="img/2018/2018-01-11-Ambit1.PNG"&gt;&lt;/p&gt;
&lt;p&gt;Ambit has two drivers&lt;br&gt;
&lt;img alt="Ambit has to drivers" src="img/2018/2018-01-11-Ambit2.PNG"&gt;&lt;/p&gt;
&lt;p&gt;In Devices Manager I could not see Ambit, but now I knew which drivers it used&lt;br&gt;
&lt;img alt="Ambit in Devices Manager" src="img/2018/2018-01-11-Ambit3.PNG"&gt;&lt;/p&gt;
&lt;h2&gt;My related articles&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://rasor.wordpress.com/2012/11/09/garmin-305-display-misbehaving/"&gt;Garmin 305 display misbehaving&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rasordk.wordpress.com/2015/01/08/suunto-ruter/"&gt;Suunto Ruter (in danish)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The End&lt;/p&gt;</content><category term="DevOps"></category><category term="#ambit"></category><category term="#moveslink"></category><category term="#drivers"></category><category term="#windows"></category></entry><entry><title>NAS in the cloud</title><link href="https://rasor.github.io/nas-in-the-cloud.html" rel="alternate"></link><published>2018-01-01T12:00:00+01:00</published><updated>2018-01-01T12:00:00+01:00</updated><author><name>rasor</name></author><id>tag:rasor.github.io,2018-01-01:/nas-in-the-cloud.html</id><summary type="html">&lt;p&gt;For the last many years I've been warming up to buy a NAS solution for my home with mirroved disks and at least 1 TB.&lt;/p&gt;
&lt;p&gt;I have I-drives at several providers, since the free veersion does not give much space compared to what you often wants to backup.
One of …&lt;/p&gt;</summary><content type="html">&lt;p&gt;For the last many years I've been warming up to buy a NAS solution for my home with mirroved disks and at least 1 TB.&lt;/p&gt;
&lt;p&gt;I have I-drives at several providers, since the free veersion does not give much space compared to what you often wants to backup.
One of those providers being pCloud.
They have for long been sending me notices about my free space (10 GB) running out.
This time I acted on one such notice and was sent to&lt;br&gt;
&lt;a href="https://www.pcloud.com/cloud-storage-pricing-plans.html"&gt;&lt;img alt="Cloud Storage Pricing" src="img/2018/2017-12-31-pCloud.PNG"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Now it was possible to get 2 TB storage for a onetime payment for a lifetime period for a price probably lower than I could get a mirrowed disk solution at home for.&lt;br&gt;
Price: EUR 250,-&lt;/p&gt;
&lt;h3&gt;Pros&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Storage is striped or mirrowed on 5 disks - not only 2&lt;/li&gt;
&lt;li&gt;If one disk dies, I won't have to replace it - that's managed and included&lt;/li&gt;
&lt;li&gt;30 days backup - if wannacry hits my PC and encrypts my drives, I can just restore that cloud drive with a click&lt;/li&gt;
&lt;li&gt;I can share folders with other people without affecting adding cost for them&lt;/li&gt;
&lt;li&gt;Apps for IOS and Android&lt;/li&gt;
&lt;li&gt;Two phase authentication using my facebook account&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Cons&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Bandwitdh much lower than local wifi or USB&lt;/li&gt;
&lt;li&gt;The could drive takes up some space for caching on your local drive, which it uses for sync, so you won't have 2 TB locally, only whatever you assing for your cache&lt;/li&gt;
&lt;li&gt;Seems to not the best integration with uppload photos from IOS, but neither would a local NAS be, probably&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So finally I won't have to worry about loosing photos and other content.&lt;/p&gt;
&lt;p&gt;The End&lt;/p&gt;</content><category term="DevOps"></category><category term="#nas"></category><category term="#storage"></category><category term="#cloud"></category></entry><entry><title>Deploying Express REST API to Azure</title><link href="https://rasor.github.io/deploying-express-rest-api-to-azure.html" rel="alternate"></link><published>2017-10-29T21:00:00+01:00</published><updated>2017-10-30T17:00:00+01:00</updated><author><name>rasor</name></author><id>tag:rasor.github.io,2017-10-29:/deploying-express-rest-api-to-azure.html</id><summary type="html">&lt;p&gt;This blog is part of a series.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="https://rasor.github.io/deploying-ionic-to-azure.html"&gt;Deploying Ionic to Azure&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rasor.github.io/deploying-express-rest-api-to-azure.html"&gt;Deploying Express REST API to Azure&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Add Facebook Authentication to your Express REST API - Planned&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;In this blog I will deploy an Express REST API to Azure Mobile Apps.&lt;/p&gt;
&lt;p&gt;The exercise is almost identical to Part 1 - Deploy Ionic …&lt;/p&gt;</summary><content type="html">&lt;p&gt;This blog is part of a series.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="https://rasor.github.io/deploying-ionic-to-azure.html"&gt;Deploying Ionic to Azure&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rasor.github.io/deploying-express-rest-api-to-azure.html"&gt;Deploying Express REST API to Azure&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Add Facebook Authentication to your Express REST API - Planned&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;In this blog I will deploy an Express REST API to Azure Mobile Apps.&lt;/p&gt;
&lt;p&gt;The exercise is almost identical to Part 1 - Deploy Ionic to Azure, so in this blog I'll leave out the pictures.&lt;/p&gt;
&lt;h1&gt;Here is how to do&lt;/h1&gt;
&lt;h2&gt;The Build server (VSTS)&lt;/h2&gt;
&lt;p&gt;Currently the build server (VSTS) is running&lt;br&gt;
&lt;code&gt;user-agent = "npm/3.10.10 node/v6.10.0 win32 x64"&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;So you should also build your API with &lt;code&gt;node v6&lt;/code&gt; or perhaps a bit lower. It is a bit like in .NET you would also want to build with a framework e.g. &lt;code&gt;.NET 4.5.2&lt;/code&gt; when the build server has &lt;code&gt;.NET 4.7&lt;/code&gt; - at least you don't get too big surprises when your code is build on the build server.&lt;/p&gt;
&lt;p&gt;It should be possible to specify another node version with &lt;code&gt;WEBSITE_NODE_DEFAULT_VERSION&lt;/code&gt;, though I haven't tried. Look for more info &lt;a href="http://blog.stevensanderson.com/2016/10/04/angular2-template-for-visual-studio/"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Your local repo&lt;/h2&gt;
&lt;p&gt;So before you start deploy you should verify that your code can build for prod on &lt;code&gt;node v6&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# If you got nvm switch to v6&lt;/span&gt;
nvm list
nvm use &lt;span class="m"&gt;6&lt;/span&gt;.11.4
&lt;span class="c1"&gt;# or just check that you have v6&lt;/span&gt;
node -v
&lt;span class="c1"&gt;# If you don&amp;#39;t have v6 you might get surprises when you build in VSTS, but purhaps you won&amp;#39;t.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If no errors then we can continue.&lt;/p&gt;
&lt;h2&gt;Your remote origin&lt;/h2&gt;
&lt;p&gt;I have forked &lt;a href="https://github.com/dreamhouseapp/dreamhouse-rest-services"&gt;dreamhouseapp/dreamhouse-rest-services&lt;/a&gt; by &lt;a href="https://twitter.com/ccoenraets"&gt;Christophe Coenraets (@ccoenraets)&lt;/a&gt; to &lt;a href="https://github.com/rasor/dreamhouse-rest-services"&gt;rasor/dreamhouse-rest-services&lt;/a&gt;.&lt;br&gt;
Why? Because I need to give VSTS access to my GitHub account. I can't give it access to @ccoenraets's repo.&lt;br&gt;
You can fork &lt;a href="https://github.com/rasor/dreamhouse-rest-services"&gt;mine&lt;/a&gt;, since it is modified a bit with web.config, making it runable in Azure.&lt;br&gt;
BTW - You can read about @ccoenraets's code here: &lt;a href="http://coenraets.org/blog/2017/04/dreamhouse-sample-application-ionic3-angular4/"&gt;DreamHouse: Sample Application with Ionic 3 and Angular 4&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;web.config&lt;/code&gt; file you need for node.js projects running in IIS looks like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;utf-8&amp;quot;?&amp;gt;&lt;/span&gt;
&lt;span class="c"&gt;&amp;lt;!--&lt;/span&gt;
&lt;span class="c"&gt;     This configuration file is required if iisnode is used to run node processes behind&lt;/span&gt;
&lt;span class="c"&gt;     IIS or IIS Express.  For more information, visit:&lt;/span&gt;
&lt;span class="c"&gt;     https://github.com/tjanczuk/iisnode/blob/master/src/samples/configuration/web.config&lt;/span&gt;
&lt;span class="c"&gt;--&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;configuration&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;system.webServer&amp;gt;&lt;/span&gt;
    &lt;span class="c"&gt;&amp;lt;!-- Visit http://blogs.msdn.com/b/windowsazure/archive/2013/11/14/introduction-to-websockets-on-windows-azure-web-sites.aspx for more information on WebSocket support --&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;webSocket&lt;/span&gt; &lt;span class="na"&gt;enabled=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;false&amp;quot;&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;handlers&amp;gt;&lt;/span&gt;
      &lt;span class="c"&gt;&amp;lt;!-- Indicates that the server.js file is a node.js site to be handled by the iisnode module --&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;add&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;iisnode&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;path=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;server.js&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;verb=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;*&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;modules=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;iisnode&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/handlers&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;rewrite&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;rules&amp;gt;&lt;/span&gt;
        &lt;span class="c"&gt;&amp;lt;!-- Do not interfere with requests for node-inspector debugging --&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;rule&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;NodeInspector&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;patternSyntax=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;ECMAScript&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;stopProcessing=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;true&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;match&lt;/span&gt; &lt;span class="na"&gt;url=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;^server.js\/debug[\/]?&amp;quot;&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/rule&amp;gt;&lt;/span&gt;

        &lt;span class="c"&gt;&amp;lt;!-- First we consider whether the incoming URL matches a physical file in the /public folder --&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;rule&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;StaticContent&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;action&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Rewrite&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;url=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;public{REQUEST_URI}&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/rule&amp;gt;&lt;/span&gt;

        &lt;span class="c"&gt;&amp;lt;!-- All other URLs are mapped to the node.js site entry point --&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;rule&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;DynamicContent&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;conditions&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;add&lt;/span&gt; &lt;span class="na"&gt;input=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;{REQUEST_FILENAME}&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;matchType=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;IsFile&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;negate=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;True&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;/conditions&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;action&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Rewrite&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;url=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;server.js&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/rule&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;/rules&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/rewrite&amp;gt;&lt;/span&gt;

    &lt;span class="c"&gt;&amp;lt;!-- &amp;#39;bin&amp;#39; directory has no special meaning in node.js and apps can be placed in it --&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;security&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;requestFiltering&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;hiddenSegments&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;remove&lt;/span&gt; &lt;span class="na"&gt;segment=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;bin&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/hiddenSegments&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;/requestFiltering&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/security&amp;gt;&lt;/span&gt;

    &lt;span class="c"&gt;&amp;lt;!-- Make sure error responses are left untouched --&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;httpErrors&lt;/span&gt; &lt;span class="na"&gt;existingResponse=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;PassThrough&amp;quot;&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;

    &lt;span class="c"&gt;&amp;lt;!--&lt;/span&gt;
&lt;span class="c"&gt;      You can control how Node is hosted within IIS using the following options:&lt;/span&gt;
&lt;span class="c"&gt;        * watchedFiles: semi-colon separated list of files that will be watched for changes to restart the server&lt;/span&gt;
&lt;span class="c"&gt;        * node_env: will be propagated to node as NODE_ENV environment variable&lt;/span&gt;
&lt;span class="c"&gt;        * debuggingEnabled - controls whether the built-in debugger is enabled&lt;/span&gt;

&lt;span class="c"&gt;      See https://github.com/tjanczuk/iisnode/blob/master/src/samples/configuration/web.config for a full list of options&lt;/span&gt;
&lt;span class="c"&gt;    --&amp;gt;&lt;/span&gt;
    &lt;span class="c"&gt;&amp;lt;!--&amp;lt;iisnode watchedFiles=&amp;quot;web.config;*.js&amp;quot;/&amp;gt;--&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/system.webServer&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/configuration&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;It seems like the web.confog is generated for you, when you choose Node.js as target environment during Release Definition in VSTS.&lt;/p&gt;
&lt;h2&gt;Your local repo&lt;/h2&gt;
&lt;p&gt;When you have forked a repo do:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git clone https://github.com/yourgithubusername/dreamhouse-rest-services
&lt;span class="nb"&gt;cd&lt;/span&gt; dreamhouse-rest-services
npm install &lt;span class="c1"&gt;# download node_modules&lt;/span&gt;
start &lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;http://localhost:5000/properties&amp;quot;&lt;/span&gt; &lt;span class="c1"&gt;#start browser - this work in windows&lt;/span&gt;
node server &lt;span class="c1"&gt;# start webserver&lt;/span&gt;
&lt;span class="c1"&gt;# refresh browser (F5) if it timed out before the server was started&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Build to drop folder in VSTS&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;When you have created a VSTS account via &lt;a href="https://www.visualstudio.com/"&gt;Visual Studio VSTS&lt;/a&gt; browse to &lt;a href="https://yourvstsusername.visualstudio.com/_projects"&gt;https://yourvstsusername.visualstudio.com/_projects&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Since you already have a build project from part 1, you can reuse that project and just create yet a build definion on:
&lt;a href="https://yourvstsusername.visualstudio.com/dreamhouse-mobile-ionic/_build?path=%5C&amp;amp;_a=allDefinitions"&gt;https://yourvstsusername.visualstudio.com/dreamhouse-mobile-ionic/_build?path=%5C&amp;amp;_a=allDefinitions&lt;/a&gt;&lt;br&gt;
or you can browse to there: Press &lt;code&gt;Build and Release&lt;/code&gt; then  &lt;code&gt;All Definitions&lt;/code&gt;. There you see your Build Definition for building your Ionic project.&lt;/li&gt;
&lt;li&gt;press &lt;code&gt;+ New&lt;/code&gt; to add a new Build Definition - more or less as you might be used to from TFS.  &lt;/li&gt;
&lt;li&gt;Choose an Empty process - meaning there are no build steps to start out with  &lt;/li&gt;
&lt;li&gt;Now you need to connect to GitHub. Select &lt;code&gt;Get sources&lt;/code&gt; in left pane and select &lt;code&gt;Remote repo&lt;/code&gt; in right pane. You need to authenticate towards GitHub - go through that process.&lt;br&gt;
Name: &lt;code&gt;yourgithubusername_dreamhouse-rest-services&lt;/code&gt;
Repo: &lt;code&gt;https://github.com/yourgithubusername/dreamhouse-rest-services&lt;/code&gt;
Set Clean to &lt;code&gt;true&lt;/code&gt;, so the source files from the Ionic build will be removed - Set clean options to &lt;code&gt;Sources&lt;/code&gt;&lt;br&gt;
Notice - this is like when you did git clone locally&lt;/li&gt;
&lt;li&gt;Just above &lt;code&gt;Get Sources&lt;/code&gt; there is &lt;code&gt;Process&lt;/code&gt; - select it.&lt;br&gt;
Name: dreamhouse-rest-services-Build&lt;br&gt;
Agent Queue: Hosted VS2017&lt;/li&gt;
&lt;li&gt;So what did you do after git clone? &lt;code&gt;npm install&lt;/code&gt;. In Phase 1 press &lt;code&gt;+&lt;/code&gt; and select npm task.
&lt;img alt="Select npm task" src="img/2017/2017-10-09-VSTS5.PNG" title="Select npm task"&gt;&lt;/li&gt;
&lt;li&gt;Configure npm task by pressing the dropdown list and select &lt;code&gt;install&lt;/code&gt;&lt;br&gt;
&lt;img alt="Configure npm install" src="img/2017/2017-10-09-VSTS6.PNG" title="Configure npm install"&gt;&lt;/li&gt;
&lt;li&gt;After install you started the browser and did &lt;code&gt;node server&lt;/code&gt;. But that was a development task - not a build task  &lt;/li&gt;
&lt;li&gt;So we ran out of steps locally, but on the build server we still need to package the build output and send it to Azure&lt;br&gt;
Next task is a zip-task. Press &lt;code&gt;+&lt;/code&gt; and select &lt;code&gt;Archive Files&lt;/code&gt;&lt;br&gt;
&lt;img alt="Select zip task" src="img/2017/2017-10-09-VSTS8.PNG" title="Select zip task"&gt;&lt;/li&gt;
&lt;li&gt;Root folder is the build code you want to deploy. It is located in the &lt;code&gt;.\&lt;/code&gt; folder - just as when you work locally.&lt;br&gt;
Unselect "Prefix root folder ..."&lt;br&gt;
The name of the zipped package should be &lt;code&gt;$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;Final build step to do is to put the package in a drop folder&lt;br&gt;
Next task is a publish task. Press &lt;code&gt;+&lt;/code&gt; and select &lt;code&gt;Publish Build Artifacts&lt;/code&gt;&lt;br&gt;
Notice - you can create PowerShell, Shell Script and Batch Script tasks. So if you npm installed a nice utility, you could then do anything with it in a script which could be in your code e.g. `.\scripts\runkarmaandprotractortests.cmd
&lt;img alt="Select publish task" src="img/2017/2017-10-09-VSTS10.PNG" title="Select publish task"&gt;&lt;/li&gt;
&lt;li&gt;Path to publish is the zip file you created in last step&lt;br&gt;
Artifact Name is the name of the drop folder. Call it &lt;code&gt;drop-rest&lt;/code&gt;, so it can't be confused with the Ionic drop.&lt;br&gt;
And location must be &lt;code&gt;TFS&lt;/code&gt; (opposed to File Share)  &lt;/li&gt;
&lt;li&gt;Press &lt;code&gt;Save &amp;amp; queue&lt;/code&gt;. In top of the screen you'll see &lt;code&gt;Build #&amp;lt;some-number&amp;gt; has been queued.&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Click on &lt;code&gt;#&amp;lt;some-number&amp;gt;&lt;/code&gt;. Now you can see the progress of the build.&lt;br&gt;
When the build has finished you'll see &lt;code&gt;Build Succeeded&lt;/code&gt; and above that &lt;code&gt;dreamhouse-rest-services-Build / Build &amp;lt;some-number&amp;gt; / Phase 1&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;Click on &lt;code&gt;Build &amp;lt;some-number&amp;gt;&lt;/code&gt;. Now you get 5 tabs for that build: &lt;code&gt;Summary - Timeline - Artifacts - Code coverage* - Tests&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;Click on &lt;code&gt;Artifacts&lt;/code&gt;. Now you see the dropfolder. Check it out and see if it contains what you expected.  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Have you noticed that these Build Tasks correspond to the features in &lt;a href="https://www.jetbrains.com/teamcity/"&gt;TeamCity&lt;/a&gt;? &lt;/p&gt;
&lt;p&gt;Next up is to deploy the package to Azure.&lt;/p&gt;
&lt;h2&gt;Setup WebApp in Azure&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;When you have created a free Azure account via &lt;a href="https://azure.microsoft.com/en-in/free/"&gt;Microsoft Azure&lt;/a&gt; browse to &lt;a href="https://portal.azure.com/"&gt;Azure Portal&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;In Part 1 you created a Resource Group e.g. &lt;code&gt;ResGroupNorthEurope&lt;/code&gt;. This is where all your stuff in Azure lives.
&lt;img alt="Configure Resource Group" src="img/2017/2017-10-09-Azure2.PNG" title="Configure Resource Group"&gt;&lt;/li&gt;
&lt;li&gt;This time you could also have chosen  webapp as before, but Azure has another option called Mobile App. This has the option of offering Notifications and other MBaaS (Mobile Backend) services.&lt;br&gt;
You find that under &lt;code&gt;App Services&lt;/code&gt;. Click &lt;code&gt;+ Add&lt;/code&gt; then &lt;code&gt;Filter&lt;/code&gt;&lt;br&gt;
Enter &lt;code&gt;Mobile Apps&lt;/code&gt;&lt;br&gt;
Then you see a small selection of mobile apps  &lt;/li&gt;
&lt;li&gt;Select &lt;code&gt;Mobile App&lt;/code&gt;&lt;br&gt;
Since I have already taken subdomain dreamhouse-rest-services you have to choose another one - e.g.  &lt;code&gt;yourvstsusername-dreamhouse-rest-services&lt;/code&gt;&lt;br&gt;
Resourse Group: Use the one you created before: &lt;code&gt;`Use Existing&lt;/code&gt;&lt;br&gt;
App Service Plan is the Dyno in Heroku or EC2 in AWS - the size of your PaaS.&lt;br&gt;
Resuse the one you created in Part 1 e.g. &lt;code&gt;AppSvcPlanNorthEuropeWindows (Standard: 1 Small)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You're done in Azure. Next up is to release to Azure from VSTS.&lt;/p&gt;
&lt;h2&gt;Release to Azure from VSTS&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Go back to &lt;a href="https://yourvstsusername.visualstudio.com/dreamhouse-mobile-ionic/_build"&gt;https://yourvstsusername.visualstudio.com/dreamhouse-mobile-ionic/_build&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;You can deploy to many environments and services. This time we want to deploy to our Mobile App.&lt;br&gt;
First step is to select that target environment in a Release&lt;br&gt;
Click tab &lt;code&gt;Releases&lt;/code&gt; then &lt;code&gt;+&lt;/code&gt; - &lt;code&gt;Create Release Definition&lt;/code&gt; - Select &lt;code&gt;Deploy Node.js App to App Service&lt;/code&gt; and click Apply &lt;br&gt;
&lt;img alt="Add Release Definition" src="img/2017/2017-10-29-VSTSRelease1.PNG" title="Add Release Definition"&gt;&lt;/li&gt;
&lt;li&gt;Notice the ´!´ - something needs attention - click either of them&lt;br&gt;
&lt;img alt="Tasks needs attention" src="img/2017/2017-10-09-VSTSRelease2.PNG" title="Tasks needs attention"&gt;&lt;/li&gt;
&lt;li&gt;Hey - that looks familiar - a list of steps in a task list - just as under tab &lt;code&gt;Build&lt;/code&gt;&lt;br&gt;
Yes, but heading is &lt;code&gt;Environment 1&lt;/code&gt; - not &lt;code&gt;Phase 1&lt;/code&gt;. And for the environmet you have to connect to Azure.
Azure subscription click on the drop down list to select the one you connected to in Part 1.&lt;br&gt;
When connected you can click the dropdown list to select your mobile app &lt;code&gt;yourvstsusername-dreamhouse-rest-services&lt;/code&gt;&lt;br&gt;
&lt;img alt="Connect to Azure" src="img/2017/2017-10-29-VSTSRelease3.PNG" title="Connect to Azure"&gt;&lt;/li&gt;
&lt;li&gt;Head back to tab &lt;code&gt;Pipeline&lt;/code&gt; - we need to fetch a source to deploy&lt;br&gt;
Select &lt;code&gt;Add Artifact&lt;/code&gt; and select source type: &lt;code&gt;Build&lt;/code&gt;, so we can fetch the zip file from drop.&lt;br&gt;
Notice: Source type can also be: &lt;code&gt;Git, GitHub, Jenkins and Team Foundation Version Control&lt;/code&gt;.&lt;br&gt;
Project: Select &lt;code&gt;dreamhouse-mobile-ionic&lt;/code&gt;&lt;br&gt;
Build Definition: Select &lt;code&gt;dreamhouse-rest-services-Build&lt;/code&gt;.&lt;br&gt;
Notice that since you did a build before VSTS knows it created &lt;code&gt;drop-rest&lt;/code&gt;
Accept default values and press Add.&lt;br&gt;
&lt;img alt="Add Artifact" src="img/2017/2017-10-29-VSTSRelease4.PNG" title="Add Artifact"&gt;&lt;/li&gt;
&lt;li&gt;Press the lightning icon on the Artifact. &lt;/li&gt;
&lt;li&gt;Enable Continous deployment. Notice the trigger is whenever a new drop has been made.&lt;br&gt;
&lt;img alt="Release Trigger" src="img/2017/2017-10-09-VSTSRelease5.PNG" title="Release Trigger"&gt;&lt;/li&gt;
&lt;li&gt;Now that we have a source we can head back to &lt;code&gt;Tasks&lt;/code&gt;, select &lt;code&gt;Deploy Azure App Service&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;App Service name: &lt;code&gt;yourvstsusername-dreamhouse-mobile-rest&lt;/code&gt;&lt;br&gt;
Package: &lt;code&gt;$(System.DefaultWorkingDirectory)\**\*.zip&lt;/code&gt;. You can browse to it by pressing &lt;code&gt;...&lt;/code&gt;&lt;br&gt;
&lt;img alt="Pick zip file" src="img/2017/2017-10-09-VSTSRelease6.PNG" title="Pick zip file"&gt;&lt;/li&gt;
&lt;li&gt;Before we save the Release Definition head to &lt;code&gt;Pipeline&lt;/code&gt; - and select the Lightning in the Environment&lt;br&gt;
Notice you have a possibility to select persons to approve deployment. This can be tester that approves one environment before a build is rolled out for the next environment.&lt;br&gt;
&lt;img alt="Approvers" src="img/2017/2017-10-09-VSTSRelease7.PNG" title="Approvers"&gt;
We don't want approvers - so go on and save as &lt;code&gt;dreamhouse-rest-Release&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Have you noticed that these Release workflow correspond to the features in &lt;a href="https://octopus.com/"&gt;Octopus Deploy&lt;/a&gt;? &lt;/p&gt;
&lt;h2&gt;Trig a build and a release to Azure&lt;/h2&gt;
&lt;p&gt;Now we are ready for the big show - deploy to Azure
(Notice - all the images are reused from Part 1)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Head back to &lt;code&gt;Builds&lt;/code&gt; - tab &lt;code&gt;All Definitions&lt;/code&gt; - click on the &lt;code&gt;dreamhouse-rest-services-Build&lt;/code&gt;&lt;br&gt;
&lt;img alt="Prepare to build" src="img/2017/2017-10-09-VSTSQueue1.PNG" title="Prepare to build"&gt;&lt;/li&gt;
&lt;li&gt;Click &lt;code&gt;Queue New Build...&lt;/code&gt; - then click &lt;code&gt;Queue&lt;/code&gt; &lt;br&gt;
&lt;img alt="Queue build" src="img/2017/2017-10-09-VSTSQueue2.PNG" title="Queue build"&gt;&lt;/li&gt;
&lt;li&gt;If the Build succeded head to &lt;code&gt;Releases&lt;/code&gt; tab and verify that the build triggered a release&lt;br&gt;
&lt;img alt="Triggered release" src="img/2017/2017-10-09-VSTSQueue4.PNG" title="Triggered release"&gt;&lt;/li&gt;
&lt;li&gt;If the release succeeded, too head to &lt;code&gt;Azure App Services&lt;/code&gt; in &lt;a href="https://portal.azure.com"&gt;Azure&lt;/a&gt;&lt;br&gt;
Select your service and scroll down to &lt;code&gt;Continous Delivery&lt;/code&gt;&lt;br&gt;
You should see the Release has been Deployed Successfully&lt;br&gt;
&lt;img alt="Succeeded release" src="img/2017/2017-10-09-VSTSQueue5.PNG" title="Succeeded release"&gt;
In my case the relese ended with this warning:&lt;br&gt;
&lt;code&gt;2017-10-29T19:44:36.5445296Z ##[warning]Failed to update App Service configuration details. Error: Error: connect ETIMEDOUT 157.56.31.170:443&lt;/code&gt; That meant that the above image did not show a succeeded release. 
Instead I could browse in the App Service Console and the files were alse viewable from App Service Editor.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So to verify that browse to you service on&lt;br&gt;
&lt;a href="http://yourvstsusername-dreamhouse-mobile-rest.azurewebsites.net/properties"&gt;http://yourvstsusername-dreamhouse-mobile-rest.azurewebsites.net/properties&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If you are just reading along you can also find my site &lt;a href="http://dreamhouse-mobile-rest.azurewebsites.net/properties"&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The End.&lt;/p&gt;</content><category term="DevOps"></category><category term="#npm"></category><category term="#git"></category><category term="#express"></category><category term="#nodejs"></category><category term="#azure"></category></entry><entry><title>Deploying Ionic to Azure</title><link href="https://rasor.github.io/deploying-ionic-to-azure.html" rel="alternate"></link><published>2017-10-10T21:00:00+02:00</published><updated>2018-05-10T12:00:00+02:00</updated><author><name>rasor</name></author><id>tag:rasor.github.io,2017-10-10:/deploying-ionic-to-azure.html</id><summary type="html">&lt;p&gt;This blog is part of a series.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="https://rasor.github.io/deploying-ionic-to-azure.html"&gt;Deploying Ionic to Azure&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rasor.github.io/deploying-express-rest-api-to-azure.html"&gt;Deploying Express REST API to Azure&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The blog is based on &lt;a href="https://twitter.com/sethreidnz"&gt;@sethreidnz&lt;/a&gt;'s 
article &lt;a href="https://sethreid.co.nz/deploying-angular-cli-project-using-vsts-build-release/"&gt;Deploying an Angular CLI project using VSTS Build and Release&lt;/a&gt;.&lt;br&gt;
This blog deploys a Ionic 3 / Angular 4 app to Azure.&lt;/p&gt;
&lt;h1&gt;The final workflow&lt;/h1&gt;
&lt;p&gt;After …&lt;/p&gt;</summary><content type="html">&lt;p&gt;This blog is part of a series.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="https://rasor.github.io/deploying-ionic-to-azure.html"&gt;Deploying Ionic to Azure&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rasor.github.io/deploying-express-rest-api-to-azure.html"&gt;Deploying Express REST API to Azure&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The blog is based on &lt;a href="https://twitter.com/sethreidnz"&gt;@sethreidnz&lt;/a&gt;'s 
article &lt;a href="https://sethreid.co.nz/deploying-angular-cli-project-using-vsts-build-release/"&gt;Deploying an Angular CLI project using VSTS Build and Release&lt;/a&gt;.&lt;br&gt;
This blog deploys a Ionic 3 / Angular 4 app to Azure.&lt;/p&gt;
&lt;h1&gt;The final workflow&lt;/h1&gt;
&lt;p&gt;After your Ionic project has been connected with Azure through VSTS then you have this workflow:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;From you editor: Add feature to you project and git push to origin&lt;/li&gt;
&lt;li&gt;From VSTS: Queue a new build&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;That's it. Done. You have deployed your Ionic project to Azure as a webapp.&lt;/p&gt;
&lt;p&gt;So why doesn't the pipeline just hook a webhook into your git origin and queue a build by itself (as you are used to from e.g. Heroku)?&lt;br&gt;
Well - if you use VSTS as Version Control, then it will work - I have used "Remote repo" option - apparently it is not ready yet.&lt;/p&gt;
&lt;p&gt;And why would you want to deploy a Ionic app as a webapp, when it is supposed to be installed on phones?&lt;br&gt;
Ionic is born as PWA - you might want to use those features.&lt;br&gt;
Also you just might want to demo the app as webapp before sending it to the app store.&lt;br&gt;
So with Ionic you have only one codebase to maintain - checkout &lt;a href="https://www.millioneyez.com"&gt;MillionEyez&lt;/a&gt; on the web and download their app. Same code.  &lt;/p&gt;
&lt;p&gt;BTW - In the coming Ionic 4 Ionic will have moved to WebComponents, which enables layout components to be loaded before the content components giving a much better experience.&lt;br&gt;
You will also be able to use Ionic from any other webframework - e.g. React or VueJs.&lt;/p&gt;
&lt;h1&gt;Here is how to do&lt;/h1&gt;
&lt;h2&gt;The Build server (VSTS)&lt;/h2&gt;
&lt;p&gt;Currently the build server (VSTS) is running&lt;br&gt;
&lt;code&gt;user-agent = "npm/3.10.10 node/v6.10.0 win32 x64"&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;So you should also build your app with &lt;code&gt;node v6&lt;/code&gt; or perhaps a bit lower. It is a bit like in .NET you would also want to build with a framework e.g. &lt;code&gt;.NET 4.5.2&lt;/code&gt; when the build server has &lt;code&gt;.NET 4.7&lt;/code&gt; - at least you don't get too big surprises when your code is build on the build server.&lt;/p&gt;
&lt;p&gt;It should be possible to specify another node version with &lt;code&gt;WEBSITE_NODE_DEFAULT_VERSION&lt;/code&gt;, though I haven't tried. Look for more info &lt;a href="http://blog.stevensanderson.com/2016/10/04/angular2-template-for-visual-studio/"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Your local repo&lt;/h2&gt;
&lt;p&gt;So before you start deploy you should verify that your code can build for prod on &lt;code&gt;node v6&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# If you got nvm switch to v6&lt;/span&gt;
nvm list
nvm use &lt;span class="m"&gt;6&lt;/span&gt;.11.4
&lt;span class="c1"&gt;# or just check that you have v6&lt;/span&gt;
node -v
&lt;span class="c1"&gt;# If you don&amp;#39;t have v6 you might get surprises when you build in VSTS, but purhaps you won&amp;#39;t.&lt;/span&gt;

&lt;span class="c1"&gt;# Build for prod&lt;/span&gt;
npm run build --prod --aot
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If no errors then we can continue.&lt;/p&gt;
&lt;h2&gt;Your remote origin&lt;/h2&gt;
&lt;p&gt;I have forked &lt;a href="https://github.com/dreamhouseapp/dreamhouse-mobile-ionic"&gt;dreamhouseapp/dreamhouse-mobile-ionic&lt;/a&gt; by &lt;a href="https://twitter.com/ccoenraets"&gt;Christophe Coenraets (@ccoenraets)&lt;/a&gt; to &lt;a href="https://github.com/rasor/dreamhouse-mobile-ionic"&gt;rasor/dreamhouse-mobile-ionic&lt;/a&gt;.&lt;br&gt;
Why? Because I need to give VSTS access to my GitHub account. I can't give it access to @ccoenraets's repo.&lt;br&gt;
You can fork &lt;a href="https://github.com/rasor/dreamhouse-mobile-ionic"&gt;mine&lt;/a&gt;, since it is modified a bit with web.config, making it runable in Azure.&lt;br&gt;
BTW - You can read about @ccoenraets's code here: &lt;a href="http://coenraets.org/blog/2017/04/dreamhouse-sample-application-ionic3-angular4/"&gt;DreamHouse: Sample Application with Ionic 3 and Angular 4&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;\src\web.config&lt;/code&gt; file you need (again - thanks to @sethreidnz) for Angular projects running in IIS looks like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;utf-8&amp;quot;?&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;configuration&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;system.webServer&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;rewrite&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;rules&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;rule&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;AngularJS Routes&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;stopProcessing=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;true&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;match&lt;/span&gt; &lt;span class="na"&gt;url=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;.*&amp;quot;&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;conditions&lt;/span&gt; &lt;span class="na"&gt;logicalGrouping=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;MatchAll&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;add&lt;/span&gt; &lt;span class="na"&gt;input=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;{REQUEST_FILENAME}&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;matchType=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;IsFile&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;negate=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;true&amp;quot;&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;add&lt;/span&gt; &lt;span class="na"&gt;input=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;{REQUEST_FILENAME}&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;matchType=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;IsDirectory&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;negate=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;true&amp;quot;&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;/conditions&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;action&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Rewrite&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;url=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;/&amp;quot;&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/rule&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;/rules&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/rewrite&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/system.webServer&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/configuration&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;It accepts Angular roouting.&lt;/p&gt;
&lt;p&gt;To be able to include the web.config in the build you could do like this:&lt;/p&gt;
&lt;p&gt;package.json&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;  &lt;span class="s2"&gt;&amp;quot;config&amp;quot;&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;ionic_copy&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;./config/copy.config.js&amp;quot;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="err"&gt;,&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The ionic-app-scripts will then pick up the file, when it comes to its copy step.&lt;/p&gt;
&lt;p&gt;\config\copy.config.json&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;// Copy extra files from /src/ to /www/&lt;/span&gt;
&lt;span class="c1"&gt;// https://forum.ionicframework.com/t/rc0-injecting-custom-scripts/65281/20&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;@ionic/app-scripts/config/copy.config.js&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;exports&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;copyIndexContent&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;src&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;{{SRC}}/web.config&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Your local repo&lt;/h2&gt;
&lt;p&gt;If you forked my repo do:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;npm install -g cordova@7.0.1 ionic@3.12.0 &lt;span class="c1"&gt;# just in case you have not installed Ionic&lt;/span&gt;
git clone https://github.com/yourgithubusername/dreamhouse-mobile-ionic
&lt;span class="nb"&gt;cd&lt;/span&gt; dreamhouse-mobile-ionic
npm install &lt;span class="c1"&gt;# download node_modules&lt;/span&gt;
ionic serve &lt;span class="c1"&gt;# does code run without build?&lt;/span&gt;
npm run build --prod --aot &lt;span class="c1"&gt;# can you build?&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Build to drop folder in VSTS&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;When you have created a VSTS account via &lt;a href="https://www.visualstudio.com/"&gt;Visual Studio VSTS&lt;/a&gt; browse to &lt;a href="https://yourvstsusername.visualstudio.com/_projects"&gt;https://yourvstsusername.visualstudio.com/_projects&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Create a project for dreamhouse-mobile-ionic - Press &lt;code&gt;New Project&lt;/code&gt; and enter name &lt;code&gt;dreamhouse-mobile-ionic&lt;/code&gt;.&lt;br&gt;
&lt;img alt="New VSTS project" src="img/2017/2017-10-09-VSTS1.PNG" title="New VSTS project"&gt;&lt;/li&gt;
&lt;li&gt;Since your code is in GitHub, you don't need to have it in VSTS, too. So no need to look in tab &lt;code&gt;Code&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Instead goto tab &lt;code&gt;Build and Release&lt;/code&gt; and press &lt;code&gt;+ New&lt;/code&gt; to add a new Build Definition - more or less as you might be used to from TFS.&lt;br&gt;
&lt;img alt="New Build definition" src="img/2017/2017-10-09-VSTS2.PNG" title="New Build definition"&gt;&lt;/li&gt;
&lt;li&gt;Choose an Empty template - meaning there are no build steps to start out with&lt;br&gt;
&lt;img alt="Select Empty template" src="img/2017/2017-10-09-VSTS3.PNG" title="Select Empty template"&gt;&lt;/li&gt;
&lt;li&gt;Now you need to connect to GitHub. Select &lt;code&gt;Get sources&lt;/code&gt; in left pane and select &lt;code&gt;Remote repo&lt;/code&gt; in right pane. You need to authenticate towards GitHub - go through that process. In the image below I have already connected&lt;br&gt;
Name: &lt;code&gt;yourgithubusername_dreamhouse-mobile-ionic&lt;/code&gt;
Repo: &lt;code&gt;https://github.com/yourgithubusername/dreamhouse-mobile-ionic&lt;/code&gt;
Set Clean to &lt;code&gt;true&lt;/code&gt; - Set clean options to &lt;code&gt;Sources&lt;/code&gt;&lt;br&gt;
Notice - this is like when you did git clone locally
&lt;img alt="Connect to GitHub" src="img/2017/2017-10-09-VSTS4.PNG" title="Connect to GitHub"&gt;&lt;/li&gt;
&lt;li&gt;Just above &lt;code&gt;Get Sources&lt;/code&gt; there is &lt;code&gt;Process&lt;/code&gt; - select it.&lt;br&gt;
Name: dreamhouse-mobile-ionic-Build&lt;br&gt;
Agent Queue: Hosted VS2017&lt;/li&gt;
&lt;li&gt;So what did you do after git clone? &lt;code&gt;npm install&lt;/code&gt;. In Phase 1 press &lt;code&gt;+&lt;/code&gt; and select npm task.
&lt;img alt="Select npm task" src="img/2017/2017-10-09-VSTS5.PNG" title="Select npm task"&gt;&lt;/li&gt;
&lt;li&gt;Configure npm task by pressing the dropdown list and select &lt;code&gt;install&lt;/code&gt;&lt;br&gt;
&lt;img alt="Configure npm install" src="img/2017/2017-10-09-VSTS6.PNG" title="Configure npm install"&gt;&lt;/li&gt;
&lt;li&gt;After install you did &lt;code&gt;Ionic serve&lt;/code&gt;. But that was a development task - not a build task&lt;br&gt;
Next build task is &lt;code&gt;npm run build --prod --aot&lt;/code&gt;. Go on - add yet a npm task as you did before&lt;/li&gt;
&lt;li&gt;Configure npm task by pressing the dropdown list and select &lt;code&gt;custom&lt;/code&gt;, since you can't select run&lt;br&gt;
Add &lt;code&gt;run build --prod --aot&lt;/code&gt; as Command and arguments&lt;br&gt;
You probably recognize &lt;code&gt;--aot&lt;/code&gt; - &lt;a href="https://angular.io/guide/aot-compiler"&gt;Ahead-of-Time&lt;/a&gt; from Angular 4. It gives faster load time, so it is quite important&lt;br&gt;
&lt;img alt="Configure npm run" src="img/2017/2017-10-09-VSTS7.PNG" title="Configure npm run"&gt;&lt;/li&gt;
&lt;li&gt;So we ran out of steps locally, but on the build server we still need to package the build output and send it to Azure&lt;br&gt;
Next task is a zip-task. Press &lt;code&gt;+&lt;/code&gt; and select &lt;code&gt;Archive Files&lt;/code&gt;&lt;br&gt;
&lt;img alt="Select zip task" src="img/2017/2017-10-09-VSTS8.PNG" title="Select zip task"&gt;&lt;/li&gt;
&lt;li&gt;Root folder is the build code you want to deploy. It is located in the &lt;code&gt;www&lt;/code&gt; folder - just as when you work locally&lt;br&gt;
Unselect "Prefix root folder ..."&lt;br&gt;
The name of the zipped package should be &lt;code&gt;$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip&lt;/code&gt;&lt;br&gt;
&lt;img alt="Configure zip" src="img/2017/2017-10-09-VSTS9.PNG" title="Configure zip"&gt;&lt;/li&gt;
&lt;li&gt;Final build step to do is to put the package in a drop folder&lt;br&gt;
Next task is a publish task. Press &lt;code&gt;+&lt;/code&gt; and select &lt;code&gt;Publish Build Artifacts&lt;/code&gt;&lt;br&gt;
Notice - you can create PowerShell, Shell Script and Batch Script tasks. So if you npm installed a nice utility, you could then do anything with it in a script which could be in your code e.g. `.\scripts\runkarmaandprotractortests.cmd
&lt;img alt="Select publish task" src="img/2017/2017-10-09-VSTS10.PNG" title="Select publish task"&gt;&lt;/li&gt;
&lt;li&gt;Path to publish is the zip file you created in last step&lt;br&gt;
Artifact Name is the name of the drop folder. It must be called &lt;code&gt;drop&lt;/code&gt;&lt;br&gt;
And Location must be &lt;code&gt;TFS&lt;/code&gt; - that used to be called Type: &lt;code&gt;Server&lt;/code&gt; (opposed to File Share)&lt;br&gt;
&lt;img alt="Configure publish" src="img/2017/2017-10-09-VSTS11.PNG" title="Configure publish"&gt;&lt;/li&gt;
&lt;li&gt;Press &lt;code&gt;Save &amp;amp; queue&lt;/code&gt;. In top of the screen you'll see &lt;code&gt;Build #&amp;lt;some-number&amp;gt; has been queued.&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Click on &lt;code&gt;#&amp;lt;some-number&amp;gt;&lt;/code&gt;. Now you can see the progress of the build.&lt;br&gt;
When the build has finished you'll see &lt;code&gt;Build Succeeded&lt;/code&gt; and above that &lt;code&gt;dreamhouse-mobile-ionic-Build / Build &amp;lt;some-number&amp;gt; / Phase 1&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;Click on &lt;code&gt;Build &amp;lt;some-number&amp;gt;&lt;/code&gt;. Now you get 5 tabs for that build: &lt;code&gt;Summary - Timeline - Artifacts - Code coverage* - Tests&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;Click on &lt;code&gt;Artifacts&lt;/code&gt;. Now you see the dropfolder. Check it out and see if it contains what you expected.  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Have you noticed that these Build Tasks correspond to the features in &lt;a href="https://www.jetbrains.com/teamcity/"&gt;TeamCity&lt;/a&gt;? &lt;/p&gt;
&lt;p&gt;Next up is to deploy the package to Azure.&lt;/p&gt;
&lt;h2&gt;Setup WebApp in Azure&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;When you have created a free Azure account via &lt;a href="https://azure.microsoft.com/en-in/free/"&gt;Microsoft Azure&lt;/a&gt; browse to &lt;a href="https://portal.azure.com/"&gt;Azure Portal&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;The first thing you need is a place for all your stuff at Azure to live. That is called a &lt;code&gt;Resource Group&lt;/code&gt;&lt;br&gt;
Click &lt;code&gt;Resource Groups&lt;/code&gt; then &lt;code&gt;+ Add&lt;/code&gt;&lt;br&gt;
&lt;img alt="Add Resource Group" src="img/2017/2017-10-09-Azure1.PNG" title="Add Resource Group"&gt;&lt;/li&gt;
&lt;li&gt;Name - I have called mine &lt;code&gt;ResGroupNorthEurope&lt;/code&gt;&lt;br&gt;
Location - I live in area &lt;code&gt;North Europe&lt;/code&gt;&lt;br&gt;
&lt;img alt="Configure Resource Group" src="img/2017/2017-10-09-Azure2.PNG" title="Configure Resource Group"&gt;&lt;/li&gt;
&lt;li&gt;So what do you want there? A webapp. You find that under &lt;code&gt;App Services&lt;/code&gt;. Click &lt;code&gt;+ Add&lt;/code&gt; then &lt;code&gt;Filter&lt;/code&gt;&lt;br&gt;
Then you see a variaty of categories of webapps
&lt;img alt="Add WebApp" src="img/2017/2017-10-09-Azure3.PNG" title="Add WebApp"&gt;&lt;/li&gt;
&lt;li&gt;Select &lt;code&gt;Web App&lt;/code&gt; 
Since I have already taken subdomain dreamhouse-mobile-ionic you have to choose another one - e.g.  &lt;code&gt;yourvstsusername-dreamhouse-mobile-ionic&lt;/code&gt;&lt;br&gt;
Resourse Group: Use the one you created before: &lt;code&gt;`Use Existing&lt;/code&gt;&lt;br&gt;
App Service Plan is the Dyno in Heroku or EC2 in AWS - the size of your PaaS. I have chosen the smallest: S1&lt;br&gt;
Tip: You can reuse the Resource Group and the App Service Plan for several resources e.g. webapps.
&lt;img alt="Configure WebApp" src="img/2017/2017-10-09-Azure4.PNG" title="Configure WebApp"&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You're done in Azure. Next up is to release to Azure from VSTS.&lt;/p&gt;
&lt;h2&gt;Release to Azure from VSTS&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Go back to &lt;a href="https://yourvstsusername.visualstudio.com/dreamhouse-mobile-ionic/_build"&gt;https://yourvstsusername.visualstudio.com/dreamhouse-mobile-ionic/_build&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;You can deploy to many environments and services. We just want to deploy to our App Service.&lt;br&gt;
First step is to select that target environment in a Release&lt;br&gt;
Click tab &lt;code&gt;Releases&lt;/code&gt; then &lt;code&gt;+&lt;/code&gt; - &lt;code&gt;Create Release Definition&lt;/code&gt; - Select &lt;code&gt;Azure App Service Deployment&lt;/code&gt; and click Apply &lt;br&gt;
&lt;img alt="Add Release Definition" src="img/2017/2017-10-09-VSTSRelease1.PNG" title="Add Release Definition"&gt;&lt;/li&gt;
&lt;li&gt;Notice the ´!´ - something needs attention - click either of them&lt;br&gt;
&lt;img alt="Tasks needs attention" src="img/2017/2017-10-09-VSTSRelease2.PNG" title="Tasks needs attention"&gt;&lt;/li&gt;
&lt;li&gt;Hey - that looks familiar - a list of steps in a task list - just as under tab &lt;code&gt;Build&lt;/code&gt;&lt;br&gt;
Yes, but heading is &lt;code&gt;Environment 1&lt;/code&gt; - not &lt;code&gt;Phase 1&lt;/code&gt;. And for the environmet you have to connect to Azure.
Click on &lt;code&gt;Manage&lt;/code&gt; subscribtion and go through an authentication process&lt;br&gt;
When connected you can click the dropdown list to select your website&lt;br&gt;
&lt;img alt="Connect to Azure" src="img/2017/2017-10-09-VSTSRelease3.PNG" title="Connect to Azure"&gt;&lt;/li&gt;
&lt;li&gt;Head back to tab &lt;code&gt;Pipeline&lt;/code&gt; - we need to fetch a source to deploy&lt;br&gt;
Select &lt;code&gt;Add Artifact&lt;/code&gt; and select source type: &lt;code&gt;Build&lt;/code&gt;, so we can fetch the zip file from drop.&lt;br&gt;
Notice: Source type can also be: &lt;code&gt;Git, GitHub, Jenkins and Team Foundation Version Control&lt;/code&gt;.&lt;br&gt;
Build Definition: Select the only one from the list.&lt;br&gt;
Accept default values and press Add.&lt;br&gt;
&lt;img alt="Add Artifact" src="img/2017/2017-10-09-VSTSRelease4.PNG" title="Add Artifact"&gt;&lt;/li&gt;
&lt;li&gt;Press the lightning icon on the Artifact. Notice the trigger is whenever a new drop has been made.&lt;br&gt;
&lt;img alt="Release Trigger" src="img/2017/2017-10-09-VSTSRelease5.PNG" title="Release Trigger"&gt;&lt;/li&gt;
&lt;li&gt;Now that we have a source we can head back to &lt;code&gt;Tasks&lt;/code&gt;, select &lt;code&gt;Deploy Azure App Service&lt;/code&gt; and enter the missing zipfile: &lt;code&gt;$(System.DefaultWorkingDirectory)\**\*.zip&lt;/code&gt;. You can browse to it by pressing &lt;code&gt;...&lt;/code&gt;&lt;br&gt;
&lt;img alt="Pick zip file" src="img/2017/2017-10-09-VSTSRelease6.PNG" title="Pick zip file"&gt;&lt;/li&gt;
&lt;li&gt;Before we save the Release Definition head to &lt;code&gt;Pipeline&lt;/code&gt; - and select the Lightning in the Environment&lt;br&gt;
Notice you have a possibility to select persons to approve deployment. This can be tester that approves one environment before a build is rolled out for the next environment.&lt;br&gt;
&lt;img alt="Approvers" src="img/2017/2017-10-09-VSTSRelease7.PNG" title="Approvers"&gt;
We don't want approvers - so go on and save as &lt;code&gt;dreamhouse-Release&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Have you noticed that these Release workflow correspond to the features in &lt;a href="https://octopus.com/"&gt;Octopus Deploy&lt;/a&gt;? &lt;/p&gt;
&lt;h2&gt;Trig a build and a release to Azure&lt;/h2&gt;
&lt;p&gt;Now we are ready for the big show - deploy to Azure&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Head back to &lt;code&gt;Builds&lt;/code&gt; - tab &lt;code&gt;All Definitions&lt;/code&gt; - click on the only one &lt;code&gt;dreamhouse-mobile-ionic-Build&lt;/code&gt;&lt;br&gt;
&lt;img alt="Prepare to build" src="img/2017/2017-10-09-VSTSQueue1.PNG" title="Prepare to build"&gt;&lt;/li&gt;
&lt;li&gt;Click &lt;code&gt;Queue New Build...&lt;/code&gt;&lt;br&gt;
&lt;img alt="Queue build" src="img/2017/2017-10-09-VSTSQueue2.PNG" title="Queue build"&gt;&lt;/li&gt;
&lt;li&gt;Click &lt;code&gt;Queue&lt;/code&gt;
&lt;img alt="npm run build" src="img/2017/2017-10-09-VSTSQueue3.PNG" title="npm run build"&gt;&lt;/li&gt;
&lt;li&gt;If the Build succeded head to &lt;code&gt;Releases&lt;/code&gt; tab and verify that the build triggered a release&lt;br&gt;
&lt;img alt="Triggered release" src="img/2017/2017-10-09-VSTSQueue4.PNG" title="Triggered release"&gt;&lt;/li&gt;
&lt;li&gt;If the release succeeded, too head to &lt;code&gt;Azure App Services&lt;/code&gt; in &lt;a href="https://portal.azure.com"&gt;Azure&lt;/a&gt;&lt;br&gt;
Select your service and scroll down to &lt;code&gt;Continous Delivery&lt;/code&gt;&lt;br&gt;
You should see the Release has been Deployed Successfully&lt;br&gt;
&lt;img alt="Succeeded release" src="img/2017/2017-10-09-VSTSQueue5.PNG" title="Succeeded release"&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If that is true then you site should be live on&lt;br&gt;
&lt;a href="http://yourvstsusername-dreamhouse-mobile-ionic.azurewebsites.net"&gt;http://yourvstsusername-dreamhouse-mobile-ionic.azurewebsites.net&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If you are just reading along you can also find my site &lt;a href="http://dreamhouse-mobile-ionic.azurewebsites.net/"&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h1&gt;Alternative deployments tp Azure&lt;/h1&gt;
&lt;p&gt;There are also alternative options for hosting SPA's in Azure.  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://code.visualstudio.com/tutorials/functions-extension/getting-started"&gt;Azure Functions&lt;/a&gt;. I assume this is the best pick for SPA's or API's with low load.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://code.visualstudio.com/tutorials/static-website/getting-started"&gt;Azure Storage&lt;/a&gt;.&lt;br&gt;
I don't think Azure Storage can handle SSR. Instead it is a great place for static websites like this blog.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://code.visualstudio.com/tutorials/docker-extension/getting-started"&gt;Docker images&lt;/a&gt; - good for porting entire environments from dev to prod in Azure or any other cloud.&lt;/li&gt;
&lt;li&gt;And finally a tutorial like this blog deploying to &lt;a href="https://code.visualstudio.com/tutorials/app-service-extension/getting-started"&gt;App Services&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;Links&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://rasor.wordpress.com/2017/06/29/deploying-ionic1-as-a-webapp-to-heroku/"&gt;Deploying Ionic1 to Heroku&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.microsoft.com/en-us/vsts/build-release/apps/cd/azure/aspnet-core-to-azure-webapp?tabs=vsts"&gt;Deploy your .NET core app to an Azure web app&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://my.visualstudio.com"&gt;MSDN&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://yarnpkg.com/en/docs/install-ci#travis-tab"&gt;Yarn with Travis CI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.microsoft.com/en-us/azure/app-service/app-service-authentication-overview"&gt;Authentication and authorization in Azure App Service&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.microsoft.com/en-us/azure/app-service-mobile/app-service-mobile-cordova-get-started-users"&gt;Add authentication on Cordova with Mobile Apps&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.microsoft.com/en-us/aspnet/core/client-side/spa-services"&gt;SSR with .NET Core&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.microsoft.com/en-us/azure/app-service-mobile/app-service-mobile-dotnet-backend-how-to-use-server-sdk"&gt;Azure Mobile Apps - MBaaS - C#&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.microsoft.com/en-us/azure/app-service-mobile/app-service-mobile-node-backend-how-to-use-server-sdk"&gt;Azure Mobile Apps - MBaaS - NodeJs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.microsoft.com/en-us/cli/azure/overview?view=azure-cli-latest"&gt;Azure CLI 2.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.microsoft.com/en-us/azure/app-service/app-service-cli-samples"&gt;Azure CLI Samples - App Service&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The End&lt;/p&gt;</content><category term="DevOps"></category><category term="#npm"></category><category term="#git"></category><category term="#ionic"></category><category term="#ngx"></category><category term="#azure"></category><category term="#pwa"></category></entry><entry><title>Using NVM for Windows and Yarn</title><link href="https://rasor.github.io/using-nvm-for-windows-and-yarn.html" rel="alternate"></link><published>2017-10-08T11:00:00+02:00</published><updated>2019-04-19T11:00:00+02:00</updated><author><name>rasor</name></author><id>tag:rasor.github.io,2017-10-08:/using-nvm-for-windows-and-yarn.html</id><summary type="html">&lt;p&gt;Microsoft created Taco (Tools for Apache Cordova) - a set of Node.js tools with specific versions. It was to be used from within Visual Studio, so they knew what was global in their Cordova apps.
I blogged about it &lt;a href="https://rasor.wordpress.com/2017/03/13/ionic-in-visual-studio-2017/" target="_blank"&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;With Nvm For Windows you can stay in the shell …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Microsoft created Taco (Tools for Apache Cordova) - a set of Node.js tools with specific versions. It was to be used from within Visual Studio, so they knew what was global in their Cordova apps.
I blogged about it &lt;a href="https://rasor.wordpress.com/2017/03/13/ionic-in-visual-studio-2017/" target="_blank"&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;With Nvm For Windows you can stay in the shell and select yourself what you want to include in your set.&lt;/p&gt;
&lt;p&gt;I need it to be able to switch between Node v6 and Node v8.
In my usecase there is v6 installed on a host (Azure), so I also need v6 locally for debugging.
And when not debugging for prod I can use newest v8.&lt;/p&gt;
&lt;h2&gt;Using &lt;a href="https://github.com/coreybutler/nvm-windows" target="_blank"&gt;nvm4windows&lt;/a&gt;&lt;/h2&gt;
&lt;h3&gt;Before you install nvm4windows you need to&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;uninstall node&lt;/li&gt;
&lt;li&gt;Delete folder C:\Program Files\nodejs&lt;/li&gt;
&lt;li&gt;Delete folder C:\Users\username\AppData\Roaming\npm&lt;/li&gt;
&lt;li&gt;Delete folder C:\Users\username\AppData\Roaming\npm-cache&lt;/li&gt;
&lt;li&gt;Remove envir var %NODE_ENV%&lt;/li&gt;
&lt;li&gt;Remove part of %path% C:\Users\username\AppData\Roaming\npm&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Download, install and use &lt;a href="https://github.com/coreybutler/nvm-windows/releases" target="_blank"&gt;nvm4windows&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;nvm list&lt;/code&gt; # shows nothing installed&lt;/li&gt;
&lt;li&gt;goto &lt;a href="https://nodejs.org/en/download/" target="_blank"&gt;Node downloads&lt;/a&gt; and &lt;ul&gt;
&lt;li&gt;checkout LTS version - currently 6.11.4 (includes npm 3.10.10)&lt;/li&gt;
&lt;li&gt;checkout current version - currently 8.6.0 (includes npm 5.3.0)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Install the two versions:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;nvm install &lt;span class="m"&gt;6&lt;/span&gt;.11.4 &lt;span class="c1"&gt;# Installs into \nvm\v6.11.4&lt;/span&gt;
nvm install &lt;span class="m"&gt;8&lt;/span&gt;.6.0 &lt;span class="c1"&gt;# Installs into \nvm\v8.6.0&lt;/span&gt;
nvm list

&lt;span class="c1"&gt;#    8.6.0&lt;/span&gt;
&lt;span class="c1"&gt;#    6.11.4&lt;/span&gt;

nvm use &lt;span class="m"&gt;8&lt;/span&gt;.6.0 &lt;span class="c1"&gt;# Creates a shortcut \nodejs\ pointing to the above \vx.x.x\ folder&lt;/span&gt;
&lt;span class="c1"&gt;# Now using node v8.6.0 (64-bit)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The shortcut \nodejs\ is also saved as %NVM_SYMLINK% and saved to %path%&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;nvm list

&lt;span class="c1"&gt;#  * 8.6.0 (Currently using 64-bit executable)&lt;/span&gt;
&lt;span class="c1"&gt;#    6.11.4&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You need to &lt;code&gt;npm install -g&lt;/code&gt; (globally install js libs into each of the nodejs versions you are using) e.g. &lt;code&gt;npm install -g cordova&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Note&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Cli tools (e.g. cordova) are installed in &lt;code&gt;%ProgramFiles%\nodejs&lt;/code&gt;, which might not be the path you chose for node.&lt;br&gt;
If not you need to add &lt;code&gt;%ProgramFiles%\nodejs&lt;/code&gt; to &lt;code&gt;%path%&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;node_modules are scattered around the disk(s)&lt;ul&gt;
&lt;li&gt;&lt;code&gt;C:\Users\username\AppData\Roaming\npm-cache&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Nvm path &lt;code&gt;%NVM_HOME%\vx.x.x\node_modules\npm\node_modules&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Nvm Nodejs paths &lt;code&gt;%NVM_SYMLINK%\node_modules&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Normal Nodejs paths &lt;code&gt;%ProgramFiles%\nodejs\node_modules&lt;/code&gt; - CLI's installed with -g&lt;/li&gt;
&lt;li&gt;and locally in project subfolder &lt;code&gt;\node_modules&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Well it seems like installation of nvm must be done to the default paths, since in the setup on my PC -g installs still ends up in a common place. I'll have to test that on another occation.&lt;/p&gt;
&lt;p&gt;You might also need to set environment variable (for Express?):
&lt;code&gt;NODE_ENV=%NVM_SYMLINK%&lt;/code&gt; and &lt;code&gt;refreshenv&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;Using Yarn&lt;/h2&gt;
&lt;p&gt;The npm v5 coming with node v8 has a package.lock file - yes idea taken from Yarn. Meaning we don't need Yarn anymore - unless you need other features from Yarn.&lt;br&gt;
For npm v3 (node v6) we often need yarn.lock.&lt;/p&gt;
&lt;p&gt;We need the lock file to keep track of all exact versions of dependencies in a project.&lt;/p&gt;
&lt;h3&gt;Install Yarn&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://yarnpkg.com/en/docs/install" target="_blank"&gt;Download Yarn&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Install &lt;a href="https://chocolatey.org/install" target="_blank"&gt;Chocolatey&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Install Yarn &lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;nvm use &lt;span class="m"&gt;6&lt;/span&gt;.11.4 &lt;span class="c1"&gt;# yarn checks for npm&lt;/span&gt;
choco install yarn
yarn -v
&lt;span class="c1"&gt;#1.1.0&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Using Yarn&lt;/h3&gt;
&lt;h4&gt;When starting from empty project&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;yarn init &lt;span class="c1"&gt;# create the yarn.lock file and a package.json&lt;/span&gt;
yarn add &lt;span class="o"&gt;[&lt;/span&gt;package&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="c1"&gt;# same as npm -install -save [package]&lt;/span&gt;
yarn add &lt;span class="o"&gt;[&lt;/span&gt;package&lt;span class="o"&gt;]&lt;/span&gt; --dev &lt;span class="c1"&gt;# same as npm -install --save-dev [package]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;When starting from a working npm project&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;yarn import &lt;span class="c1"&gt;# create the yarn.lock file from node_modules folder&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If it fails with &lt;code&gt;error An unexpected error occurred: "should have a resolved reference"&lt;/code&gt;&lt;br&gt;
then it might work to just issue &lt;code&gt;yarn&lt;/code&gt;.&lt;/p&gt;
&lt;h4&gt;When starting from a cloned npm project having yarn.lock&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git clone &lt;span class="s2"&gt;&amp;quot;https://github.com/.....&amp;quot;&lt;/span&gt;
yarn install &lt;span class="c1"&gt;# same as npm install, but using yarn.lock: download modules&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;When upgrading existing package in package.json&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;yarn upgrade &lt;span class="o"&gt;[&lt;/span&gt;package&lt;span class="o"&gt;]&lt;/span&gt;@latest &lt;span class="c1"&gt;# same as npm update [package]@latest, but using yarn.lock&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;hr&gt;
&lt;h2&gt;Links&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://yarnpkg.com/en/docs/usage" target="_blank"&gt;Yarn usage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://yarnpkg.com/en/docs/migrating-from-npm" target="_blank"&gt;Npm vs. Yarn&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://yarnpkg.com/en/docs/cli/" target="_blank"&gt;Yarn commands&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.npmjs.com/cli" target="_blank"&gt;Npm commands&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rasor/awesome-tables/blob/master/awesome-cli-on-windows.md#chocolatey" target="_blank"&gt;Awesome CLI - on Windows - Chocolatey&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The End&lt;/p&gt;</content><category term="DevOps"></category><category term="#nvm"></category><category term="#nodejs"></category><category term="#npm"></category><category term="#yarn"></category><category term="#chocolatay"></category></entry><entry><title>Using Pelican Themes</title><link href="https://rasor.github.io/using-pelican-themes.html" rel="alternate"></link><published>2017-09-30T11:00:00+02:00</published><updated>2017-09-30T15:00:00+02:00</updated><author><name>rasor</name></author><id>tag:rasor.github.io,2017-09-30:/using-pelican-themes.html</id><summary type="html">&lt;p&gt;This blog is part of a serie &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="https://rasor.github.io/using-pelican-blog-on-github-pages.html"&gt;Using Pelican blog on Github pages&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rasor.github.io/using-pelican-themes.html"&gt;Using Pelican Themes&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;Installation - Plugins and Themes&lt;/h2&gt;
&lt;p&gt;Plugins and Themes are two seperate repos being used by some themes.
To be able to reach them from &lt;code&gt;pelicanconf.py&lt;/code&gt; is best to clone them to place with an …&lt;/p&gt;</summary><content type="html">&lt;p&gt;This blog is part of a serie &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="https://rasor.github.io/using-pelican-blog-on-github-pages.html"&gt;Using Pelican blog on Github pages&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rasor.github.io/using-pelican-themes.html"&gt;Using Pelican Themes&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;Installation - Plugins and Themes&lt;/h2&gt;
&lt;p&gt;Plugins and Themes are two seperate repos being used by some themes.
To be able to reach them from &lt;code&gt;pelicanconf.py&lt;/code&gt; is best to clone them to place with an absolute path.&lt;/p&gt;
&lt;p&gt;Since preference will differ I will put part of the path in system-wide environment variables&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;SystemPropertiesAdvanced.exe&lt;/code&gt;&lt;ul&gt;
&lt;li&gt;Environment Variables – System vars – New&lt;/li&gt;
&lt;li&gt;Name: &lt;code&gt;PYTHON_HOME&lt;/code&gt;, Value: &lt;code&gt;C:\ProgramFilesExtra\Python\Python36-32&lt;/code&gt;(Use the path to Python installed in top of previous blog)&lt;/li&gt;
&lt;li&gt;Press OK until all dialogs are closed, so you are sure the variable is stored&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Start new cmd promt (this will load the new environment variable)&lt;/li&gt;
&lt;li&gt;Create a folder for the cloned repos:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;c:
&lt;span class="nb"&gt;cd&lt;/span&gt; %PYTHON_HOME%
md pelican-addon-clones
&lt;span class="nb"&gt;cd&lt;/span&gt; pelican-addon-clones
&lt;span class="c1"&gt;# Download plugins and themes&lt;/span&gt;
git clone --recursive https://github.com/getpelican/pelican-plugins
git clone --recursive https://github.com/getpelican/pelican-themes
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The above repo pelican-themes in some cases is not linked to the latest version of a theme.
So for those themes you can clone them into another folder called pelican-themes-extra.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;c:
&lt;span class="nb"&gt;cd&lt;/span&gt; %PYTHON_HOME%&lt;span class="se"&gt;\p&lt;/span&gt;elican-addon-clones
md pelican-themes-extra
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;Testing Themes&lt;/h1&gt;
&lt;h2&gt;View installed themes and themes you can install&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Which themes are ready to use by Pelican? - By default Pelican is running theme &amp;quot;notmyidea&amp;quot;&lt;/span&gt;
&amp;gt; pelican-themes -v -l
c:&lt;span class="se"&gt;\p&lt;/span&gt;rogramfilesextra&lt;span class="se"&gt;\p&lt;/span&gt;ython&lt;span class="se"&gt;\p&lt;/span&gt;ython36-32&lt;span class="se"&gt;\l&lt;/span&gt;ib&lt;span class="se"&gt;\s&lt;/span&gt;ite-packages&lt;span class="se"&gt;\p&lt;/span&gt;elican&lt;span class="se"&gt;\t&lt;/span&gt;hemes&lt;span class="se"&gt;\n&lt;/span&gt;otmyidea
c:&lt;span class="se"&gt;\p&lt;/span&gt;rogramfilesextra&lt;span class="se"&gt;\p&lt;/span&gt;ython&lt;span class="se"&gt;\p&lt;/span&gt;ython36-32&lt;span class="se"&gt;\l&lt;/span&gt;ib&lt;span class="se"&gt;\s&lt;/span&gt;ite-packages&lt;span class="se"&gt;\p&lt;/span&gt;elican&lt;span class="se"&gt;\t&lt;/span&gt;hemes&lt;span class="se"&gt;\s&lt;/span&gt;imple
&lt;span class="c1"&gt;# Which themes are downloaded and ready to install?&lt;/span&gt;
&amp;gt; start %PYTHON_HOME%&lt;span class="se"&gt;\p&lt;/span&gt;elican-addon-clones&lt;span class="se"&gt;\p&lt;/span&gt;elican-themes&lt;span class="se"&gt;\&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Command &lt;code&gt;start&lt;/code&gt; opens an explorer, so you can go into the folders and see if there are any images showing how the theme looks like.
Or you can checkout &lt;a href="http://www.pelicanthemes.com/" target="_blank"&gt;http://www.pelicanthemes.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I am at time of writing running with theme Flex.&lt;/p&gt;
&lt;p&gt;Ref: Command &lt;a href="http://docs.getpelican.com/en/stable/pelican-themes.html"&gt;pelican-themes&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Switch to Theme "Flex"&lt;/h2&gt;
&lt;h3&gt;Installation&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/alexandrevicenzi/Flex" target="_blank"&gt;Online Instruction&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Flex is one of the themes that is not latest in pelican-themes repo, so I want to download latest from its own repo.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;c:
&lt;span class="nb"&gt;cd&lt;/span&gt; %PYTHON_HOME%&lt;span class="se"&gt;\p&lt;/span&gt;elican-addon-clones&lt;span class="se"&gt;\p&lt;/span&gt;elican-themes-extra
&lt;span class="c1"&gt;# Download Flex&lt;/span&gt;
git clone https://github.com/alexandrevicenzi/Flex
&lt;span class="c1"&gt;# Install Flex into Pelican&lt;/span&gt;
pelican-themes --install C:&lt;span class="se"&gt;\P&lt;/span&gt;rogramFilesExtra&lt;span class="se"&gt;\P&lt;/span&gt;ython&lt;span class="se"&gt;\P&lt;/span&gt;ython36-32&lt;span class="se"&gt;\p&lt;/span&gt;elican-addon-clones&lt;span class="se"&gt;\p&lt;/span&gt;elican-themes-extra&lt;span class="se"&gt;\F&lt;/span&gt;lex --verbose
&lt;span class="c1"&gt;# pelican-themes --remove Flex&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Add to &lt;a href="https://github.com/rasor/rasor.github.io/blob/pelican/pelicanconf.py" target="_blank"&gt;&lt;code&gt;pelicanconf.py&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;THEME&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Flex&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;STATIC_PATHS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;img&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;static&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;FAVICON&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;img/favicon.ico&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;CUSTOM_CSS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;static/custom.css&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Notice: If you don't want to add extra CSS, then &lt;code&gt;THEME&lt;/code&gt; is all you have to set&lt;/li&gt;
&lt;li&gt;In the CUSTOM_CSS I am just adding a shadow to images&lt;/li&gt;
&lt;li&gt;In \content\static\ create a file called &lt;a href="https://github.com/rasor/rasor.github.io/blob/pelican/content/static/custom.css" target="_blank"&gt;&lt;code&gt;custom.css&lt;/code&gt;&lt;/a&gt; with the content:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nt"&gt;img&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;box-shadow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="kt"&gt;px&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="kt"&gt;px&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="kt"&gt;px&lt;/span&gt; &lt;span class="kc"&gt;grey&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;More configurations you can add: &lt;a href="https://github.com/alexandrevicenzi/Flex/wiki/Configuration-example" target="_blank"&gt;https://github.com/alexandrevicenzi/Flex/wiki/Configuration-example&lt;/a&gt;. You probably will want many of them.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Verdict&lt;/h3&gt;
&lt;h4&gt;Pros&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Nice looking&lt;/li&gt;
&lt;li&gt;Images are shown in its full width - and resized to screen width&lt;/li&gt;
&lt;li&gt;Syntax highligting is good&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Cons&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Modified/Updated date is not shown&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Switch to Theme "HTML5 Up striped"&lt;/h2&gt;
&lt;h3&gt;Installation&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/getpelican/pelican-themes/tree/master/pelican-striped-html5up" target="_blank"&gt;Online Instruction&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;c:
&lt;span class="c1"&gt;# Install striped-html5up into Pelican&lt;/span&gt;
pelican-themes --install C:&lt;span class="se"&gt;\P&lt;/span&gt;rogramFilesExtra&lt;span class="se"&gt;\P&lt;/span&gt;ython&lt;span class="se"&gt;\P&lt;/span&gt;ython36-32&lt;span class="se"&gt;\p&lt;/span&gt;elican-addon-clones&lt;span class="se"&gt;\p&lt;/span&gt;elican-themes&lt;span class="se"&gt;\p&lt;/span&gt;elican-striped-html5up --verbose
&lt;span class="c1"&gt;#pelican-themes --remove pelican-striped-html5up&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Plugin &lt;code&gt;neighbors&lt;/code&gt; is needed by the theme&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Add to &lt;code&gt;pythonconf.py&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;PLUGIN_PATHS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;C:\ProgramFilesExtra\Python\Python36-32\pelican-addon-clones\pelican-plugins&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;PLUGINS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;neighbors&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;THEME&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;pelican-striped-html5up&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Verdict&lt;/h3&gt;
&lt;h4&gt;Pros&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Nice looking&lt;/li&gt;
&lt;li&gt;Images are shown in its full width&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Cons&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;It does not have any syntax coding and block around code&lt;/li&gt;
&lt;li&gt;It is missing links to categories and tags links&lt;/li&gt;
&lt;li&gt;Links in the left black sidemenu are not hooked to content from publishconf or other&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;Extending Themes&lt;/h1&gt;
&lt;p&gt;I extended theme "Flex" so it shows Modified date.&lt;/p&gt;
&lt;p&gt;The workflow for updating a theme can be:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Edit the theme in its local repo&lt;/li&gt;
&lt;li&gt;Remove the theme from Pelican&lt;/li&gt;
&lt;li&gt;Re-intall the theme to Pelican&lt;/li&gt;
&lt;li&gt;Build your output and see the change&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;1. Edit Theme&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Goto the root of your theme folder and open the theme in your favorite editor. In this case I edit Flex in VS Code&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;c:
&lt;span class="nb"&gt;cd&lt;/span&gt; %PYHON_HOME%&lt;span class="se"&gt;\p&lt;/span&gt;elican-addon-clones&lt;span class="se"&gt;\p&lt;/span&gt;elican-themes-extra&lt;span class="se"&gt;\F&lt;/span&gt;lex
&lt;span class="c1"&gt;# start VS Code&lt;/span&gt;
code .
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;On each blog post I want to add the &lt;code&gt;Modified&lt;/code&gt; field below the publish date. Add to &lt;a href="https://github.com/alexandrevicenzi/Flex/blob/master/templates/article.html" target="_blank"&gt;&lt;code&gt;templates\article.html&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;      &lt;span class="c"&gt;&amp;lt;!-- Inside p-tag contining when=article.locale_date --&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;br&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      {% if article.modified %}
        Updated: {{ article.modified |strftime(DEFAULT_DATE_FORMAT) }}
      {% endif %}
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Before you re-install the theme you should also goto your Pelican project and make sure you have &lt;code&gt;DEFAULT_DATE_FORMAT&lt;/code&gt; set to the same format as &lt;code&gt;locale_date&lt;/code&gt;. In &lt;code&gt;pelicanconf.py&lt;/code&gt; you could do it like this&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;DEFAULT_LANG&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;en&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;DEFAULT_DATE_FORMAT&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;%B &lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s1"&gt;, %Y&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;DATE_FORMATS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;en&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;DEFAULT_DATE_FORMAT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;2. Remove Theme from Pelican&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Easiest way to remove a theme from Pelican is to delete the folder where it is installed into&lt;/span&gt;
start %PYTHON_HOME%&lt;span class="se"&gt;\l&lt;/span&gt;ib&lt;span class="se"&gt;\s&lt;/span&gt;ite-packages&lt;span class="se"&gt;\p&lt;/span&gt;elican&lt;span class="se"&gt;\t&lt;/span&gt;hemes
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;3. Install Theme to Pelican&lt;/h3&gt;
&lt;p&gt;See "Switch to Theme" above.&lt;/p&gt;
&lt;h3&gt;4. Build and see output&lt;/h3&gt;
&lt;p&gt;See "Day to day Workflow" in &lt;a href="https://rasor.github.io/using-pelican-blog-on-github-pages.html" target="_blank"&gt;previous&lt;/a&gt; blog.&lt;/p&gt;
&lt;h1&gt;Links&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.pelicanthemes.com/" target="_blank"&gt;http://www.pelicanthemes.com/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/getpelican/pelican-themes" target="_blank"&gt;https://github.com/getpelican/pelican-themes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://docs.getpelican.com/en/stable/pelican-themes.html" target="_blank"&gt;http://docs.getpelican.com/en/stable/pelican-themes.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://media.readthedocs.org/css/sphinx_rtd_theme.css" target="_blank"&gt;https://media.readthedocs.org/css/sphinx_rtd_theme.css&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://pygments.org/languages/" target="_blank"&gt;http://pygments.org/languages/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/getpelican/pelican-plugins" target="_blank"&gt;https://github.com/getpelican/pelican-plugins&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.fullstackpython.com/blog/generating-static-websites-pelican-jinja2-markdown.html" target="_blank"&gt;https://www.fullstackpython.com/blog/generating-static-websites-pelican-jinja2-markdown.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Some Pelican Themes I looked at&lt;ul&gt;
&lt;li&gt;Days &lt;a href="https://github.com/getpelican/pelican-themes/tree/master/pelican-bootstrap3" target="_blank"&gt;https://github.com/getpelican/pelican-themes/tree/master/pelican-bootstrap3&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;6M &lt;a href="https://github.com/getpelican/pelican-themes/tree/master/pelican-striped-html5up" target="_blank"&gt;https://github.com/getpelican/pelican-themes/tree/master/pelican-striped-html5up&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;10M &lt;a href="https://github.com/alexandrevicenzi/Flex/tree/5bc235cf579cb03bcc8f54b6029ff74493a0cb44" target="_blank"&gt;https://github.com/alexandrevicenzi/Flex/tree/5bc235cf579cb03bcc8f54b6029ff74493a0cb44&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2Y &lt;a href="https://github.com/Parbhat/pelican-blue/tree/1dda054242f9267f4bd49891b022ac41c9ecfbe8" target="_blank"&gt;https://github.com/Parbhat/pelican-blue/tree/1dda054242f9267f4bd49891b022ac41c9ecfbe8&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2Y &lt;a href="https://github.com/jody-frankowski/blue-penguin/tree/c5e23e7753367b5beacce87b732cd1567c4818f9" target="_blank"&gt;https://github.com/jody-frankowski/blue-penguin/tree/c5e23e7753367b5beacce87b732cd1567c4818f9&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;3Y &lt;a href="https://github.com/nasskach/pelican-blueidea/tree/8f11c0e3b4b8e9ef45d1243b0175db91b7b42ba8" target="_blank"&gt;https://github.com/nasskach/pelican-blueidea/tree/8f11c0e3b4b8e9ef45d1243b0175db91b7b42ba8&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Images &lt;a href="https://unsplash.com/" target="_blank"&gt;https://unsplash.com/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The End&lt;/p&gt;</content><category term="DevOps"></category><category term="#blog"></category><category term="#pelican"></category><category term="#themes"></category><category term="#cms"></category><category term="#install"></category></entry><entry><title>Using Pelican blog on Github pages</title><link href="https://rasor.github.io/using-pelican-blog-on-github-pages.html" rel="alternate"></link><published>2017-09-23T20:20:00+02:00</published><updated>2017-11-26T21:00:00+01:00</updated><author><name>rasor</name></author><id>tag:rasor.github.io,2017-09-23:/using-pelican-blog-on-github-pages.html</id><summary type="html">&lt;p&gt;This blog is part of a serie &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="https://rasor.github.io/using-pelican-blog-on-github-pages.html"&gt;Using Pelican blog on Github pages&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rasor.github.io/using-pelican-themes.html"&gt;Using Pelican Themes&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I had some reasons for moving a blog from Wordpress to GitHubPages. You can read about reason, pro and cons &lt;a href="https://rasor.github.io/welcome-to-my-pelican-blog-on-github-pages.html" target="_blank"&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;In this blog I setup a &lt;a href="http://docs.getpelican.com/en/stable/quickstart.html" target="_blank"&gt;Pelican blog site&lt;/a&gt; from Windows and host …&lt;/p&gt;</summary><content type="html">&lt;p&gt;This blog is part of a serie &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="https://rasor.github.io/using-pelican-blog-on-github-pages.html"&gt;Using Pelican blog on Github pages&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rasor.github.io/using-pelican-themes.html"&gt;Using Pelican Themes&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I had some reasons for moving a blog from Wordpress to GitHubPages. You can read about reason, pro and cons &lt;a href="https://rasor.github.io/welcome-to-my-pelican-blog-on-github-pages.html" target="_blank"&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;In this blog I setup a &lt;a href="http://docs.getpelican.com/en/stable/quickstart.html" target="_blank"&gt;Pelican blog site&lt;/a&gt; from Windows and host it on &lt;a href="https://pages.github.com/" target="_blank"&gt;GitHub Pages&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;HowTo&lt;/h2&gt;
&lt;h3&gt;Installation - Prerequisites&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Install &lt;a href="https://www.python.org/downloads/" target="_blank"&gt;Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Create an account at &lt;a href="https://github.com"&gt;https://github.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;On Windows: Install &lt;a href="https://git-scm.com/download/win" target="_blank"&gt;Git for Windows&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Installation - Pelican&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;As admin:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;pip install pelican markdown&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Create a folder for the Pelican source&lt;ul&gt;
&lt;li&gt;&lt;code&gt;MD username.github.io&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;CD username.github.io&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Create a pelican site following &lt;a href="http://docs.getpelican.com/en/stable/quickstart.html"&gt;http://docs.getpelican.com/en/stable/quickstart.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pelican-quickstart&lt;/code&gt;&lt;ul&gt;
&lt;li&gt;Do you want to specify URL prefix? Answer https://username.github.io&lt;/li&gt;
&lt;li&gt;Do you want to upload using xxx? Answer N untill the xxx = GitHub Pages&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Create some content&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Create a blog e.g &lt;code&gt;~/content/yourcategoryno1/myfirstblog.md&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Preview content&lt;ul&gt;
&lt;li&gt;&lt;code&gt;pelican content&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;&lt;code&gt;cd output&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;python -m pelican.server&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Browse to  &lt;a href="http://localhost:8000/"&gt;http://localhost:8000/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;On Windows - in root create a file called &lt;a href="https://github.com/rasor/rasor.github.io/blob/pelican/serve.bat" target="_blank"&gt;serve.bat&lt;/a&gt; with the content:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pelican content
&lt;span class="nb"&gt;cd&lt;/span&gt; output
start &lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;http://localhost:8000/&amp;quot;&lt;/span&gt;
python -m pelican.server
REM Ctrl-C to quit
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;... then you can pre-view your content with &lt;code&gt;.\serve&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Images&lt;ul&gt;
&lt;li&gt;In &lt;code&gt;pelicanconf.py&lt;/code&gt; add line &lt;code&gt;STATIC_PATHS = ['img', 'pdf']&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Create an image e.g &lt;code&gt;~/content/img/hello.png&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Link to the file with
&lt;code&gt;![picture alt](img/hello.png "Mickey Mouse")&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Links&lt;ul&gt;
&lt;li&gt;External: &lt;code&gt;[link desc](https://blog.getpelican.com/){:target="_blank"}&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Internal: &lt;code&gt;[link desc]({filename}/yourcategoryno1/myfirstblog.md){:target="_blank"}&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Optionally edit more settings in &lt;code&gt;pelicanconf.py&lt;/code&gt; - see &lt;a href="http://docs.getpelican.com/en/3.7.1/settings.html"&gt;http://docs.getpelican.com/en/3.7.1/settings.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;add a &lt;code&gt;favicon.ico&lt;/code&gt; to root&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Prepare GIT as VersionControlSystem&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Fetch &lt;code&gt;.gitignore&lt;/code&gt;from &lt;a href="https://github.com/getpelican/pelican-blog/blob/master/.gitignore"&gt;https://github.com/getpelican/pelican-blog/blob/master/.gitignore&lt;/a&gt; - save it to root&lt;/li&gt;
&lt;li&gt;Create a &lt;code&gt;~/README.md&lt;/code&gt; - just for the source branch&lt;/li&gt;
&lt;li&gt;Install publish tool&lt;ul&gt;
&lt;li&gt;&lt;code&gt;pip install ghp-import&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Create local git repo&lt;ul&gt;
&lt;li&gt;&lt;code&gt;git init&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Create a remote repo via github.com for your github page build in GitHub. Call it &lt;code&gt;username.github.io&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Connect to repo and print remote repo&lt;ul&gt;
&lt;li&gt;&lt;code&gt;git remote add origin https://github.com/username/username.github.io.git&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git remote -v&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Create new branch for the pelican source&lt;ul&gt;
&lt;li&gt;&lt;code&gt;git checkout -b pelican&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Deploy you blog&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;(Foreach) Commit source&lt;ul&gt;
&lt;li&gt;&lt;code&gt;git add .&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git commit -a -m "Initial commit"&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git push -u origin pelican&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;(Foreach) &lt;a href="http://docs.getpelican.com/en/3.7.1/tips.html#publishing-to-github" target="_blank"&gt;Publish&lt;/a&gt; build to master then publish&lt;ul&gt;
&lt;li&gt;&lt;code&gt;pelican content -o output -s pelicanconf.py&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ghp-import output -r origin -b master&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git push origin master&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git checkout pelican&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;On Windows - in root create a file called &lt;a href="https://github.com/rasor/rasor.github.io/blob/pelican/publish.bat" target="_blank"&gt;publish.bat&lt;/a&gt; with the content:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git add .
git commit -a -m %1
git push -u origin pelican
pelican content -o output -s pelicanconf.py
ghp-import output -r origin -b master
git push origin master
git checkout pelican
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;... then you can publish by &lt;code&gt;.\publish "some comment"&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Editor&lt;/h2&gt;
&lt;p&gt;I'm using Visual Studio Code, that has a nice Markdown preview - probably a plugin.
But you could use NotePad for that matter.&lt;/p&gt;
&lt;p&gt;&lt;img alt="picture alt" src="img/2017/2017-09-23-PelicanInVSCode.PNG" title="Pelican In VS Code"&gt;&lt;/p&gt;
&lt;h2&gt;Day to day Workflow&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Open VS Code&lt;/li&gt;
&lt;li&gt;Open VS Code terminal 1 - T1&lt;ul&gt;
&lt;li&gt;&lt;code&gt;.\serve&lt;/code&gt; &lt;a href="https://github.com/rasor/rasor.github.io/blob/pelican/serve.bat"&gt;#code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;A browser opens and navigates to http://localhost:8000&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Add a new &lt;code&gt;.md&lt;/code&gt; file in \content\ and add some content&lt;/li&gt;
&lt;li&gt;Open VS Code terminal 2 - T2&lt;ul&gt;
&lt;li&gt;&lt;code&gt;.\build&lt;/code&gt; &lt;a href="https://github.com/rasor/rasor.github.io/blob/pelican/build.bat"&gt;#code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;F5 - refresh browser to see the new content&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.\publish "file new.md published"&lt;/code&gt; &lt;a href="https://github.com/rasor/rasor.github.io/blob/pelican/publish.bat"&gt;#code&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Browse to https://username.github.io&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Tip: If I don't want to publish a file I rename it to &lt;code&gt;.txt&lt;/code&gt; - then it won't be published before I rename it back to &lt;code&gt;.md&lt;/code&gt;.&lt;br&gt;
It will still end up on your host - GitHubPages, so don't keep secrests in there.&lt;br&gt;
If you want it published for review without being included in any content lists, then you can &lt;a href="http://docs.getpelican.com/en/3.6.3/content.html#publishing-drafts"&gt;publish the document as draft&lt;/a&gt; with &lt;code&gt;Status: draft&lt;/code&gt;.&lt;br&gt;
Then the document will be put in the &lt;code&gt;/drafts/&lt;/code&gt; folder. &lt;/p&gt;
&lt;p&gt;Continue in &lt;a href="https://rasor.github.io/using-pelican-themes.html" target="_blank"&gt;Using Pelican Themes&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3&gt;Links&lt;/h3&gt;
&lt;h4&gt;GitHub pages&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://pages.github.com/" target="_blank"&gt;Create a repo for your github page site&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://jlord.us/forkngo/" target="_blank"&gt;Fork-n-Go&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Pelican&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://docs.getpelican.com/en/stable/publish.html" target="_blank"&gt;http://docs.getpelican.com/en/stable/publish.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://docs.getpelican.com/en/3.6.3/content.html#linking-to-static-files" target="_blank"&gt;http://docs.getpelican.com/en/3.6.3/content.html#linking-to-static-files&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://docs.getpelican.com/en/stable/faq.html" target="_blank"&gt;http://docs.getpelican.com/en/stable/faq.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.getpelican.com/" target="_blank"&gt;https://blog.getpelican.com/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://help.github.com/articles/about-supported-custom-domains/" target="_blank"&gt;https://help.github.com/articles/about-supported-custom-domains/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Another &lt;a href="https://www.fullstackpython.com/blog/generating-static-websites-pelican-jinja2-markdown.html" target="_blank"&gt;install Pelican blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Pelican &lt;a href="https://github.com/getpelican/pelican/wiki/Tutorials" target="_blank"&gt;tutorial for deployment&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/getpelican" target="_blank"&gt;Pelican on Twitter&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Markdown&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://stackedit.io/editor" target="_blank"&gt;StackEdit – Editor&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tchapi/markdown-cheatsheet" target="_blank"&gt;https://github.com/tchapi/markdown-cheatsheet&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://tinker.kotaweaver.com/blog/?p=152" target="_blank"&gt;Syntax highlighting languages&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://pythonhosted.org/Markdown/reference.html" target="_blank"&gt;http://pythonhosted.org/Markdown/reference.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/List_of_XML_and_HTML_character_entity_references" target="_blank"&gt;List of XML and HTML characters&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h5&gt;Other&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://rasor.wordpress.com/" target="_blank"&gt;My old Wordpress blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The End&lt;/p&gt;</content><category term="DevOps"></category><category term="#blog"></category><category term="#pelican"></category><category term="#githubpages"></category><category term="#cms"></category><category term="#git"></category><category term="#install"></category><category term="#python"></category></entry></feed>