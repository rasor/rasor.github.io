<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Rasor's Tech Blog - Develop</title><link href="https://rasor.github.io/" rel="alternate"></link><link href="https://rasor.github.io/feeds/develop.atom.xml" rel="self"></link><id>https://rasor.github.io/</id><updated>2017-10-03T20:30:00+02:00</updated><entry><title>Using SSH keys - Connect to Ionic Pro</title><link href="https://rasor.github.io/using-ssh-keys-connect-to-ionic-pro.html" rel="alternate"></link><published>2017-10-03T20:30:00+02:00</published><updated>2017-10-03T20:30:00+02:00</updated><author><name>rasor</name></author><id>tag:rasor.github.io,2017-10-03:/using-ssh-keys-connect-to-ionic-pro.html</id><summary type="html">&lt;p&gt;HowTo connect to Ionic Pro, when &lt;code&gt;ionic link&lt;/code&gt; fails?&lt;br&gt;
&lt;em&gt;&lt;a href="https://ionicframework.com/docs/pro/" target="_blank"&gt;Ionic Pro&lt;/a&gt; is a new site taken over the features from Ionic Cloud - a hosted mobile build, test and deploy service&lt;/em&gt;&lt;/p&gt;
&lt;h1&gt;Intro&lt;/h1&gt;
&lt;h3&gt;The problem&lt;/h3&gt;
&lt;p&gt;I wanted to connect to Ionic Pro from Windows.&lt;br&gt;
But the attempt failed.&lt;/p&gt;
&lt;p&gt;It kept coming with …&lt;/p&gt;</summary><content type="html">&lt;p&gt;HowTo connect to Ionic Pro, when &lt;code&gt;ionic link&lt;/code&gt; fails?&lt;br&gt;
&lt;em&gt;&lt;a href="https://ionicframework.com/docs/pro/" target="_blank"&gt;Ionic Pro&lt;/a&gt; is a new site taken over the features from Ionic Cloud - a hosted mobile build, test and deploy service&lt;/em&gt;&lt;/p&gt;
&lt;h1&gt;Intro&lt;/h1&gt;
&lt;h3&gt;The problem&lt;/h3&gt;
&lt;p&gt;I wanted to connect to Ionic Pro from Windows.&lt;br&gt;
But the attempt failed.&lt;/p&gt;
&lt;p&gt;It kept coming with one error after the other. The latest I had difficulty to pass was:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;gt;ionic link
× Looking up your apps - failed!
Request: GET https://api.ionicjs.com/apps?page&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nv"&gt;page_size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;25&lt;/span&gt;
Response: &lt;span class="m"&gt;401&lt;/span&gt;
Body:
&lt;span class="o"&gt;{&lt;/span&gt; type: &lt;span class="s1"&gt;&amp;#39;Unauthorized&amp;#39;&lt;/span&gt;, link: null, message: &lt;span class="s1"&gt;&amp;#39;Invalid Token&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This blog has a &lt;strong&gt;workaround&lt;/strong&gt; for &lt;code&gt;ionic link&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;ionic link&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://ionicframework.com/docs/cli/link/" target="_blank"&gt;&lt;code&gt;ionic link&lt;/code&gt;&lt;/a&gt; CLI command connects your local git repo with a remote repo at Ionic Pro.
That remote repo was created when you manually created an app at &lt;a href="https://dashboard.ionicjs.com/apps" target="_blank"&gt;Ionic Pro&lt;/a&gt; site.&lt;/p&gt;
&lt;p&gt;It does that by doing probably all these tasks&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;creating a set of SSH keys, &lt;/li&gt;
&lt;li&gt;uploading the public key to Ionic Pro and&lt;/li&gt;
&lt;li&gt;adding the app id to project-root\ionic.config.json&lt;/li&gt;
&lt;li&gt;adding remote ionic repo to your local project&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;So when it won't we can do it ourselves.&lt;/p&gt;
&lt;h1&gt;The workaround&lt;/h1&gt;
&lt;h3&gt;Prerequisites&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Create a ionic app in &lt;a href="https://dashboard.ionicjs.com" target="_blank"&gt;Ionic Pro&lt;/a&gt;&lt;br&gt;
After creation the id of the app will be the last part of the url - e.g. as in https://apps.ionic.io/app/09faf85a&lt;/li&gt;
&lt;li&gt;Create a &lt;a href="http://ionicframework.com/getting-started/" target="_blank"&gt;ionic starter app&lt;/a&gt; on your PC&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;1. Create a set of SSH keys&lt;/h3&gt;
&lt;p&gt;You need &lt;code&gt;ssh-keygen.exe&lt;/code&gt; to generate a set of public/private SSH keys.
&lt;code&gt;ssh-keygen.exe&lt;/code&gt; is installed as part of &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Git (default installed into &lt;code&gt;C:\Program Files\Git\usr\bin&lt;/code&gt;) or&lt;/li&gt;
&lt;li&gt;OpenSSH (default installed into &lt;code&gt;C:\Program Files\OpenSSH-Win64&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;On my PC I also had HerokuToolkit installed with a path in &lt;code&gt;ssh-keygen.bat&lt;/code&gt; to &lt;code&gt;ssh-keygen.exe&lt;/code&gt;.&lt;br&gt;
But this path was wrong. It seemed to be part of some problems. Rename that file, so it is not called instead of one of the real .exe files.&lt;/p&gt;
&lt;p&gt;From Git bash:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# https://help.github.com/articles/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent/&lt;/span&gt;

&lt;span class="c1"&gt;# Generate key-pair into C:\Users\your_userid\.ssh\&lt;/span&gt;
c:
&lt;span class="nb"&gt;cd&lt;/span&gt; C:/Users/your_userid/.ssh
&lt;span class="c1"&gt;# http://docs.ionic.io/services/ssh-keys/&lt;/span&gt;
ssh-keygen.exe -t rsa -b &lt;span class="m"&gt;4096&lt;/span&gt; -C &lt;span class="s2"&gt;&amp;quot;your_email@example.com&amp;quot;&lt;/span&gt;

&lt;span class="c1"&gt;# Check if ssh agent is running&lt;/span&gt;
&lt;span class="nb"&gt;eval&lt;/span&gt; &lt;span class="k"&gt;$(&lt;/span&gt;ssh-agent -s&lt;span class="k"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# Agent pid 12345 - yes&lt;/span&gt;

&lt;span class="c1"&gt;# Add private key to agent - &lt;/span&gt;
ssh-add C:/Users/your_userid/.ssh/id_rsa
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;2. Upload the public key to Ionic Pro&lt;/h3&gt;
&lt;p&gt;Paste the content of file &lt;code&gt;id_rsa.pub&lt;/code&gt; to a new key in &lt;a href="https://dashboard.ionicjs.com/settings/ssh-keys" target="_blank"&gt;Ionic Pro's SSH store&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;3. Add the app id to your Ionic config in your local repo&lt;/h3&gt;
&lt;p&gt;Edit &lt;code&gt;project-root\ionic.config.json&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p p-Indicator"&gt;{&lt;/span&gt;
  &lt;span class="s"&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Your&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Magic&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;App&amp;quot;&lt;/span&gt;&lt;span class="p p-Indicator"&gt;,&lt;/span&gt;
  &lt;span class="s"&gt;&amp;quot;app_id&amp;quot;&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;09faf85a&amp;quot;&lt;/span&gt;&lt;span class="p p-Indicator"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;# replace with your id&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;4. Add remote ionic repo to your local project&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# https://dashboard.ionicjs.com/app/09faf85a/settings/git&lt;/span&gt;
&lt;span class="c1"&gt;# Add Ionic Pro as remote repo&lt;/span&gt;
git remote add ionic ssh://git@git.ionicjs.com:your_ionic_userid/your_ionic_appname.git
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;After the workaround&lt;/h1&gt;
&lt;h3&gt;5. Upload your app to Ionic Pro&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Upload to Ionic Pro&lt;/span&gt;
git push ionic master
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;6. Make Github your default remote repo&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Add github as remote repo&lt;/span&gt;
git remote add origin https://github.com/your_git_userid/your_git_appname.git
&lt;span class="c1"&gt;# Upload to github and set it default (for pull)&lt;/span&gt;
git push --set-upstream origin master
&lt;span class="c1"&gt;# Check your remotes&lt;/span&gt;
git remote -v
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;7. Continue to use Ionic Pro&lt;/h3&gt;
&lt;p&gt;On the url for your app - e.g. https://dashboard.ionicjs.com/app/09faf85a/code/builds/list you can continue to deploy, preview and more.&lt;/p&gt;
&lt;p&gt;You might also need to modify &lt;code&gt;src/app/app.module.ts&lt;/code&gt;. &lt;a href="http://docs.ionic.io/setup.html#configuration" target="_blank"&gt;Define a CloudSettings object&lt;/a&gt;. &lt;/p&gt;
&lt;hr&gt;
&lt;h1&gt;Tips&lt;/h1&gt;
&lt;h3&gt;Download an app as a starter app&lt;/h3&gt;
&lt;p&gt;If you have access to a Ionic Pro app, you can &lt;code&gt;git clone&lt;/code&gt; it with&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ionic start --pro-id 09faf85a
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;... if I am asuming correct.&lt;/p&gt;
&lt;h3&gt;If you want OpenSSH on Windows&lt;/h3&gt;
&lt;p&gt;.. then here is how you &lt;a href="https://github.com/PowerShell/Win32-OpenSSH/wiki/Win32-OpenSSH-Automated-Install-and-Upgrade-using-Chocolatey" target="_blank"&gt;install OpenSSH&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# do this from an admin prompt&lt;/span&gt;
choco install openssh &lt;span class="c1"&gt;# takes a while&lt;/span&gt;
&lt;span class="c1"&gt;# reload environment variables&lt;/span&gt;
refresh env
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;Links&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://ionicframework.com/docs/pro/basics/getting-started/" target="_blank"&gt;http://ionicframework.com/docs/pro/basics/getting-started/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The End&lt;/p&gt;</content><category term="#git"></category><category term="#ssh"></category><category term="#ionic"></category></entry><entry><title>Ngx: Template for Visual Studio 2017</title><link href="https://rasor.github.io/ngx-template-for-visual-studio-2017.html" rel="alternate"></link><published>2017-09-24T17:00:00+02:00</published><updated>2017-09-24T17:00:00+02:00</updated><author><name>rasor</name></author><id>tag:rasor.github.io,2017-09-24:/ngx-template-for-visual-studio-2017.html</id><summary type="html">&lt;p&gt;At my work all web developers are getting an Angular 4 course.
But there are a couple of issues with that.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;When you work with ngx in Visual Studio code you get a &lt;code&gt;.gitnore&lt;/code&gt; file from the Angular CLI to take care of what not to commit to GIT.
Since …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;At my work all web developers are getting an Angular 4 course.
But there are a couple of issues with that.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;When you work with ngx in Visual Studio code you get a &lt;code&gt;.gitnore&lt;/code&gt; file from the Angular CLI to take care of what not to commit to GIT.
Since we are not yet using GIT at work (but TFS), then TFS don't know what to checkin.&lt;/li&gt;
&lt;li&gt;Since the develpers feel more comfortable with VS 2017, then we also have a chance to get control of files to Checkin with a &lt;code&gt;.csproj&lt;/code&gt; file.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So HowTo import a Angular CLI project into VS 2017 on Windows?&lt;/p&gt;
&lt;p&gt;Luckily there is a &lt;code&gt;.vsix&lt;/code&gt; for that: &lt;a href="https://marketplace.visualstudio.com/items?itemName=AndreyFomin.AngularCLIProjectTemplate" target="_blank"&gt;Angular CLI Project Template&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Installation&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Install &lt;a href="https://www.visualstudio.com/vs/community/" target="_blank"&gt;VS 2017&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;Include web development including TypeScript&lt;/li&gt;
&lt;li&gt;Framework ASP.NET Core 1.1.2&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Node 6.9.0 or higher (&lt;code&gt;node -v&lt;/code&gt;) - Should come with VS&lt;/li&gt;
&lt;li&gt;Npm 3 or higher (&lt;code&gt;npm -v&lt;/code&gt;) - Should come with VS&lt;/li&gt;
&lt;li&gt;&lt;a href="https://git-scm.com/download/win" target="_blank"&gt;Git for Windows&lt;/a&gt; (&lt;code&gt;git -version&lt;/code&gt;) - Should come with VS &lt;/li&gt;
&lt;li&gt;Install latest &lt;a href="https://www.npmjs.com/package/@angular/cli/tutorial" target="_blank"&gt;Angular CLI&lt;/a&gt; (&lt;code&gt;ng version&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Exit VisualStudio&lt;/li&gt;
&lt;li&gt;Install &lt;a href="https://marketplace.visualstudio.com/items?itemName=AndreyFomin.AngularCLIProjectTemplate" target="_blank"&gt;Angular CLI Project Template&lt;/a&gt; by executing the &lt;code&gt;.vsix&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Ready-Set-Go&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Start VisualStudio&lt;/li&gt;
&lt;li&gt;New - Project - Other Languages - TypeScript - Angular CLI Application - Name: &lt;YourNgAppName&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="picture alt" src="img/2017-09-24-NewAngularCLIProject.PNG" title="New Angular CLI Project in Visual Studio 2017"&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;In the project options choises select both if you are in doubt&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="picture alt" src="img/2017-09-24-AngularCLIProjectOptions.PNG" title="Angular CLI Project options"&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Installing the npm packages takes a long time. I prefer to skip that step and do it manually from a command prompt, where I feel I better can see what is going on, if something fails&lt;ul&gt;
&lt;li&gt;Open a command prompt and CD into the root of your Angular project&lt;/li&gt;
&lt;li&gt;&lt;code&gt;npm install&lt;/code&gt; # install all the node_modules found in package.json&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Now start the app with F5&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;VS 2017 will read .\properties\launchsettings.json&lt;ul&gt;
&lt;li&gt;If you started IIS Express, then VS will start dotnet.exe on &lt;a href="http://localhost:58162/"&gt;http://localhost:58162/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;If you started [yourapp], then VS will start dotnet.exe on &lt;a href="http://localhost:58163/"&gt;http://localhost:58163/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="picture alt" src="img/2017-09-24-F5Startup1.PNG" title="F5 startup 1"&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;In both cases Angular CLI will serve you app after buiding it with the Angular CLI on &lt;a href="http://localhost:4200/"&gt;http://localhost:4200/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="picture alt" src="img/2017-09-24-F5Startup2.PNG" title="F5 startup 2"&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;This is very good news. Why? Because it does not matter what webserver or editor you are using.
But the best of is that you use standard node.js deployment methods, so you can deploy your app anywhere. You can use standard npm or yarn managers without having to do a lot of strange Visual Studio configuration.&lt;/li&gt;
&lt;li&gt;You can now stop F5 debugging.&lt;/li&gt;
&lt;li&gt;Instead start a webserver manually from a command prompt (in the root of your project) with &lt;code&gt;ng serve&lt;/code&gt;
Now you can see that it is Angular CLI (via .angular-cli.json) that in both cases uses webpack to build packages (via \src\tsconfig.app.json) to serve once again on &lt;a href="http://localhost:4200/"&gt;http://localhost:4200/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Press Ctrl-C to stop the webserver&lt;/li&gt;
&lt;li&gt;Checkin your code using your favorite VCS (e.g. TFS or GIT)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Links&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.npmjs.com/package/@angular/cli/" target="_blank"&gt;@angular/cli&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The End&lt;/p&gt;</content><category term="#ngx"></category><category term="#typescript"></category><category term="#visualstudio"></category><category term="#tfs"></category></entry></feed>