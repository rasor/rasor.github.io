<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Rasor's Tech Blog - Develop</title><link href="https://rasor.github.io/" rel="alternate"></link><link href="https://rasor.github.io/feeds/develop.atom.xml" rel="self"></link><id>https://rasor.github.io/</id><updated>2021-01-17T00:00:00+01:00</updated><subtitle>... still playing with this Lego</subtitle><entry><title>ASP.NET Core with k8s hosting - Part 1.3</title><link href="https://rasor.github.io/aspnet-core-with-k8s-hosting-part-13.html" rel="alternate"></link><published>2020-10-27T00:00:00+01:00</published><updated>2021-01-17T00:00:00+01:00</updated><author><name>rasor</name></author><id>tag:rasor.github.io,2020-10-27:/aspnet-core-with-k8s-hosting-part-13.html</id><summary type="html">&lt;p&gt;This blog is part of a serie:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://rasor.github.io/docker-desktop-for-windows-on-wsl2-part-01.html"&gt;Part 0.1: Install Docker Desktop on Windows 10 Home - including WSL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rasor.github.io/k8s-on-windows-devbox-part-02.html"&gt;Part 0.2: Install k8s using kind on Windows - including arkade&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rasor.github.io/run-docker-containers-part-11.html"&gt;Part 1.1: Run docker containers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rasor.github.io/develop-net-docker-images-part-12.html"&gt;Part 1.2: Develop .NET docker images&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rasor.github.io/aspnet-core-with-k8s-hosting-part-13.html"&gt;Part 1.3: Run containers in k8s …&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;This blog is part of a serie:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://rasor.github.io/docker-desktop-for-windows-on-wsl2-part-01.html"&gt;Part 0.1: Install Docker Desktop on Windows 10 Home - including WSL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rasor.github.io/k8s-on-windows-devbox-part-02.html"&gt;Part 0.2: Install k8s using kind on Windows - including arkade&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rasor.github.io/run-docker-containers-part-11.html"&gt;Part 1.1: Run docker containers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rasor.github.io/develop-net-docker-images-part-12.html"&gt;Part 1.2: Develop .NET docker images&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rasor.github.io/aspnet-core-with-k8s-hosting-part-13.html"&gt;Part 1.3: Run containers in k8s&lt;/a&gt; (this blog)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rasor.github.io/k3s-hosted-in-civo-part-20.html"&gt;Part 2.0: Deploy containers to Civo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;Intro&lt;/h1&gt;
&lt;p&gt;This blog is an example of a development cycle developing in C# on Windows using VSCode editor - also for debugging docker containers - and deploying to k8s.  &lt;/p&gt;
&lt;p&gt;This blog is inspired by content from an eBook and some tutorials.&lt;br&gt;
You find its code in this git repo: &lt;a href="https://github.com/rasor/eBook-UsingNETCoreDockerKubernetes"&gt;rasor/eBook-UsingNETCoreDockerKubernetes&lt;/a&gt;.  &lt;/p&gt;
&lt;p&gt;Main Sources are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Free eBook (2019): &lt;a href="https://www.syncfusion.com/ebooks/using-netcore-docker-and-kubernetes-succinctly"&gt;Syncfusion Free Ebooks | Using .NET Core, Docker, and Kubernetes Succinctly&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;By &lt;a href="https://twitter.com/apomic80"&gt;@apomic80&lt;/a&gt;        &lt;ul&gt;
&lt;li&gt;Github: &lt;a href="https://github.com/apomic80"&gt;apomic80&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Guide: &lt;a href="https://docs.microsoft.com/en-us/dotnet/architecture/containerized-lifecycle/design-develop-containerized-apps/docker-apps-inner-loop-workflow"&gt;Inner-loop development workflow for Docker apps&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;from free eBook (2020): &lt;a href="https://docs.microsoft.com/en-us/dotnet/architecture/containerized-lifecycle/"&gt;Containerized Docker Application Lifecycle with Microsoft Platform and Tools&lt;/a&gt; from Microsoft&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;PreRequisites&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Windows 10&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dotnet.microsoft.com/download"&gt;.NET Core 3.1 SDK&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://gitforwindows.org/"&gt;Git Bash&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://code.visualstudio.com/download"&gt;Visual Studio Code&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=ms-dotnettools.csharp"&gt;C# for VSCode&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.docker.com/docker-for-windows/"&gt;Docker Desktop for Windows user manual&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;k8s&lt;/code&gt; (I am using &lt;code&gt;kind&lt;/code&gt; for &lt;a href="K8sArkade.md"&gt;creating cluster&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Optional: &lt;a href="https://chocolatey.org/install"&gt;choco&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Optional: &lt;a href="https://stedolan.github.io/jq/download/"&gt;jq&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Optional: &lt;a href="https://helm.sh/"&gt;helm&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;choco install kubernetes-helm&lt;/code&gt; or &lt;code&gt;arkade get helm&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Optional: &lt;a href="https://github.com/Azure/draft/blob/master/docs/quickstart.md"&gt;draft&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;Chapters from eBook &lt;strong&gt;Using .NET Core, Docker, and Kubernetes&lt;/strong&gt;&lt;/h1&gt;
&lt;h2&gt;Chapter 1 ASP.NET and Docker Together&lt;/h2&gt;
&lt;h3&gt;Chapter 1.1 Execute .NET Core application with Docker&lt;/h3&gt;
&lt;p&gt;See &lt;a href="https://rasor.github.io/run-docker-containers-part-11.html"&gt;Part 1.1: Run docker containers&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Chapter 2 Create Your Application with Docker&lt;/h2&gt;
&lt;h3&gt;Chapter 2.1 Develop your ASP.NET Core application using Docker&lt;/h3&gt;
&lt;p&gt;See &lt;a href="https://rasor.github.io/develop-net-docker-images-part-12.html"&gt;Part 1.2: Develop .NET docker images&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Chapter 3 Deploy Your Application on Kubernetes&lt;/h2&gt;
&lt;h3&gt;Chapter 3.2 Deploy your images in Kubernetes&lt;/h3&gt;
&lt;p&gt;I am using &lt;code&gt;kind&lt;/code&gt; for creating a &lt;code&gt;k8s&lt;/code&gt; cluster. I did that in &lt;a href="K8sArkade.md"&gt;this blog&lt;/a&gt;.  &lt;/p&gt;
&lt;p&gt;kubectl is a CLI using API to access k8s.  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# check if k8s cluster is running&lt;/span&gt;
kubectl cluster-info
&lt;span class="c1"&gt;# Unable to connect to the server: dial tcp 127.0.0.1:52295: connectex: No connection could be made&lt;/span&gt;

&lt;span class="c1"&gt;# Check if there are any clusters&lt;/span&gt;
kind get clusters
&lt;span class="c1"&gt;# kind&lt;/span&gt;

&lt;span class="c1"&gt;# Check it the container is running&lt;/span&gt;
docker ps -a &lt;span class="p"&gt;|&lt;/span&gt; grep kind
&lt;span class="c1"&gt;# CONTAINER ID        IMAGE                  COMMAND                  CREATED             STATUS                   PORTS                       NAMES&lt;/span&gt;
&lt;span class="c1"&gt;# 0b9a7220b4f8        kindest/node:v1.19.1   &amp;quot;/usr/local/bin/entr…&amp;quot;   5 weeks ago         Exited (0) 3 weeks ago   127.0.0.1:52295-&amp;gt;6443/tcp   kind-control-plane&lt;/span&gt;

&lt;span class="c1"&gt;# start the k8s cluster&lt;/span&gt;
docker start kind-control-plane

&lt;span class="c1"&gt;# check if k8s cluster is running&lt;/span&gt;
kubectl cluster-info
&lt;span class="c1"&gt;# Kubernetes master is running at https://127.0.0.1:52295&lt;/span&gt;
&lt;span class="c1"&gt;# KubeDNS is running at https://127.0.0.1:52295/api/v1/namespaces/kube-system/services/kube-dns:dns/proxy&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Testing starting the image in a pod manually:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Manually start the container in k8s - and never restart it, when it dies - let proxy know that pod should listen to :5000 and give container env-vars.  &lt;/span&gt;
kubectl run frontend2 --image&lt;span class="o"&gt;=&lt;/span&gt;rasor/usingnetcoredockerkubernetes:frontend2-v1 --port&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;5000&lt;/span&gt; --restart&lt;span class="o"&gt;=&lt;/span&gt;Never --env&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;ASPNETCORE_URLS=http://+:5000&amp;quot;&lt;/span&gt;
&lt;span class="c1"&gt;# pod/frontend2 created&lt;/span&gt;

kubectl get pods
&lt;span class="c1"&gt;# NAME        READY   STATUS    RESTARTS   AGE&lt;/span&gt;
&lt;span class="c1"&gt;# frontend2   1/1     Running   0          24s&lt;/span&gt;

kubectl describe pod frontend2
&lt;span class="c1"&gt;# Name:         frontend2&lt;/span&gt;
&lt;span class="c1"&gt;# Namespace:    default&lt;/span&gt;
&lt;span class="c1"&gt;# Priority:     0&lt;/span&gt;
&lt;span class="c1"&gt;# Node:         kind-control-plane/172.18.0.2&lt;/span&gt;
&lt;span class="c1"&gt;# Start Time:   Tue, 27 Oct 2020 12:24:42 +0100&lt;/span&gt;
&lt;span class="c1"&gt;# Labels:       run=frontend2&lt;/span&gt;
&lt;span class="c1"&gt;# Annotations:  &amp;lt;none&amp;gt;&lt;/span&gt;
&lt;span class="c1"&gt;# Status:       Running&lt;/span&gt;
&lt;span class="c1"&gt;# IP:           10.244.0.9&lt;/span&gt;
&lt;span class="c1"&gt;# IPs:&lt;/span&gt;
&lt;span class="c1"&gt;#   IP:  10.244.0.9&lt;/span&gt;
&lt;span class="c1"&gt;# Containers:&lt;/span&gt;
&lt;span class="c1"&gt;#   frontend2:&lt;/span&gt;
&lt;span class="c1"&gt;#     Container ID:   containerd://6134c6c308d49c4c49835009333ca5aaedf18d235712bec49a4ae4fbe9606c12&lt;/span&gt;
&lt;span class="c1"&gt;#     Image:          rasor/usingnetcoredockerkubernetes:frontend2-v1&lt;/span&gt;
&lt;span class="c1"&gt;#     Image ID:       docker.io/rasor/usingnetcoredockerkubernetes@sha256:e413934f1dba2e85b66f69125f6b4ac9944122c8f1c3d8f0f97355abb6ad8ec9       &lt;/span&gt;
&lt;span class="c1"&gt;#     Port:           5000/TCP&lt;/span&gt;
&lt;span class="c1"&gt;#     Host Port:      0/TCP&lt;/span&gt;
&lt;span class="c1"&gt;#     State:          Running&lt;/span&gt;
&lt;span class="c1"&gt;#       Started:      Tue, 27 Oct 2020 12:24:42 +0100&lt;/span&gt;
&lt;span class="c1"&gt;#     Ready:          True&lt;/span&gt;
&lt;span class="c1"&gt;#     Restart Count:  0&lt;/span&gt;
&lt;span class="c1"&gt;#     Environment:    &amp;lt;none&amp;gt;&lt;/span&gt;
&lt;span class="c1"&gt;#     Mounts:&lt;/span&gt;
&lt;span class="c1"&gt;#       /var/run/secrets/kubernetes.io/serviceaccount from default-token-95gtj (ro)&lt;/span&gt;
&lt;span class="c1"&gt;# Conditions:&lt;/span&gt;
&lt;span class="c1"&gt;#   Type              Status&lt;/span&gt;
&lt;span class="c1"&gt;#   Initialized       True&lt;/span&gt;
&lt;span class="c1"&gt;#   Ready             True&lt;/span&gt;
&lt;span class="c1"&gt;#   ContainersReady   True&lt;/span&gt;
&lt;span class="c1"&gt;#   PodScheduled      True&lt;/span&gt;
&lt;span class="c1"&gt;# Volumes:&lt;/span&gt;
&lt;span class="c1"&gt;#   default-token-95gtj:&lt;/span&gt;
&lt;span class="c1"&gt;#     Type:        Secret (a volume populated by a Secret)&lt;/span&gt;
&lt;span class="c1"&gt;#     SecretName:  default-token-95gtj&lt;/span&gt;
&lt;span class="c1"&gt;#     Optional:    false&lt;/span&gt;
&lt;span class="c1"&gt;# QoS Class:       BestEffort&lt;/span&gt;
&lt;span class="c1"&gt;# Node-Selectors:  &amp;lt;none&amp;gt;&lt;/span&gt;
&lt;span class="c1"&gt;# Tolerations:     node.kubernetes.io/not-ready:NoExecute for 300s&lt;/span&gt;
&lt;span class="c1"&gt;#                  node.kubernetes.io/unreachable:NoExecute for 300s&lt;/span&gt;
&lt;span class="c1"&gt;# Events:&lt;/span&gt;
&lt;span class="c1"&gt;#   Type    Reason     Age        From                         Message&lt;/span&gt;
&lt;span class="c1"&gt;#   ----    ------     ----       ----                         -------&lt;/span&gt;
&lt;span class="c1"&gt;#   Normal  Scheduled  &amp;lt;unknown&amp;gt;                               Successfully assigned default/frontend2 to kind-control-plane&lt;/span&gt;
&lt;span class="c1"&gt;#   Normal  Pulled     11s        kubelet, kind-control-plane  Container image &amp;quot;rasor/usingnetcoredockerkubernetes:frontend2-v1&amp;quot; already present &lt;/span&gt;
&lt;span class="c1"&gt;# on machine&lt;/span&gt;
&lt;span class="c1"&gt;#   Normal  Created    11s        kubelet, kind-control-plane  Created container frontend2&lt;/span&gt;
&lt;span class="c1"&gt;#   Normal  Started    11s        kubelet, kind-control-plane  Started container frontend2&lt;/span&gt;

&lt;span class="c1"&gt;# And what does that mean?&lt;/span&gt;
kubectl explain pods

&lt;span class="c1"&gt;# read all deployed in default namespace&lt;/span&gt;
kubectl get all
&lt;span class="c1"&gt;# NAME            READY   STATUS    RESTARTS   AGE&lt;/span&gt;
&lt;span class="c1"&gt;# pod/frontend2   1/1     Running   0          6m57s&lt;/span&gt;

&lt;span class="c1"&gt;# NAME                 TYPE        CLUSTER-IP   EXTERNAL-IP   PORT(S)   AGE&lt;/span&gt;
&lt;span class="c1"&gt;# service/kubernetes   ClusterIP   10.96.0.1    &amp;lt;none&amp;gt;        443/TCP   38d&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;API into k8s&lt;/h4&gt;
&lt;p&gt;Start proxy in another terminal.&lt;br&gt;
This gives HTTP access to the k8s API on port 8001  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;kubectl proxy
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Then open browser http://127.0.0.1:8001/&lt;/p&gt;
&lt;p&gt;Try to reach pod via api:
http://127.0.0.1:8001/api/v1/namespaces/default/pods/frontend2/proxy/&lt;/p&gt;
&lt;p&gt;Nice - the pod responds with a webpage :-)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# print stdout from the container&lt;/span&gt;
kubectl logs frontend2
&lt;span class="c1"&gt;#       Storing keys in a directory &amp;#39;/root/.aspnet/DataProtection-Keys&amp;#39; that may not be persisted outside of the container. Protected data will be unavailable when container is destroyed.&lt;/span&gt;
&lt;span class="c1"&gt;#       No XML encryptor configured. Key {d848e8f7-df39-44b3-902c-b11019a1d9ab} may be persisted to storage in unencrypted form.&lt;/span&gt;
&lt;span class="c1"&gt;#       Now listening on: http://[::]:5000&lt;/span&gt;
&lt;span class="c1"&gt;#       Application started. Press Ctrl+C to shut down.&lt;/span&gt;
&lt;span class="c1"&gt;#       Hosting environment: Production&lt;/span&gt;
&lt;span class="c1"&gt;#       Content root path: /app&lt;/span&gt;
&lt;span class="c1"&gt;#       Failed to determine the https port for redirect.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Stop the proxy with ctrl-c and instead use port forwarding:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Give localhost TCP access from port 5000 to the POD port 5000&lt;/span&gt;
kubectl port-forward pod/frontend2 &lt;span class="m"&gt;5000&lt;/span&gt;:5000
&lt;span class="c1"&gt;# Forwarding from 127.0.0.1:5000 -&amp;gt; 5000&lt;/span&gt;
&lt;span class="c1"&gt;# Forwarding from [::1]:5000 -&amp;gt; 5000&lt;/span&gt;

&lt;span class="c1"&gt;# browse to pod&lt;/span&gt;
start http://localhost:5000
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="Web responds from pod" src="../img/2020/2020-10-27-K8s02.PNG"&gt;  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Delete the pod&lt;/span&gt;
kubectl delete pod frontend2
&lt;span class="c1"&gt;# pod &amp;quot;frontend2&amp;quot; deleted&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Tip:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://stackoverflow.com/a/51469150/750989"&gt;Port-forward also can forward to RS, SVC or Deployment&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://stackoverflow.com/a/62727416/750989"&gt;Port-forward also has --address to listen to&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Port-forward tool for local dev: &lt;a href="https://github.com/txn2/kubefwd"&gt;kubefwd&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;UI into k8s&lt;/h4&gt;
&lt;p&gt;To manage k8s you could use many different apps like&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=ms-kubernetes-tools.vscode-kubernetes-tools"&gt;Kubernetes VSCode plugin&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;Double-click on a resource to see its yaml&lt;/li&gt;
&lt;li&gt;View helm repos&lt;/li&gt;
&lt;li&gt;View cloud clusters&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;kubernetes-dashboard - just read - install via arkade or from remote yml file&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# install kubernetes-dashboard as a k8s app&lt;/span&gt;
kubectl create -f https://raw.githubusercontent.com/kubernetes/dashboard/master/aio/deploy/recommended/kubernetes-dashboard.yaml
&lt;span class="c1"&gt;# get login token&lt;/span&gt;
kubectl -n kube-system get secret
kubectl -n kube-system describe secret deployment-controller-token-?????
kubectl proxy
&lt;span class="c1"&gt;# paste login token into&lt;/span&gt;
start http://localhost:8001/api/v1/namespaces/kubernetes-dashboard/services/https:kubernetes-dashboard:/proxy/#/login
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;portainer - install via arkade&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rancher.com/quick-start/"&gt;Rancher&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;docker run -d --restart=unless-stopped -p 80:80 -p 443:443 rancher/rancher&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.kubernetic.com/"&gt;Kubernetic&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="rancher" src="../img/2020/2020-10-27-K8s01.PNG"&gt;&lt;br&gt;
(&lt;em&gt;Image from Rancher&lt;/em&gt;)&lt;/p&gt;
&lt;h4&gt;Declare your infrastructure using yaml&lt;/h4&gt;
&lt;p&gt;To define managed k8s infrastructure you write k8s yaml.&lt;br&gt;
Install &lt;a href="https://marketplace.visualstudio.com/items?itemName=ipedrazas.kubernetes-snippets"&gt;Kubernetes Support&lt;/a&gt; in VSCode.&lt;br&gt;
This will provide you with snippets for pods, services, deployments, etc.  &lt;/p&gt;
&lt;p&gt;Now create a new file called &lt;code&gt;k8s-deploy-dev.yml&lt;/code&gt;  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Write &lt;code&gt;kind: De&lt;/code&gt; then &lt;/li&gt;
&lt;li&gt;Press ctrl-space and select a Deployment template.   &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;With yml created you &lt;code&gt;create&lt;/code&gt; or &lt;code&gt;apply&lt;/code&gt; the file using &lt;code&gt;-f&lt;/code&gt;.&lt;br&gt;
When you &lt;code&gt;apply&lt;/code&gt; k8s will create-if-not-exist or change-if-not-correct.&lt;br&gt;
If you &lt;code&gt;create&lt;/code&gt; you should &lt;code&gt;create --save-config&lt;/code&gt;. Create will throw error, if resource exists.&lt;br&gt;
&lt;a href="https://stackoverflow.com/a/54248723/750989"&gt;Read more...&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;These are the resources you can create (with the snippets):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;clusterrole         - Create a ClusterRole.
clusterrolebinding  - Create a ClusterRoleBinding for a particular ClusterRole
configmap           - Create a configmap from a local file, directory or literal value
cronjob             - Create a cronjob with the specified name.
deployment          - Create a deployment with the specified name.
job                 - Create a job with the specified name.
namespace           - Create a namespace with the specified name
poddisruptionbudget - Create a pod disruption budget with the specified name.
priorityclass       - Create a priorityclass with the specified name.
quota               - Create a quota with the specified name.
role                - Create a role with single rule.
rolebinding         - Create a RoleBinding for a particular Role or ClusterRole
secret              - Create a secret using specified subcommand
service             - Create a service using specified subcommand.
serviceaccount      - Create a service account with the specified name
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Besides those above snippets you can find &lt;code&gt;C#&lt;/code&gt; helm chart templates for&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Azure/draft/blob/master/packs/csharp/charts/templates/deployment.yaml"&gt;deployment&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Azure/draft/blob/master/packs/csharp/charts/templates/ingress.yaml"&gt;ingress&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Azure/draft/blob/master/packs/csharp/charts/templates/service.yaml"&gt;service&lt;/a&gt;
... used by the k8s App builder tool &lt;a href="https://github.com/Azure/draft/blob/master/docs/quickstart.md"&gt;Draft&lt;/a&gt;.&lt;br&gt;
Note: draft is not yet upgraded to core 3.1, but is using core 2.1. The project is archieved!  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can also just grap the whole yaml from this blog: &lt;a href="https://docs.microsoft.com/en-us/dotnet/architecture/containerized-lifecycle/design-develop-containerized-apps/build-aspnet-core-applications-linux-containers-aks-kubernetes#deploy-webappyml"&gt;Build ASP.NET Core applications deployed as Linux containers into AKS/Kubernetes clusters&lt;/a&gt;&lt;br&gt;
and correct then names.  &lt;/p&gt;
&lt;p&gt;Here is the file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;# k8s-deploy-dev.yml&lt;/span&gt;
&lt;span class="err"&gt;# https://docs.microsoft.com/en-us/dotnet/architecture/containerized-lifecycle/design-develop-containerized-apps/build-aspnet-core-applications-linux-containers-aks-kubernetes#deploy-webappyml&lt;/span&gt;
&lt;span class="c"&gt;apiVersion: apps/v1&lt;/span&gt;
&lt;span class="c"&gt;kind: Deployment&lt;/span&gt;
&lt;span class="c"&gt;metadata:&lt;/span&gt;
&lt;span class="c"&gt;  name: frontend2&lt;/span&gt;
&lt;span class="c"&gt;  labels:&lt;/span&gt;
&lt;span class="c"&gt;    app: usingnetcoredockerkubernetes&lt;/span&gt;
&lt;span class="c"&gt;spec:&lt;/span&gt;
&lt;span class="c"&gt;  replicas: 1&lt;/span&gt;
&lt;span class="c"&gt;  selector:&lt;/span&gt;
&lt;span class="c"&gt;    matchLabels:&lt;/span&gt;
&lt;span class="c"&gt;      service: frontend2&lt;/span&gt;
&lt;span class="c"&gt;  template:&lt;/span&gt;
&lt;span class="c"&gt;    metadata:&lt;/span&gt;
&lt;span class="c"&gt;      labels:&lt;/span&gt;
&lt;span class="c"&gt;        app: usingnetcoredockerkubernetes&lt;/span&gt;
&lt;span class="c"&gt;        service: frontend2&lt;/span&gt;
&lt;span class="c"&gt;    spec:&lt;/span&gt;
&lt;span class="c"&gt;      containers:&lt;/span&gt;
&lt;span class="c"&gt;        - name: frontend2&lt;/span&gt;
&lt;span class="c"&gt;          image: rasor/usingnetcoredockerkubernetes:frontend2-v1&lt;/span&gt;
&lt;span class="c"&gt;          imagePullPolicy: IfNotPresent&lt;/span&gt;
&lt;span class="c"&gt;          ports:&lt;/span&gt;
&lt;span class="c"&gt;            - containerPort: 5000&lt;/span&gt;
&lt;span class="c"&gt;              protocol: TCP&lt;/span&gt;
&lt;span class="c"&gt;          env:&lt;/span&gt;
&lt;span class="c"&gt;            - name: ASPNETCORE_URLS&lt;/span&gt;
&lt;span class="c"&gt;              value: http://+:5000&lt;/span&gt;
&lt;span class="err"&gt;---&lt;/span&gt;
&lt;span class="c"&gt;apiVersion: v1&lt;/span&gt;
&lt;span class="c"&gt;kind: Service&lt;/span&gt;
&lt;span class="c"&gt;metadata:&lt;/span&gt;
&lt;span class="c"&gt;  name: frontend2&lt;/span&gt;
&lt;span class="c"&gt;  labels:&lt;/span&gt;
&lt;span class="c"&gt;    app: usingnetcoredockerkubernetes&lt;/span&gt;
&lt;span class="c"&gt;    service: frontend2&lt;/span&gt;
&lt;span class="c"&gt;spec:&lt;/span&gt;
&lt;span class="c"&gt;  type: LoadBalancer&lt;/span&gt;
&lt;span class="c"&gt;  ports:&lt;/span&gt;
&lt;span class="c"&gt;    - port: 5000&lt;/span&gt;
&lt;span class="c"&gt;      targetPort: 5000&lt;/span&gt;
&lt;span class="c"&gt;      protocol: TCP&lt;/span&gt;
&lt;span class="c"&gt;  selector:&lt;/span&gt;
&lt;span class="c"&gt;    service: frontend2&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You can print all resource types with&lt;br&gt;
&lt;code&gt;kubectl api-resources --sort-by=kind&lt;/code&gt;&lt;br&gt;
They are&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;NAME                              SHORTNAMES   APIGROUP                       NAMESPACED   KIND
bindings                                                                      true         Binding
componentstatuses                 cs                                          false        ComponentStatus
configmaps                        cm                                          true         ConfigMap
endpoints                         ep                                          true         Endpoints
limitranges                       limits                                      true         LimitRange
namespaces                        ns                                          false        Namespace
nodes                             no                                          false        Node
persistentvolumes                 pv                                          false        PersistentVolume
persistentvolumeclaims            pvc                                         true         PersistentVolumeClaim
pods                              po                                          true         Pod
podtemplates                                                                  true         PodTemplate
replicationcontrollers            rc                                          true         ReplicationController
resourcequotas                    quota                                       true         ResourceQuota
secrets                                                                       true         Secret
services                          svc                                         true         Service
serviceaccounts                   sa                                          true         ServiceAccount

mutatingwebhookconfigurations                  admissionregistration.k8s.io   false        MutatingWebhookConfiguration
validatingwebhookconfigurations                admissionregistration.k8s.io   false        ValidatingWebhookConfiguration
customresourcedefinitions         crd,crds     apiextensions.k8s.io           false        CustomResourceDefinition
apiservices                                    apiregistration.k8s.io         false        APIService
controllerrevisions                            apps                           true         ControllerRevision
daemonsets                        ds           apps                           true         DaemonSet
deployments                       deploy       apps                           true         Deployment
replicasets                       rs           apps                           true         ReplicaSet
statefulsets                      sts          apps                           true         StatefulSet
tokenreviews                                   authentication.k8s.io          false        TokenReview
selfsubjectaccessreviews                       authorization.k8s.io           false        SelfSubjectAccessReview
selfsubjectrulesreviews                        authorization.k8s.io           false        SelfSubjectRulesReview
subjectaccessreviews                           authorization.k8s.io           false        SubjectAccessReview
localsubjectaccessreviews                      authorization.k8s.io           true         LocalSubjectAccessReview
horizontalpodautoscalers          hpa          autoscaling                    true         HorizontalPodAutoscaler
cronjobs                          cj           batch                          true         CronJob
jobs                                           batch                          true         Job
certificatesigningrequests        csr          certificates.k8s.io            false        CertificateSigningRequest
leases                                         coordination.k8s.io            true         Lease
endpointslices                                 discovery.k8s.io               true         EndpointSlice
events                            ev           events.k8s.io                  true         Event
nodes                                          metrics.k8s.io                 false        NodeMetrics
pods                                           metrics.k8s.io                 true         PodMetrics
ingresses                         ing          networking.k8s.io              true         Ingress
ingressclasses                                 networking.k8s.io              false        IngressClass
networkpolicies                   netpol       networking.k8s.io              true         NetworkPolicy
runtimeclasses                                 node.k8s.io                    false        RuntimeClass
poddisruptionbudgets              pdb          policy                         true         PodDisruptionBudget
podsecuritypolicies               psp          policy                         false        PodSecurityPolicy
clusterroles                                   rbac.authorization.k8s.io      false        ClusterRole
clusterrolebindings                            rbac.authorization.k8s.io      false        ClusterRoleBinding
roles                                          rbac.authorization.k8s.io      true         Role
rolebindings                                   rbac.authorization.k8s.io      true         RoleBinding
priorityclasses                   pc           scheduling.k8s.io              false        PriorityClass
csidrivers                                     storage.k8s.io                 false        CSIDriver
csinodes                                       storage.k8s.io                 false        CSINode
storageclasses                    sc           storage.k8s.io                 false        StorageClass
volumeattachments                              storage.k8s.io                 false        VolumeAttachment
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;With the yaml in place you can now &lt;code&gt;create&lt;/code&gt; or &lt;code&gt;apply&lt;/code&gt; it:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# deploy image to k8s&lt;/span&gt;
kubectl create -f k8s-deploy-dev.yml
&lt;span class="c1"&gt;# deployment.apps/frontend2 created&lt;/span&gt;
&lt;span class="c1"&gt;# service/frontend2 created&lt;/span&gt;

&lt;span class="c1"&gt;# print&lt;/span&gt;
kubectl get services &lt;span class="p"&gt;|&lt;/span&gt; grep frontend2
&lt;span class="c1"&gt;# NAME         TYPE           CLUSTER-IP      EXTERNAL-IP   PORT(S)          AGE&lt;/span&gt;
&lt;span class="c1"&gt;# frontend2    LoadBalancer   10.106.254.38   &amp;lt;pending&amp;gt;     5000:30300/TCP   53s&lt;/span&gt;

&lt;span class="c1"&gt;# remove service&lt;/span&gt;
kubectl delete service frontend2
&lt;span class="c1"&gt;# service &amp;quot;frontend2&amp;quot; deleted&lt;/span&gt;

&lt;span class="c1"&gt;# remove replicaset, pod and deployment&lt;/span&gt;
kubectl delete deployment frontend2
&lt;span class="c1"&gt;# deployment.apps &amp;quot;frontend2&amp;quot; deleted&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# stop the k8s cluster&lt;/span&gt;
docker stop kind-control-plane
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;REFs&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://kubernetes.io/docs/reference/generated/kubectl/kubectl-commands"&gt;Kubectl Reference Docs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Using VSCode: &lt;a href="https://docs.microsoft.com/en-us/dotnet/architecture/containerized-lifecycle/design-develop-containerized-apps/docker-apps-inner-loop-workflow"&gt;Inner-loop development workflow for Docker apps&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Using Visual Studio: &lt;a href="https://docs.microsoft.com/en-us/dotnet/architecture/microservices/docker-application-development-process/docker-app-development-workflow"&gt;Development workflow for Docker apps&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://code.visualstudio.com/docs/containers/debug-common"&gt;Debug an app running in a Docker container&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Debug using launch.json: &lt;a href="https://github.com/OmniSharp/omnisharp-vscode/blob/master/debugger-launchjson.md"&gt;OmniSharp/omnisharp-vscode&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;tasks.json: &lt;a href="https://code.visualstudio.com/docs/containers/quickstart-aspnet-core"&gt;Build and run an ASP.NET Core app in a container&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;tasks.json: &lt;a href="https://code.visualstudio.com/docs/editor/tasks"&gt;Tasks in Visual Studio Code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Dockerfile: &lt;a href="https://vsupalov.com/docker-build-time-env-values/"&gt;Setting Default Docker Environment Variables During Image Build&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Change entry point: &lt;a href="https://docs.microsoft.com/en-us/dotnet/core/docker/build-container?tabs=linux#change-the-entrypoint"&gt;Containerize an app with Docker tutorial - .NET Core&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;k8s: &lt;a href="https://colinsalmcorner.com/devops-with-kubernetes-and-vsts-part-1/"&gt;DevOps with Kubernetes and VSTS: Part 1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;AKS: &lt;a href="https://docs.microsoft.com/en-us/dotnet/architecture/containerized-lifecycle/design-develop-containerized-apps/deploy-azure-kubernetes-service"&gt;Deploy to Azure Kubernetes Service (AKS)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Using VS - AKS: &lt;a href="https://docs.microsoft.com/en-us/dotnet/architecture/containerized-lifecycle/design-develop-containerized-apps/build-aspnet-core-applications-linux-containers-aks-kubernetes"&gt;Build ASP.NET Core applications deployed as Linux containers into AKS/Kubernetes clusters&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Program.cs &lt;a href="https://wakeupandcode.com/generic-host-builder-in-asp-net-core-3-1/"&gt;Generic Host Builder in ASP .NET Core 3.1&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The End&lt;/p&gt;</content><category term="Develop"></category><category term="#csharp"></category><category term="#netcore3"></category><category term="#docker"></category><category term="#k8s"></category><category term="#jq"></category><category term="#vscode"></category></entry><entry><title>Develop .NET docker images - Part 1.2</title><link href="https://rasor.github.io/develop-net-docker-images-part-12.html" rel="alternate"></link><published>2020-10-25T00:00:00+02:00</published><updated>2020-12-20T17:00:00+01:00</updated><author><name>rasor</name></author><id>tag:rasor.github.io,2020-10-25:/develop-net-docker-images-part-12.html</id><summary type="html">&lt;p&gt;This blog is part of a serie:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://rasor.github.io/docker-desktop-for-windows-on-wsl2-part-01.html"&gt;Part 0.1: Install Docker Desktop on Windows 10 Home - including WSL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rasor.github.io/k8s-on-windows-devbox-part-02.html"&gt;Part 0.2: Install k8s using kind on Windows - including arkade&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rasor.github.io/run-docker-containers-part-11.html"&gt;Part 1.1: Run docker containers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rasor.github.io/develop-net-docker-images-part-12.html"&gt;Part 1.2: Develop .NET docker images&lt;/a&gt; (this blog)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rasor.github.io/aspnet-core-with-k8s-hosting-part-13.html"&gt;Part 1.3: Run containers …&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;This blog is part of a serie:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://rasor.github.io/docker-desktop-for-windows-on-wsl2-part-01.html"&gt;Part 0.1: Install Docker Desktop on Windows 10 Home - including WSL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rasor.github.io/k8s-on-windows-devbox-part-02.html"&gt;Part 0.2: Install k8s using kind on Windows - including arkade&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rasor.github.io/run-docker-containers-part-11.html"&gt;Part 1.1: Run docker containers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rasor.github.io/develop-net-docker-images-part-12.html"&gt;Part 1.2: Develop .NET docker images&lt;/a&gt; (this blog)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rasor.github.io/aspnet-core-with-k8s-hosting-part-13.html"&gt;Part 1.3: Run containers in k8s&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rasor.github.io/k3s-hosted-in-civo-part-20.html"&gt;Part 2.0: Deploy containers to Civo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;Intro&lt;/h1&gt;
&lt;p&gt;This blog is an example of a development cycle developing in C# on Windows using VSCode editor - also for debugging docker containers - and deploying to k8s.  &lt;/p&gt;
&lt;p&gt;This blog is inspired by content from an eBook and some tutorials.&lt;br&gt;
You find its code in this git repo: &lt;a href="https://github.com/rasor/eBook-UsingNETCoreDockerKubernetes"&gt;rasor/eBook-UsingNETCoreDockerKubernetes&lt;/a&gt;.  &lt;/p&gt;
&lt;p&gt;Main Sources are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Free eBook (2019): &lt;a href="https://www.syncfusion.com/ebooks/using-netcore-docker-and-kubernetes-succinctly"&gt;Syncfusion Free Ebooks | Using .NET Core, Docker, and Kubernetes Succinctly&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;By &lt;a href="https://twitter.com/apomic80"&gt;@apomic80&lt;/a&gt;        &lt;ul&gt;
&lt;li&gt;Github: &lt;a href="https://github.com/apomic80"&gt;apomic80&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Guide: &lt;a href="https://docs.microsoft.com/en-us/dotnet/architecture/containerized-lifecycle/design-develop-containerized-apps/docker-apps-inner-loop-workflow"&gt;Inner-loop development workflow for Docker apps&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;from free eBook (2020): &lt;a href="https://docs.microsoft.com/en-us/dotnet/architecture/containerized-lifecycle/"&gt;Containerized Docker Application Lifecycle with Microsoft Platform and Tools&lt;/a&gt; from Microsoft&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;PreRequisites&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Windows 10&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dotnet.microsoft.com/download"&gt;.NET Core 3.1 SDK&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://gitforwindows.org/"&gt;Git Bash&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://code.visualstudio.com/download"&gt;Visual Studio Code&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=ms-dotnettools.csharp"&gt;C# for VSCode&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.docker.com/docker-for-windows/"&gt;Docker Desktop for Windows user manual&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;k8s&lt;/code&gt; (I am using &lt;code&gt;kind&lt;/code&gt; for &lt;a href="K8sArkade.md"&gt;creating cluster&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Optional: &lt;a href="https://chocolatey.org/install"&gt;choco&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Optional: &lt;a href="https://stedolan.github.io/jq/download/"&gt;jq&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Optional: &lt;a href="https://helm.sh/"&gt;helm&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;choco install kubernetes-helm&lt;/code&gt; or &lt;code&gt;arkade get helm&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Optional: &lt;a href="https://github.com/Azure/draft/blob/master/docs/quickstart.md"&gt;draft&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;Chapters from eBook &lt;strong&gt;Using .NET Core, Docker, and Kubernetes&lt;/strong&gt;&lt;/h1&gt;
&lt;h2&gt;Chapter 1 ASP.NET and Docker Together&lt;/h2&gt;
&lt;h3&gt;Chapter 1.1 Execute .NET Core application with Docker&lt;/h3&gt;
&lt;p&gt;See &lt;a href="https://rasor.github.io/run-docker-containers-part-11.html"&gt;Part 1.1: Run docker containers&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Chapter 2 Create Your Application with Docker&lt;/h2&gt;
&lt;h3&gt;Chapter 2.1 Develop your ASP.NET Core application using Docker&lt;/h3&gt;
&lt;p&gt;Dotnet core commands:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;dotnet new: Creates a new project from the specified template. If you want to create an MVC application, you can use dotnet new mvc.&lt;/li&gt;
&lt;li&gt;dotnet restore: Restores all the NuGet dependencies of our application.&lt;/li&gt;
&lt;li&gt;dotnet build: Builds our project.&lt;/li&gt;
&lt;li&gt;dotnet run: Executes our project.&lt;/li&gt;
&lt;li&gt;dotnet watch run: Runs our project and watches for file changes to rebuild and re-run it.&lt;/li&gt;
&lt;li&gt;dotnet publish: Creates a deployable build (the .dll) of our project.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Install VSCode plugin &lt;a href="https://marketplace.visualstudio.com/items?itemName=ms-azuretools.vscode-docker"&gt;Docker&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Terminal 1:&lt;/span&gt;
&lt;span class="c1"&gt;# Create a C# gitignore file in the root&lt;/span&gt;
dotnet new gitignore

&lt;span class="c1"&gt;# create a folder for MVC frontend&lt;/span&gt;
mkdir -p cpt2/frontend
&lt;span class="nb"&gt;cd&lt;/span&gt; cpt2/frontend
&lt;span class="c1"&gt;# Create mvc web&lt;/span&gt;
dotnet new mvc

&lt;span class="c1"&gt;# Build an run a webserver&lt;/span&gt;
dotnet build
dotnet run
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Terminal 2:&lt;/span&gt;
&lt;span class="c1"&gt;# open a browser&lt;/span&gt;
start https://localhost:5001/
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Stop the webserver in Teminal 1 with ctrl-c.  &lt;/p&gt;
&lt;p&gt;Now create &lt;code&gt;.vscode&lt;/code&gt; files &lt;code&gt;launch.json&lt;/code&gt; and &lt;code&gt;tasks.json&lt;/code&gt;:  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Ctrl-shft-p # to open cmd palette&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.NET: Generate Assets for Build and Debug&lt;/code&gt;&lt;ul&gt;
&lt;li&gt;Choose &lt;code&gt;ASPNET Core&lt;/code&gt;, &lt;code&gt;linux&lt;/code&gt; container and ports &lt;code&gt;5000, 5001&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can now goto &lt;strong&gt;RUN&lt;/strong&gt; pane with &lt;code&gt;ctrl-shft-d&lt;/code&gt;, select the &lt;code&gt;.NET Core Launch (web)&lt;/code&gt; config and press run.  &lt;br&gt;
In the Debug console you will see&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Debug console&lt;/span&gt;
&lt;span class="c1"&gt;# Using launch settings from &amp;#39;C:\Users\zzz\eBook-UsingNETCoreDockerKubernetes/cpt2/frontend\Properties\launchSettings.json&amp;#39; [Profile &amp;#39;frontend&amp;#39;]...&lt;/span&gt;
&lt;span class="c1"&gt;# Loaded &amp;#39;C:\Users\zzz\eBook-UsingNETCoreDockerKubernetes\cpt2\frontend\bin\Debug\netcoreapp3.1\frontend.dll&amp;#39;. Symbols loaded.&lt;/span&gt;
&lt;span class="c1"&gt;# .....&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You can hit breakpoints.  &lt;/p&gt;
&lt;p&gt;Now create a &lt;code&gt;Dockerfile&lt;/code&gt;, &lt;code&gt;.dockerignore&lt;/code&gt; and &lt;code&gt;docker-compose.yml&lt;/code&gt;:  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;In explorer put cursor on cpt2\frontend&lt;/li&gt;
&lt;li&gt;Ctrl-shft-p # to open cmd palette&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Docker: Add Docker files to workspace&lt;/code&gt;&lt;ul&gt;
&lt;li&gt;Choose &lt;code&gt;ASPNET Core&lt;/code&gt;, &lt;code&gt;linux&lt;/code&gt; container and ports &lt;code&gt;5000, 5001&lt;/code&gt;, &lt;code&gt;yes&lt;/code&gt; to create compose file
&lt;img alt="Add Dockerfile" src="https://docs.microsoft.com/en-us/dotnet/architecture/containerized-lifecycle/design-develop-containerized-apps/media/docker-apps-inner-loop-workflow/add-docker-files-to-workspace-command.png"&gt;&lt;br&gt;
&lt;em&gt;(Img from Microsoft) Add Dockerfile in VSCode&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c"&gt;# Generated Dockerfile&lt;/span&gt;
&lt;span class="c"&gt;# 1. Target img to deploy to&lt;/span&gt;
&lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="s"&gt;mcr.microsoft.com/dotnet/core/aspnet:3.1&lt;/span&gt; &lt;span class="k"&gt;AS&lt;/span&gt; &lt;span class="s"&gt;base&lt;/span&gt;
&lt;span class="k"&gt;WORKDIR&lt;/span&gt;&lt;span class="s"&gt; /app&lt;/span&gt;
&lt;span class="k"&gt;EXPOSE&lt;/span&gt;&lt;span class="s"&gt; 5000&lt;/span&gt;
&lt;span class="k"&gt;EXPOSE&lt;/span&gt;&lt;span class="s"&gt; 5001&lt;/span&gt;

&lt;span class="c"&gt;# 5. Source img to build on&lt;/span&gt;
&lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="s"&gt;mcr.microsoft.com/dotnet/core/sdk:3.1&lt;/span&gt; &lt;span class="k"&gt;AS&lt;/span&gt; &lt;span class="s"&gt;build&lt;/span&gt;
&lt;span class="k"&gt;WORKDIR&lt;/span&gt;&lt;span class="s"&gt; /src&lt;/span&gt;
&lt;span class="c"&gt;# 7. Copy project file from local pc into Source img&lt;/span&gt;
&lt;span class="k"&gt;COPY&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;cpt2/frontend/frontend.csproj&amp;quot;&lt;/span&gt;, &lt;span class="s2"&gt;&amp;quot;cpt2/frontend/&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="k"&gt;RUN&lt;/span&gt; dotnet restore &lt;span class="s2"&gt;&amp;quot;cpt2/frontend/frontend.csproj&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;COPY&lt;/span&gt; . .
&lt;span class="k"&gt;WORKDIR&lt;/span&gt;&lt;span class="s"&gt; &amp;quot;/src/cpt2/frontend&amp;quot;&lt;/span&gt;
&lt;span class="c"&gt;# 11. Build .dll&lt;/span&gt;
&lt;span class="k"&gt;RUN&lt;/span&gt; dotnet build &lt;span class="s2"&gt;&amp;quot;frontend.csproj&amp;quot;&lt;/span&gt; -c Release -o /app/build

&lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="s"&gt;build&lt;/span&gt; &lt;span class="k"&gt;AS&lt;/span&gt; &lt;span class="s"&gt;publish&lt;/span&gt;
&lt;span class="c"&gt;# 13. Create a deployable package&lt;/span&gt;
&lt;span class="k"&gt;RUN&lt;/span&gt; dotnet publish &lt;span class="s2"&gt;&amp;quot;frontend.csproj&amp;quot;&lt;/span&gt; -c Release -o /app/publish

&lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="s"&gt;base&lt;/span&gt; &lt;span class="k"&gt;AS&lt;/span&gt; &lt;span class="s"&gt;final&lt;/span&gt;
&lt;span class="k"&gt;WORKDIR&lt;/span&gt;&lt;span class="s"&gt; /app&lt;/span&gt;
&lt;span class="c"&gt;# 16. Copy from Source img to Target img&lt;/span&gt;
&lt;span class="k"&gt;COPY&lt;/span&gt; --from&lt;span class="o"&gt;=&lt;/span&gt;publish /app/publish .
&lt;span class="c"&gt;# 17. Define start command&lt;/span&gt;
&lt;span class="k"&gt;ENTRYPOINT&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;dotnet&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;frontend.dll&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Change cmd 7 to 10, so you'll be able to &lt;code&gt;docker build&lt;/code&gt; from inside folder &lt;code&gt;cpt2/frontend&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c"&gt;# 7. Copy project file from local pc into Source img&lt;/span&gt;
&lt;span class="k"&gt;COPY&lt;/span&gt; ./frontend.csproj .
&lt;span class="k"&gt;RUN&lt;/span&gt; dotnet restore frontend.csproj
&lt;span class="k"&gt;COPY&lt;/span&gt; . .
&lt;span class="k"&gt;WORKDIR&lt;/span&gt;&lt;span class="s"&gt; /src&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.docker.com/engine/reference/builder/"&gt;Dockerfile reference&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Let's build our docker img&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# verify docker is running&lt;/span&gt;
docker images
&lt;span class="c1"&gt;# goto folder with Dockerfile&lt;/span&gt;
&lt;span class="nb"&gt;cd&lt;/span&gt; cpt2/frontend
docker build --help
&lt;span class="c1"&gt;# build img and tag it frontend2&lt;/span&gt;
docker build -t frontend2 .

&lt;span class="c1"&gt;# System.InvalidOperationException: Unable to configure HTTPS endpoint. No server certificate was specified, and the default developer certificate could not be found or is out of date.&lt;/span&gt;


&lt;span class="c1"&gt;# Sending build context to Docker daemon  6.432MB&lt;/span&gt;
&lt;span class="c1"&gt;# Step 1/17 : FROM mcr.microsoft.com/dotnet/core/aspnet:3.1 AS base&lt;/span&gt;
&lt;span class="c1"&gt;# 3.1: Pulling from dotnet/core/aspnet&lt;/span&gt;
&lt;span class="c1"&gt;# bb79b6b2107f: Pull complete&lt;/span&gt;
&lt;span class="c1"&gt;# fd6f53cfcb35: Pull complete&lt;/span&gt;
&lt;span class="c1"&gt;# 29b35ed07a14: Pull complete&lt;/span&gt;
&lt;span class="c1"&gt;# fd068c4127c7: Pull complete&lt;/span&gt;
&lt;span class="c1"&gt;# dc51486f316e: Pull complete&lt;/span&gt;
&lt;span class="c1"&gt;# Digest: sha256:4030ec40f9b5c1e8cac5d550639b7b05d1d6af0c89b4b47d66bad7f93379c9eb&lt;/span&gt;
&lt;span class="c1"&gt;# Status: Downloaded newer image for mcr.microsoft.com/dotnet/core/aspnet:3.1&lt;/span&gt;
&lt;span class="c1"&gt;#  ---&amp;gt; e3559b2d50bb&lt;/span&gt;
&lt;span class="c1"&gt;# Step 2/17 : WORKDIR /app&lt;/span&gt;
&lt;span class="c1"&gt;#  ---&amp;gt; Running in 14fd02991c3d&lt;/span&gt;
&lt;span class="c1"&gt;# Removing intermediate container 14fd02991c3d&lt;/span&gt;
&lt;span class="c1"&gt;#  ---&amp;gt; df46b5f3b46a&lt;/span&gt;
&lt;span class="c1"&gt;# Step 3/17 : EXPOSE 5000&lt;/span&gt;
&lt;span class="c1"&gt;#  ---&amp;gt; Running in 5adf5a71198d&lt;/span&gt;
&lt;span class="c1"&gt;# Removing intermediate container 5adf5a71198d&lt;/span&gt;
&lt;span class="c1"&gt;#  ---&amp;gt; 817df2c51839&lt;/span&gt;
&lt;span class="c1"&gt;# Step 4/17 : EXPOSE 5001&lt;/span&gt;
&lt;span class="c1"&gt;#  ---&amp;gt; Running in 1815541a6c6a&lt;/span&gt;
&lt;span class="c1"&gt;# Removing intermediate container 1815541a6c6a&lt;/span&gt;
&lt;span class="c1"&gt;#  ---&amp;gt; 02891abd8059&lt;/span&gt;
&lt;span class="c1"&gt;# Step 5/17 : FROM mcr.microsoft.com/dotnet/core/sdk:3.1 AS build&lt;/span&gt;
&lt;span class="c1"&gt;# 3.1: Pulling from dotnet/core/sdk&lt;/span&gt;
&lt;span class="c1"&gt;# e4c3d3e4f7b0: Pull complete&lt;/span&gt;
&lt;span class="c1"&gt;# 101c41d0463b: Pull complete&lt;/span&gt;
&lt;span class="c1"&gt;# 8275efcd805f: Pull complete&lt;/span&gt;
&lt;span class="c1"&gt;# 751620502a7a: Pull complete&lt;/span&gt;
&lt;span class="c1"&gt;# 8e306865fd07: Pull complete&lt;/span&gt;
&lt;span class="c1"&gt;# 9d2f53e752c2: Pull complete&lt;/span&gt;
&lt;span class="c1"&gt;# 143a93e01eba: Pull complete&lt;/span&gt;
&lt;span class="c1"&gt;# Digest: sha256:d09eefeaad2129f0a0ac047095792afc6792e7aae4b8bb1c1fa5b6650caae240&lt;/span&gt;
&lt;span class="c1"&gt;# Status: Downloaded newer image for mcr.microsoft.com/dotnet/core/sdk:3.1&lt;/span&gt;
&lt;span class="c1"&gt;#  ---&amp;gt; 5fe503d51830&lt;/span&gt;
&lt;span class="c1"&gt;# Step 6/17 : WORKDIR /src&lt;/span&gt;
&lt;span class="c1"&gt;#  ---&amp;gt; Running in 143a136929b6&lt;/span&gt;
&lt;span class="c1"&gt;# Removing intermediate container 143a136929b6&lt;/span&gt;
&lt;span class="c1"&gt;#  ---&amp;gt; 0e5a8185b7a2&lt;/span&gt;
&lt;span class="c1"&gt;# Step 7/17 : COPY ./frontend.csproj .&lt;/span&gt;
&lt;span class="c1"&gt;#  ---&amp;gt; 203c96e3d357&lt;/span&gt;
&lt;span class="c1"&gt;# Step 8/17 : RUN dotnet restore frontend.csproj&lt;/span&gt;
&lt;span class="c1"&gt;#  ---&amp;gt; Running in cd917bface5b&lt;/span&gt;
&lt;span class="c1"&gt;#   Determining projects to restore...&lt;/span&gt;
&lt;span class="c1"&gt;#   Restored /src/frontend.csproj (in 170 ms).&lt;/span&gt;
&lt;span class="c1"&gt;# Removing intermediate container cd917bface5b&lt;/span&gt;
&lt;span class="c1"&gt;#  ---&amp;gt; 866543516985&lt;/span&gt;
&lt;span class="c1"&gt;# Step 9/17 : COPY . .&lt;/span&gt;
&lt;span class="c1"&gt;#  ---&amp;gt; 6ac6636b092c&lt;/span&gt;
&lt;span class="c1"&gt;# Step 10/17 : WORKDIR /src&lt;/span&gt;
&lt;span class="c1"&gt;#  ---&amp;gt; Running in 40c27a3098f1&lt;/span&gt;
&lt;span class="c1"&gt;# Removing intermediate container 40c27a3098f1&lt;/span&gt;
&lt;span class="c1"&gt;#  ---&amp;gt; d3f07b018611&lt;/span&gt;
&lt;span class="c1"&gt;# Step 11/17 : RUN dotnet build &amp;quot;frontend.csproj&amp;quot; -c Release -o /app/build&lt;/span&gt;
&lt;span class="c1"&gt;#  ---&amp;gt; Running in 56cc1964bf83&lt;/span&gt;
&lt;span class="c1"&gt;# Microsoft (R) Build Engine version 16.7.0+7fb82e5b2 for .NET&lt;/span&gt;
&lt;span class="c1"&gt;# Copyright (C) Microsoft Corporation. All rights reserved.&lt;/span&gt;
&lt;span class="c1"&gt;#   Determining projects to restore...&lt;/span&gt;
&lt;span class="c1"&gt;#   Restored /src/frontend.csproj (in 185 ms).&lt;/span&gt;
&lt;span class="c1"&gt;#   frontend -&amp;gt; /app/build/frontend.dll&lt;/span&gt;
&lt;span class="c1"&gt;#   frontend -&amp;gt; /app/build/frontend.Views.dll&lt;/span&gt;
&lt;span class="c1"&gt;# Build succeeded.&lt;/span&gt;
&lt;span class="c1"&gt;#     0 Warning(s)&lt;/span&gt;
&lt;span class="c1"&gt;#     0 Error(s)&lt;/span&gt;
&lt;span class="c1"&gt;# Time Elapsed 00:00:05.03&lt;/span&gt;
&lt;span class="c1"&gt;# Removing intermediate container 56cc1964bf83&lt;/span&gt;
&lt;span class="c1"&gt;#  ---&amp;gt; 7ccf08805a5b&lt;/span&gt;
&lt;span class="c1"&gt;# Step 12/17 : FROM build AS publish&lt;/span&gt;
&lt;span class="c1"&gt;#  ---&amp;gt; 7ccf08805a5b&lt;/span&gt;
&lt;span class="c1"&gt;# Step 13/17 : RUN dotnet publish &amp;quot;frontend.csproj&amp;quot; -c Release -o /app/publish&lt;/span&gt;
&lt;span class="c1"&gt;#  ---&amp;gt; Running in 27507652111d&lt;/span&gt;
&lt;span class="c1"&gt;# Microsoft (R) Build Engine version 16.7.0+7fb82e5b2 for .NET&lt;/span&gt;
&lt;span class="c1"&gt;# Copyright (C) Microsoft Corporation. All rights reserved.&lt;/span&gt;
&lt;span class="c1"&gt;#   Determining projects to restore...&lt;/span&gt;
&lt;span class="c1"&gt;#   All projects are up-to-date for restore.&lt;/span&gt;
&lt;span class="c1"&gt;#   frontend -&amp;gt; /src/bin/Release/netcoreapp3.1/frontend.dll&lt;/span&gt;
&lt;span class="c1"&gt;#   frontend -&amp;gt; /src/bin/Release/netcoreapp3.1/frontend.Views.dll&lt;/span&gt;
&lt;span class="c1"&gt;#   frontend -&amp;gt; /app/publish/&lt;/span&gt;
&lt;span class="c1"&gt;# Removing intermediate container 27507652111d&lt;/span&gt;
&lt;span class="c1"&gt;#  ---&amp;gt; c08c7122d789&lt;/span&gt;
&lt;span class="c1"&gt;# Step 14/17 : FROM base AS final&lt;/span&gt;
&lt;span class="c1"&gt;#  ---&amp;gt; 02891abd8059&lt;/span&gt;
&lt;span class="c1"&gt;# Step 15/17 : WORKDIR /app&lt;/span&gt;
&lt;span class="c1"&gt;#  ---&amp;gt; Running in b52e89be9e92&lt;/span&gt;
&lt;span class="c1"&gt;# Removing intermediate container b52e89be9e92&lt;/span&gt;
&lt;span class="c1"&gt;#  ---&amp;gt; 97d3ac799145&lt;/span&gt;
&lt;span class="c1"&gt;# Step 16/17 : COPY --from=publish /app/publish .&lt;/span&gt;
&lt;span class="c1"&gt;#  ---&amp;gt; 2ac048ea1f90&lt;/span&gt;
&lt;span class="c1"&gt;# Step 17/17 : ENTRYPOINT [&amp;quot;dotnet&amp;quot;, &amp;quot;frontend.dll&amp;quot;]&lt;/span&gt;
&lt;span class="c1"&gt;#  ---&amp;gt; Running in 7359a524012b&lt;/span&gt;
&lt;span class="c1"&gt;# Removing intermediate container 7359a524012b&lt;/span&gt;
&lt;span class="c1"&gt;#  ---&amp;gt; f7828ef4f47e&lt;/span&gt;
&lt;span class="c1"&gt;# Successfully built f7828ef4f47e&lt;/span&gt;
&lt;span class="c1"&gt;# Successfully tagged frontend2:latest&lt;/span&gt;
&lt;span class="c1"&gt;# SECURITY WARNING: You are building a Docker image from Windows against a non-Windows Docker host. All files and directories added to build context will have &lt;/span&gt;
&lt;span class="c1"&gt;# &amp;#39;-rwxr-xr-x&amp;#39; permissions. It is recommended to double check and reset permissions for sensitive files and directories.&lt;/span&gt;

&lt;span class="c1"&gt;# Print image&lt;/span&gt;
docker images
&lt;span class="c1"&gt;# REPOSITORY                             TAG                 IMAGE ID            CREATED             SIZE  &lt;/span&gt;
&lt;span class="c1"&gt;# frontend2                              latest              f7828ef4f47e        5 minutes ago       212MB &lt;/span&gt;
&lt;span class="c1"&gt;# mcr.microsoft.com/dotnet/core/aspnet   3.1                 e3559b2d50bb        7 days ago          207MB &lt;/span&gt;
&lt;span class="c1"&gt;# mcr.microsoft.com/dotnet/core/sdk      3.1                 5fe503d51830        7 days ago          708MB &lt;/span&gt;

&lt;span class="c1"&gt;# Test run the img&lt;/span&gt;
docker run -p &lt;span class="m"&gt;5000&lt;/span&gt;:5000 --name nfrontend2 -t frontend2 -e &lt;span class="s2"&gt;&amp;quot;ASPNETCORE_URLS=http://+:5000&amp;quot;&lt;/span&gt;
&lt;span class="c1"&gt;#docker run -p 5000:5000 -p 5001:5001 --name nfrontend2 -t frontend2&lt;/span&gt;
&lt;span class="c1"&gt;#docker create -p 5000:5000 -p 5001:5001 --name nfrontend2 -t frontend2 --entrypoint &amp;#39;dotnet dev-certs https &amp;amp;&amp;amp; # warn: Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository[60]&lt;/span&gt;
&lt;span class="c1"&gt;#       Storing keys in a directory &amp;#39;/root/.aspnet/DataProtection-Keys&amp;#39; that may not be persisted outside of the container. Protected data will be unavailable &lt;/span&gt;
&lt;span class="c1"&gt;# when container is destroyed.&lt;/span&gt;
&lt;span class="c1"&gt;#       No XML encryptor configured. Key {22010cbd-95fa-4543-9ae3-63ee61afff7f} may be persisted to storage in unencrypted form.&lt;/span&gt;
&lt;span class="c1"&gt;#       Now listening on: http://[::]:80&lt;/span&gt;
&lt;span class="c1"&gt;#       Application started. Press Ctrl+C to shut down.&lt;/span&gt;
&lt;span class="c1"&gt;#       Hosting environment: Production&lt;/span&gt;
&lt;span class="c1"&gt;#       Content root path: /app&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Terminal 2:&lt;/span&gt;
docker start nfrontend2
&lt;span class="c1"&gt;# Which containers are running?&lt;/span&gt;
docker ps
&lt;span class="c1"&gt;# CONTAINER ID        IMAGE               COMMAND                 CREATED             STATUS              PORTS                              NAMES&lt;/span&gt;
&lt;span class="c1"&gt;# 6fc16e63dbd5        frontend2           &amp;quot;dotnet frontend.dll&amp;quot;   18 seconds ago      Up 17 seconds       0.0.0.0:5000-5001-&amp;gt;5000-5001/tcp   nfrontend2   &lt;/span&gt;

&lt;span class="c1"&gt;# Print entry point&lt;/span&gt;
docker ps -a --format &lt;span class="s2"&gt;&amp;quot;table {{.Image}}:\t {{.Command}}&amp;quot;&lt;/span&gt; --no-trunc
&lt;span class="c1"&gt;# IMAGE:                   COMMAND&lt;/span&gt;
&lt;span class="c1"&gt;# frontend2:               &amp;quot;dotnet frontend.dll…&amp;quot;&lt;/span&gt;

&lt;span class="c1"&gt;# Print as json&lt;/span&gt;
docker ps -a --format &lt;span class="s2"&gt;&amp;quot; {{json .}}&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; jq &lt;span class="s1"&gt;&amp;#39;{ID, Image, Command}&amp;#39;&lt;/span&gt;

&lt;span class="c1"&gt;# Open browser&lt;/span&gt;
start http://localhost:5000

&lt;span class="c1"&gt;# Cleanup&lt;/span&gt;
docker stop nfrontend2
docker rm nfrontend2
&lt;span class="c1"&gt;# Cleanup done?&lt;/span&gt;
docker ps -a
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Chapter 2.1B (not in eBook) Debug your docker container&lt;/h3&gt;
&lt;p&gt;To be able to debug on port 5000 you need to do a change in the launcsetting:&lt;/p&gt;
&lt;p&gt;Before:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;// .vscode/tasks.json&lt;/span&gt;
&lt;span class="err"&gt;                        &amp;quot;label&amp;quot;: &amp;quot;docker-run: debug&amp;quot;,&lt;/span&gt;
&lt;span class="err"&gt;                        &amp;quot;dependsOn&amp;quot;: [&lt;/span&gt;
&lt;span class="err"&gt;                                &amp;quot;docker-build: debug&amp;quot;&lt;/span&gt;
&lt;span class="err"&gt;                        ],&lt;/span&gt;
&lt;span class="err"&gt;                        &amp;quot;dockerRun&amp;quot;: {},&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;After:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;// .vscode/tasks.json&lt;/span&gt;
&lt;span class="err"&gt;                        &amp;quot;label&amp;quot;: &amp;quot;docker-run: debug&amp;quot;,&lt;/span&gt;
&lt;span class="err"&gt;                        &amp;quot;dependsOn&amp;quot;: [&lt;/span&gt;
&lt;span class="err"&gt;                                &amp;quot;docker-build: debug&amp;quot;&lt;/span&gt;
&lt;span class="err"&gt;                        ],&lt;/span&gt;
&lt;span class="err"&gt;                        &amp;quot;dockerRun&amp;quot;: {&lt;/span&gt;
&lt;span class="err"&gt;                                &amp;quot;env&amp;quot;: {&lt;/span&gt;
&lt;span class="err"&gt;                                        &amp;quot;ASPNETCORE_URLS&amp;quot;: &amp;quot;https://+:5001;http://+:5000&amp;quot;&lt;/span&gt;
&lt;span class="err"&gt;                                },&lt;/span&gt;
&lt;span class="err"&gt;                                &amp;quot;ports&amp;quot;: [&lt;/span&gt;
&lt;span class="err"&gt;                                        { &amp;quot;hostPort&amp;quot;: 5000, &amp;quot;containerPort&amp;quot;: 5000 },&lt;/span&gt;
&lt;span class="err"&gt;                                        { &amp;quot;hostPort&amp;quot;: 5001, &amp;quot;containerPort&amp;quot;: 5001 }&lt;/span&gt;
&lt;span class="err"&gt;                                ]&lt;/span&gt;
&lt;span class="err"&gt;                        },&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If you goto &lt;strong&gt;RUN&lt;/strong&gt; pane and choose &lt;code&gt;Docker .NET Core Launch&lt;/code&gt; in the dropdown and then press the "Play" button then you can place breakpoints in your code and remote debug into your container. VSCode will show this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#&amp;gt; Executing task: docker-build: debug &amp;lt;&lt;/span&gt;

docker build --rm --pull -f &lt;span class="s2"&gt;&amp;quot;C:\Users\zzz\eBook-UsingNETCoreDockerKubernetes/cpt2/frontend/Dockerfile&amp;quot;&lt;/span&gt; --label &lt;span class="s2"&gt;&amp;quot;com.microsoft.created-by=visual-studio-code&amp;quot;&lt;/span&gt; -t &lt;span class="s2"&gt;&amp;quot;ebookusingnetcoredockerkubernetes:dev&amp;quot;&lt;/span&gt; --target &lt;span class="s2"&gt;&amp;quot;base&amp;quot;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;C:\Users\zzz\eBook-UsingNETCoreDockerKubernetes&amp;quot;&lt;/span&gt;

&lt;span class="c1"&gt;# Where&lt;/span&gt;
&lt;span class="c1"&gt;# -f, --file string         Name of the Dockerfile (Default is &amp;#39;PATH/Dockerfile&amp;#39;)&lt;/span&gt;
&lt;span class="c1"&gt;# --label list              Set metadata for an image&lt;/span&gt;
&lt;span class="c1"&gt;# --pull                    Always attempt to pull a newer version of the image&lt;/span&gt;
&lt;span class="c1"&gt;# --rm                      Remove intermediate containers after a successful build (default true)&lt;/span&gt;
&lt;span class="c1"&gt;# -t, --tag list            Name and optionally a tag in the &amp;#39;name:tag&amp;#39; format&lt;/span&gt;
&lt;span class="c1"&gt;# --target string           Set the target build stage to build.&lt;/span&gt;

&lt;span class="c1"&gt;#&amp;gt; Executing task: docker-run: debug &amp;lt;&lt;/span&gt;

docker run -dt -P --name &lt;span class="s2"&gt;&amp;quot;ebookusingnetcoredockerkubernetes-dev&amp;quot;&lt;/span&gt; -e &lt;span class="s2"&gt;&amp;quot;DOTNET_USE_POLLING_FILE_WATCHER=1&amp;quot;&lt;/span&gt; -e &lt;span class="s2"&gt;&amp;quot;ASPNETCORE_ENVIRONMENT=Development&amp;quot;&lt;/span&gt; -e &lt;span class="s2"&gt;&amp;quot;ASPNETCORE_URLS=https://+:5001;http://+:5000&amp;quot;&lt;/span&gt; --label &lt;span class="s2"&gt;&amp;quot;com.microsoft.created-by=visual-studio-code&amp;quot;&lt;/span&gt; -v &lt;span class="s2"&gt;&amp;quot;C:\Users\zzz\eBook-UsingNETCoreDockerKubernetes/cpt2/frontend:/app:rw&amp;quot;&lt;/span&gt; -v &lt;span class="s2"&gt;&amp;quot;c:\Users\zzz\eBook-UsingNETCoreDockerKubernetes:/src:rw&amp;quot;&lt;/span&gt; -v &lt;span class="s2"&gt;&amp;quot;C:\Users\zzz\.vsdbg:/remote_debugger:ro&amp;quot;&lt;/span&gt; -v &lt;span class="s2"&gt;&amp;quot;C:\Users\zzz\.nuget\packages:/root/.nuget/packages:ro&amp;quot;&lt;/span&gt; -v &lt;span class="s2"&gt;&amp;quot;C:\Program Files\dotnet\sdk\NuGetFallbackFolder:/root/.nuget/fallbackpackages:ro&amp;quot;&lt;/span&gt; -v &lt;span class="s2"&gt;&amp;quot;C:\Users\zzz\AppData\Roaming\Microsoft\UserSecrets:/root/.microsoft/usersecrets:ro&amp;quot;&lt;/span&gt; -v &lt;span class="s2"&gt;&amp;quot;C:\Users\zzz\AppData\Roaming\ASP.NET\Https:/root/.aspnet/https:ro&amp;quot;&lt;/span&gt; -p &lt;span class="s2"&gt;&amp;quot;5000:5000&amp;quot;&lt;/span&gt; -p &lt;span class="s2"&gt;&amp;quot;5001:5001&amp;quot;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;ebookusingnetcoredockerkubernetes:dev&amp;quot;&lt;/span&gt;

&lt;span class="c1"&gt;# Where&lt;/span&gt;
&lt;span class="c1"&gt;# -d, --detach                         Run container in background and print container ID&lt;/span&gt;
&lt;span class="c1"&gt;# -t, --tty                            Allocate a pseudo-TTY&lt;/span&gt;
&lt;span class="c1"&gt;# -l, --label list                     Set meta data on a container&lt;/span&gt;
&lt;span class="c1"&gt;# -P, --publish-all                    Publish all exposed ports to random ports&lt;/span&gt;
&lt;span class="c1"&gt;# -v, --volume list                    Bind mount a volume&lt;/span&gt;
&lt;span class="c1"&gt;# Some from tasks.json:&lt;/span&gt;
&lt;span class="c1"&gt;# -e, --env list                       Set environment variables&lt;/span&gt;
&lt;span class="c1"&gt;# -p, --publish list                   Publish a container&amp;#39;s port(s) to the host&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Isn't that nice?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Ref: &lt;a href="https://code.visualstudio.com/docs/containers/debug-common"&gt;Debug an app running in a Docker container&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Chapter 2.2 Add containers to your project&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;To Be Added&lt;/em&gt;&lt;/p&gt;
&lt;h3&gt;Chapter 2.3 Run your container with Docker Compose&lt;/h3&gt;
&lt;p&gt;When you used Command Palette command &lt;code&gt;Docker: Add Docker files to workspace&lt;/code&gt; then you said yes to create compose files:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Generated docker-compose.debug.yml&lt;/span&gt;
&lt;span class="c1"&gt;# Please refer https://aka.ms/HTTPSinContainer on how to setup an https developer certificate for your ASP .NET Core service.&lt;/span&gt;

&lt;span class="nt"&gt;version&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;3.4&amp;#39;&lt;/span&gt;

&lt;span class="nt"&gt;services&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="nt"&gt;frontend&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="nt"&gt;image&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;frontend&lt;/span&gt;
        &lt;span class="nt"&gt;build&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="nt"&gt;context&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;.&lt;/span&gt;
            &lt;span class="nt"&gt;dockerfile&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;cpt2/frontend/Dockerfile&lt;/span&gt;
        &lt;span class="nt"&gt;ports&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="p p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;5000&lt;/span&gt;
            &lt;span class="p p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;5001&lt;/span&gt;
        &lt;span class="nt"&gt;environment&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="p p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;ASPNETCORE_ENVIRONMENT=Development&lt;/span&gt;
            &lt;span class="p p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;ASPNETCORE_URLS=http://+:5000&lt;/span&gt;
        &lt;span class="nt"&gt;volumes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="p p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;~/.vsdbg:/remote_debugger:rw&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Change frontend in both the .debug.yml and then non-debug yml to:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    &lt;span class="nt"&gt;frontend&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="nt"&gt;image&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;frontend2&lt;/span&gt;
        &lt;span class="c1"&gt;# Add this&lt;/span&gt;
        &lt;span class="nt"&gt;container_name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;frontend2&lt;/span&gt; &lt;span class="c1"&gt;# then you can attach to this name&lt;/span&gt;
        &lt;span class="nt"&gt;build&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="nt"&gt;context&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;./cpt2/frontend&lt;/span&gt;
            &lt;span class="nt"&gt;dockerfile&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;Dockerfile&lt;/span&gt;
        &lt;span class="nt"&gt;environment&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="c1"&gt;# Add this to the non-debug&lt;/span&gt;
            &lt;span class="p p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;ASPNETCORE_URLS=https://+:5001;http://+:5000&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;So now we can start several containers at once (if more containeres were present in the compose file).&lt;br&gt;
Compose will also create a docker network for the containers to communicate through.  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# ensure you find the root folder&lt;/span&gt;
&lt;span class="nb"&gt;cd&lt;/span&gt; cpt2/frontend
&lt;span class="c1"&gt;# go back to root, where docker-compose.yml exists&lt;/span&gt;
&lt;span class="nb"&gt;cd&lt;/span&gt; ../..

docker-compose up

start http://localhost:5000

&lt;span class="c1"&gt;# ctrl-c to stop the servers&lt;/span&gt;
&lt;span class="c1"&gt;# or&lt;/span&gt;
docker-compose stop
&lt;span class="c1"&gt;# or&lt;/span&gt;
docker-compose down &lt;span class="c1"&gt;# will also remove (docker-compose rm)&lt;/span&gt;

&lt;span class="c1"&gt;# check which containers exists&lt;/span&gt;
docker ps -a

&lt;span class="c1"&gt;# then restart # if not removed&lt;/span&gt;
docker-compose start
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Refs: &lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.docker.com/compose/reference/overview/"&gt;Overview of docker-compose CLI&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Can we debug code running in a container by attiching our local code to it?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Goto the &lt;strong&gt;RUN&lt;/strong&gt; pane&lt;/li&gt;
&lt;li&gt;In the Run-dropdown - do &lt;code&gt;Àdd Confuguration&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Choose &lt;code&gt;Docker .NET Core Attach (Preview)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This will create most of this&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;//.vscode/launch.json&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Docker .NET Core Attach (Preview)&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;quot;type&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;docker&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;quot;request&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;attach&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;quot;containerName&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;frontend2&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;quot;platform&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;netCore&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;quot;sourceFileMap&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                        &lt;span class="nt"&gt;&amp;quot;/src&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;${workspaceFolder}&amp;quot;&lt;/span&gt;
                &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="err"&gt;,&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Optionally add &lt;code&gt;containerName&lt;/code&gt; in or to auto attach to a specific running container.  &lt;/p&gt;
&lt;p&gt;Now spin up the container&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# use debug compose file&lt;/span&gt;
docker-compose -f docker-compose.debug.yml up
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;That will show in a docker terminal:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Docker terminal&lt;/span&gt;
&lt;span class="c1"&gt;# &amp;gt; Executing task: docker-compose -f &amp;quot;docker-compose.debug.yml&amp;quot; up -d --build &amp;lt;&lt;/span&gt;

&lt;span class="c1"&gt;# Creating network &amp;quot;ebook-usingnetcoredockerkubernetes_default&amp;quot; with the default driver&lt;/span&gt;
&lt;span class="c1"&gt;# Building frontend&lt;/span&gt;
&lt;span class="c1"&gt;# Step 1/17 : FROM mcr.microsoft.com/dotnet/core/aspnet:3.1 AS base&lt;/span&gt;
&lt;span class="c1"&gt;#  ---&amp;gt; e3559b2d50bb&lt;/span&gt;
&lt;span class="c1"&gt;# ......&lt;/span&gt;
&lt;span class="c1"&gt;# Step 17/17 : ENTRYPOINT [&amp;quot;dotnet&amp;quot;, &amp;quot;frontend.dll&amp;quot;]&lt;/span&gt;
&lt;span class="c1"&gt;#  ---&amp;gt; Using cache&lt;/span&gt;
&lt;span class="c1"&gt;#  ---&amp;gt; 6572076fad45&lt;/span&gt;

&lt;span class="c1"&gt;# Successfully built 6572076fad45&lt;/span&gt;
&lt;span class="c1"&gt;# Successfully tagged frontend2:latest&lt;/span&gt;
&lt;span class="c1"&gt;# Creating frontend2 ... done&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now in the &lt;strong&gt;RUN&lt;/strong&gt; pane select the &lt;code&gt;Docker .NET Core Attach (Preview)&lt;/code&gt; config and press run.&lt;br&gt;
In the Debug console you will see&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Debug console&lt;/span&gt;
&lt;span class="c1"&gt;# Starting: &amp;quot;docker&amp;quot; exec -i frontend2 /remote_debugger/vsdbg --interpreter=vscode&lt;/span&gt;
&lt;span class="c1"&gt;# .....&lt;/span&gt;
&lt;span class="c1"&gt;# Loaded &amp;#39;/app/frontend.dll&amp;#39;. Symbols loaded.&lt;/span&gt;
&lt;span class="c1"&gt;# .....&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You should be able to set breakpoints in your code and break.&lt;br&gt;
But something is not quite right, yet. It does not work on my PC.  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Refs: &lt;ul&gt;
&lt;li&gt;&lt;a href="https://code.visualstudio.com/docs/containers/docker-compose"&gt;Use Docker Compose to work with multiple containers&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;Debug NetCore: &lt;a href="https://code.visualstudio.com/docs/containers/docker-compose#_net"&gt;NetCore&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://code.visualstudio.com/docs/remote/attach-container"&gt;Attach to a running container using Visual Studio Code Remote Development&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Chapter 2.4 Create the final image for publication&lt;/h3&gt;
&lt;h4&gt;Publish image to docker hub&lt;/h4&gt;
&lt;p&gt;Create a docker hub repo. I'll publish to&lt;br&gt;
https://hub.docker.com/repository/docker/rasor/usingnetcoredockerkubernetes &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# goto folder with Dockerfile&lt;/span&gt;
&lt;span class="nb"&gt;cd&lt;/span&gt; cpt2/frontend
docker build --help
&lt;span class="c1"&gt;# build img and tag it&lt;/span&gt;
docker build -t frontend2:v1 .
&lt;span class="c1"&gt;# Successfully built 6572076fad45&lt;/span&gt;
&lt;span class="c1"&gt;# Successfully tagged frontend2:v1&lt;/span&gt;

docker images &lt;span class="p"&gt;|&lt;/span&gt; grep frontend2
&lt;span class="c1"&gt;# frontend2                              latest              6572076fad45        3 days ago          212MB&lt;/span&gt;
&lt;span class="c1"&gt;# frontend2                              v1                  6572076fad45        3 days ago          212MB&lt;/span&gt;

&lt;span class="c1"&gt;# tag the image, so you can upload it to docker hub&lt;/span&gt;
&lt;span class="c1"&gt;# docker tag local-image:tagname new-repo:tagname&lt;/span&gt;
docker tag frontend2:v1 rasor/usingnetcoredockerkubernetes:frontend2-v1

docker images &lt;span class="p"&gt;|&lt;/span&gt; grep frontend2
&lt;span class="c1"&gt;# REPOSITORY                             TAG                 IMAGE ID            CREATED             SIZE&lt;/span&gt;
&lt;span class="c1"&gt;# rasor/usingnetcoredockerkubernetes     frontend2-v1        6572076fad45        3 days ago          212MB&lt;/span&gt;
&lt;span class="c1"&gt;# frontend2                              latest              6572076fad45        3 days ago          212MB&lt;/span&gt;
&lt;span class="c1"&gt;# frontend2                              v1                  6572076fad45        3 days ago          212MB&lt;/span&gt;

&lt;span class="c1"&gt;# upload docker img to https://hub.docker.com/repository/docker/rasor/usingnetcoredockerkubernetes&lt;/span&gt;
&lt;span class="c1"&gt;# docker push new-repo:tagname&lt;/span&gt;
docker push rasor/usingnetcoredockerkubernetes:frontend2-v1
&lt;span class="c1"&gt;# The push refers to repository [docker.io/rasor/usingnetcoredockerkubernetes]&lt;/span&gt;
&lt;span class="c1"&gt;# ...&lt;/span&gt;
&lt;span class="c1"&gt;# frontend2-v1: digest: sha256:e413934f1dba2e85b66f69125f6b4ac9944122c8f1c3d8f0f97355abb6ad8ec9 size: 1793&lt;/span&gt;

&lt;span class="c1"&gt;# When you want to download it do:&lt;/span&gt;
&lt;span class="c1"&gt;# docker pull rasor/usingnetcoredockerkubernetes:frontend2-v1&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Chapter 3 Deploy Your Application on Kubernetes&lt;/h2&gt;
&lt;h3&gt;Chapter 3.2 Deploy your images in Kubernetes&lt;/h3&gt;
&lt;p&gt;See &lt;a href="https://rasor.github.io/aspnet-core-with-k8s-hosting-part-13.html"&gt;Part 1.3&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The End&lt;/p&gt;</content><category term="Develop"></category><category term="#docker"></category><category term="#csharp"></category><category term="#netcore"></category></entry><entry><title>OpenFaaS on Windows Devbox</title><link href="https://rasor.github.io/openfaas-on-windows-devbox.html" rel="alternate"></link><published>2019-03-29T00:00:00+01:00</published><updated>2019-10-19T00:00:00+02:00</updated><author><name>rasor</name></author><id>tag:rasor.github.io,2019-03-29:/openfaas-on-windows-devbox.html</id><summary type="html">&lt;h1&gt;Running OpenFaas in Dev on Windows&lt;/h1&gt;
&lt;p&gt;Finally the time has arrived, when I'll start using &lt;a href="https://www.openfaas.com/"&gt;OpenFaas&lt;/a&gt;.&lt;br&gt;
I first heard about OpenFaaS at a meetup in May 2018, &lt;a href="https://www.meetup.com/GOTO-Nights-CPH/events/249895973/"&gt;6 Cloud Native Talks, 1 Evening: Special KubeCon + CloudNativeCon EU Meetup!&lt;/a&gt; by OpenFaaS creator, &lt;a href="https://github.com/alexellis"&gt;Alex Ellis&lt;/a&gt;.&lt;br&gt;
Next I bought the book &lt;a href="https://www.packtpub.com/virtualization-and-cloud/docker-serverless-applications"&gt;Docker for …&lt;/a&gt;&lt;/p&gt;</summary><content type="html">&lt;h1&gt;Running OpenFaas in Dev on Windows&lt;/h1&gt;
&lt;p&gt;Finally the time has arrived, when I'll start using &lt;a href="https://www.openfaas.com/"&gt;OpenFaas&lt;/a&gt;.&lt;br&gt;
I first heard about OpenFaaS at a meetup in May 2018, &lt;a href="https://www.meetup.com/GOTO-Nights-CPH/events/249895973/"&gt;6 Cloud Native Talks, 1 Evening: Special KubeCon + CloudNativeCon EU Meetup!&lt;/a&gt; by OpenFaaS creator, &lt;a href="https://github.com/alexellis"&gt;Alex Ellis&lt;/a&gt;.&lt;br&gt;
Next I bought the book &lt;a href="https://www.packtpub.com/virtualization-and-cloud/docker-serverless-applications"&gt;Docker for Serverless Applications&lt;/a&gt; (D4S) by &lt;a href="https://github.com/chanwit"&gt;Chanwit Kaewkasi&lt;/a&gt;, but only skimmed it. I highly recommed it!&lt;br&gt;
Now it is time to practice.&lt;/p&gt;
&lt;h2&gt;Why? - OpenFaaS vs Cloud Native Serverless&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://twitter.com/rasor/status/1111244201738620928"&gt;But how about&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Why not just use cloud native serverless?&lt;ul&gt;
&lt;li&gt;When you don't want the auto-kill feature.&lt;/li&gt;
&lt;li&gt;When you want serverless in you dev box&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;You don't get pay-per-invocation?&lt;ul&gt;
&lt;li&gt;No you have to deploy a #k8s or #docker_swarm cluster. This can be as cheap by using #spot_instance s. @chanwits teach you how to do that.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;You don't get seemless integration with cloud native services?&lt;ul&gt;
&lt;li&gt;No - but aren't you used to that when you integrate to the services from your dev box?&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;How?&lt;/h2&gt;
&lt;p&gt;You can run OpenFaaS either on top of &lt;strong&gt;Kubernetes (k8s)&lt;/strong&gt; or &lt;strong&gt;Docker Swarm&lt;/strong&gt;.&lt;br&gt;
Info: k8s or swarm gives you a cluster of machines, and deployed an application to it, with containers running in concert on multiple machines.  &lt;/p&gt;
&lt;p&gt;&lt;img alt="OpenFaaS" src="https://pbs.twimg.com/media/DFrkF4NXoAAJwN2.jpg"&gt; (from OpenFaaS website).&lt;br&gt;
It comes with autoscaling features, logging and prometheus.&lt;/p&gt;
&lt;h3&gt;Production&lt;/h3&gt;
&lt;p&gt;For deploying to OpenFaaS to a &lt;strong&gt;cloud container cluster&lt;/strong&gt; there are some good guides on &lt;strong&gt;k8s&lt;/strong&gt; like &lt;a href="https://github.com/openfaas-incubator/ofc-bootstrap"&gt;ofc-bootstrap&lt;/a&gt;. I guess you are managing the cluster here.&lt;br&gt;
You can include the ofc-bootstrap in a &lt;a href="https://www.openfaas.com/blog/openfaas-cloud-gitlab/"&gt;GitLab DevOps workflow&lt;/a&gt;. This will use DigitalOcean (60 day trial in previous link), Google Cloud or AWS as cloud container cluster provider.&lt;/p&gt;
&lt;p&gt;There is also a great guide in the D4S book chapter 7, where Chanwit uses &lt;strong&gt;AWS spot instances&lt;/strong&gt; for running &lt;strong&gt;Swarm&lt;/strong&gt; worker nodes. This solution can &lt;strong&gt;keep the price as low as Native Serverless&lt;/strong&gt;, Chanwit claims. The challenge with spot instances is that you have to &lt;strong&gt;restart nodes&lt;/strong&gt;, when they are &lt;strong&gt;marked for termination&lt;/strong&gt;.&lt;br&gt;
In this guide you are managing the cluster.&lt;br&gt;
Chanwits &lt;a href="https://github.com/PacktPublishing/Docker-for-Serverless-Applications/tree/master/ch_operating"&gt;code is here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;But OpenFaaS has build-in scaling and monitoring, so the managing part is limited.  &lt;/p&gt;
&lt;h3&gt;Development&lt;/h3&gt;
&lt;p&gt;For local deployment there are guides, too.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Swarm: &lt;a href="https://docs.openfaas.com/deployment/docker-swarm/"&gt;Docker Swarm - OpenFaaS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;k8s: &lt;a href="https://docs.openfaas.com/deployment/kubernetes/"&gt;Kubernetes - OpenFaaS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;D4W + k8s: &lt;a href="https://secanablog.wordpress.com/2018/06/10/run-your-own-faas-with-openfaas-and-net-core/"&gt;Run your own FaaS with OpenFaas and .Net Core&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;In the D4S book chapter 4 teaches you to deploy OpenFaaS on Swarm.&lt;br&gt;
Chanwits &lt;a href="https://github.com/PacktPublishing/Docker-for-Serverless-Applications/tree/master/ch_openfaas"&gt;code is here&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Practice&lt;/h2&gt;
&lt;p&gt;I'll select &lt;strong&gt;Windows + Docker for Windows (D4W) + Hyper-V + Swarm&lt;/strong&gt;.&lt;br&gt;
On a Windows laptop you can run D4W on VirtualBox or Hyper-V hypervisor. I'll choose Hyper-V, since that was what I &lt;a href="https://rasor.github.io/docker-for-windows.html"&gt;used previously&lt;/a&gt;. Using &lt;a href="https://kitematic.com/"&gt;Kitematic&lt;/a&gt; you should be able to &lt;em&gt;swap from Hyper-V to VirtualBox&lt;/em&gt;.&lt;br&gt;
If you want to use VirtualBox you get it included with Kitematic in &lt;a href="https://docs.docker.com/toolbox/overview/"&gt;Docker Toolbox&lt;/a&gt;.&lt;br&gt;
My reason for choosing Swarm is that I think it is easier to getting started with. In D4W kubernetes settings you can &lt;em&gt;change from k8s to Swarm&lt;/em&gt; &lt;code&gt;docker stack&lt;/code&gt; commands - this is configured in &lt;code&gt;~\.docker\config.json&lt;/code&gt;.  &lt;/p&gt;
&lt;p&gt;For a start I'll follow guide &lt;a href="https://docs.openfaas.com/deployment/docker-swarm/"&gt;Docker Swarm - OpenFaaS&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Pre-requisites&lt;/h3&gt;
&lt;p&gt;Here is what you need&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://gitforwindows.org/"&gt;Git Bash&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Optional: &lt;a href="https://rasor.github.io/curl-cli-on-windows.html"&gt;cUrl&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rasor.github.io/docker-for-windows.html"&gt;Docker for Windows (D4W) - including Hyper-V&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Optional: &lt;a href="https://www.python.org/downloads/"&gt;Python&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Examine Docker&lt;/h3&gt;
&lt;p&gt;As mentioned above - you need Docker for Windows either on top of Virtual Box or Hyper-V. I upgraded to latest - 2..0.0.3.
And my D4W settings is already set to Swarm.&lt;br&gt;
&lt;img alt="D4W set to Swarm" src="img/2019/2019-03-28-OpenFaaS01.PNG" title="D4W set to Swarm"&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Verify Docker is running&lt;/span&gt;
docker info
&lt;span class="c1"&gt;# Containers: 4&lt;/span&gt;
&lt;span class="c1"&gt;#  Running: 0&lt;/span&gt;
&lt;span class="c1"&gt;#  Paused: 0&lt;/span&gt;
&lt;span class="c1"&gt;#  Stopped: 4&lt;/span&gt;
&lt;span class="c1"&gt;# Images: 15&lt;/span&gt;
&lt;span class="c1"&gt;# Server Version: 18.09.2&lt;/span&gt;
&lt;span class="c1"&gt;# Storage Driver: overlay2&lt;/span&gt;
&lt;span class="c1"&gt;#  Backing Filesystem: extfs&lt;/span&gt;
&lt;span class="c1"&gt;#  Supports d_type: true&lt;/span&gt;
&lt;span class="c1"&gt;#  Native Overlay Diff: true&lt;/span&gt;
&lt;span class="c1"&gt;# Logging Driver: json-file&lt;/span&gt;
&lt;span class="c1"&gt;# Cgroup Driver: cgroupfs&lt;/span&gt;
&lt;span class="c1"&gt;# Plugins:&lt;/span&gt;
&lt;span class="c1"&gt;#  Volume: local&lt;/span&gt;
&lt;span class="c1"&gt;#  Network: bridge host macvlan null overlay&lt;/span&gt;
&lt;span class="c1"&gt;#  Log: awslogs fluentd gcplogs gelf journald json-file local logentries splunk syslog&lt;/span&gt;
&lt;span class="c1"&gt;# Swarm: inactive &amp;lt;-----------&lt;/span&gt;
&lt;span class="c1"&gt;# Runtimes: runc&lt;/span&gt;
&lt;span class="c1"&gt;# Default Runtime: runc&lt;/span&gt;
&lt;span class="c1"&gt;# Init Binary: docker-init&lt;/span&gt;
&lt;span class="c1"&gt;# ....&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Docker Swarm&lt;/h3&gt;
&lt;p&gt;You also need to log in to &lt;a href="https://hub.docker.com/"&gt;Docker Hub&lt;/a&gt;, so you can upload some docker images. &lt;br&gt;
&lt;img alt="Login to Docker hub" src="img/2019/2019-03-28-OpenFaaS02.PNG" title="Login to Docker hub"&gt;&lt;/p&gt;
&lt;p&gt;With docker running next we need a Swarm cluster - from &lt;code&gt;docker init&lt;/code&gt; we know that Swarm is inactive.&lt;/p&gt;
&lt;p&gt;How can you operate Swarm?&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker swarm
&lt;span class="c1"&gt;# Commands:&lt;/span&gt;
&lt;span class="c1"&gt;#   ca          Display and rotate the root CA&lt;/span&gt;
&lt;span class="c1"&gt;#   init        Initialize a swarm&lt;/span&gt;
&lt;span class="c1"&gt;#   join        Join a swarm as a node and/or manager&lt;/span&gt;
&lt;span class="c1"&gt;#   join-token  Manage join tokens&lt;/span&gt;
&lt;span class="c1"&gt;#   leave       Leave the swarm&lt;/span&gt;
&lt;span class="c1"&gt;#   unlock      Unlock swarm&lt;/span&gt;
&lt;span class="c1"&gt;#   unlock-key  Manage the unlock key&lt;/span&gt;
&lt;span class="c1"&gt;#   update      Update the swarm&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Swarm has manager- and worker nodes. We only need the manager.&lt;br&gt;
On a devbox we'll just create a single-node swarm. When creating multi-node swarms you should &lt;a href="https://docs.docker.com/engine/swarm/swarm-tutorial/"&gt;use command docker-machine&lt;/a&gt;.  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Create a single-node swarm.&lt;/span&gt;
&lt;span class="c1"&gt;# Create 1st manager node - you need to add --advertise-addr, if the host has a public IP addr.&lt;/span&gt;
docker swarm init
&lt;span class="c1"&gt;# Swarm initialized: current node (ornhp66bt5rk928ekryv4xks4) is now a manager.&lt;/span&gt;
&lt;span class="c1"&gt;# To add a worker to this swarm, run the following command:&lt;/span&gt;
&lt;span class="c1"&gt;#     docker swarm join --token SWMTKN-1-0rzaxpyyubb419j6qf9wubskxnypznknbaw5wiqcx05kt6ew1i-cje86tlt1s4fc69yy7cuwww0l 192.168.65.3:2377&lt;/span&gt;
&lt;span class="c1"&gt;# To add a manager to this swarm, run &amp;#39;docker swarm join-token manager&amp;#39; and follow the instructions.&lt;/span&gt;

&lt;span class="c1"&gt;# If you don&amp;#39;t note above worker-join info you can re-print it&lt;/span&gt;
docker swarm join-token worker
&lt;span class="c1"&gt;# To add a worker to this swarm, run the following command:&lt;/span&gt;
&lt;span class="c1"&gt;#     docker swarm join --token SWMTKN-1-0rzaxpyyubb419j6qf9wubskxnypznknbaw5wiqcx05kt6ew1i-cje86tlt1s4fc69yy7cuwww0l 192.168.65.3:2377&lt;/span&gt;

&lt;span class="c1"&gt;# Now swarm is active with this windows shell being the manager node - meaning - the manager is not running in a container&lt;/span&gt;
docker info
&lt;span class="c1"&gt;# ....&lt;/span&gt;
&lt;span class="c1"&gt;#  Log: awslogs fluentd gcplogs gelf journald json-file local logentries splunk syslog&lt;/span&gt;
&lt;span class="c1"&gt;# Swarm: active&lt;/span&gt;
&lt;span class="c1"&gt;#  NodeID: ornhp66bt5rk928ekryv4xks4&lt;/span&gt;
&lt;span class="c1"&gt;#  Is Manager: true&lt;/span&gt;
&lt;span class="c1"&gt;#  ClusterID: 9pvxm96yzehiadacxf7k0e87e&lt;/span&gt;
&lt;span class="c1"&gt;#  Managers: 1&lt;/span&gt;
&lt;span class="c1"&gt;#  Nodes: 1&lt;/span&gt;
&lt;span class="c1"&gt;#  Default Address Pool: 10.0.0.0/8&lt;/span&gt;
&lt;span class="c1"&gt;#  SubnetSize: 24&lt;/span&gt;
&lt;span class="c1"&gt;#  Orchestration:&lt;/span&gt;
&lt;span class="c1"&gt;#   Task History Retention Limit: 5&lt;/span&gt;
&lt;span class="c1"&gt;#  Raft:&lt;/span&gt;
&lt;span class="c1"&gt;#   Snapshot Interval: 10000&lt;/span&gt;
&lt;span class="c1"&gt;#   Number of Old Snapshots to Retain: 0&lt;/span&gt;
&lt;span class="c1"&gt;#   Heartbeat Tick: 1&lt;/span&gt;
&lt;span class="c1"&gt;#   Election Tick: 10&lt;/span&gt;
&lt;span class="c1"&gt;#  Dispatcher:&lt;/span&gt;
&lt;span class="c1"&gt;#   Heartbeat Period: 5 seconds&lt;/span&gt;
&lt;span class="c1"&gt;#  CA Configuration:&lt;/span&gt;
&lt;span class="c1"&gt;#   Expiry Duration: 3 months&lt;/span&gt;
&lt;span class="c1"&gt;#   Force Rotate: 0&lt;/span&gt;
&lt;span class="c1"&gt;#  Autolock Managers: false&lt;/span&gt;
&lt;span class="c1"&gt;#  Root Rotation In Progress: false&lt;/span&gt;
&lt;span class="c1"&gt;#  Node Address: 192.168.65.3&lt;/span&gt;
&lt;span class="c1"&gt;#  Manager Addresses:&lt;/span&gt;
&lt;span class="c1"&gt;#   192.168.65.3:2377&lt;/span&gt;
&lt;span class="c1"&gt;# Runtimes: runc&lt;/span&gt;
&lt;span class="c1"&gt;# ....&lt;/span&gt;

&lt;span class="c1"&gt;# print more info about the swarm node(s)&lt;/span&gt;
docker node ls
&lt;span class="c1"&gt;# ID                            HOSTNAME                STATUS              AVAILABILITY        MANAGER STATUS      ENGINE VERSION&lt;/span&gt;
&lt;span class="c1"&gt;# ornhp66bt5rk928ekryv4xks4 *   linuxkit-00155d102102   Ready               Active              Leader              18.09.2&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Learn more about the &lt;a href="https://docs.docker.com/get-started/part4/#understanding-swarm-clusters"&gt;Swarm clusters&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;OpenFaaS&lt;/h3&gt;
&lt;h4&gt;OpenFaaS Install&lt;/h4&gt;
&lt;p&gt;With a cluster running we can start OpenFaaS installation. This is done from a script that we fetch from github.  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Download docker-compose.yml file and deploy deploy_stack.ps1&lt;/span&gt;
&lt;span class="nb"&gt;cd&lt;/span&gt; C:&lt;span class="se"&gt;\U&lt;/span&gt;sers&lt;span class="se"&gt;\y&lt;/span&gt;ourname
&lt;span class="c1"&gt;# At time of writing the latest OpenFaaS release is https://github.com/openfaas/faas/tree/0.12.0&lt;/span&gt;
git clone https://github.com/openfaas/faas
&lt;span class="nb"&gt;cd&lt;/span&gt; faas
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;From Powershell prompt - run as admin - it will use a .NET dll for creating a password.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Install OpenFaaS via ps1 - notice - it will create a user and password for logging in to the CLI&lt;/span&gt;
&lt;span class="nb"&gt;cd&lt;/span&gt; C:&lt;span class="se"&gt;\U&lt;/span&gt;sers&lt;span class="se"&gt;\y&lt;/span&gt;ourname&lt;span class="se"&gt;\f&lt;/span&gt;aas
Set-ExecutionPolicy RemoteSigned
./deploy_stack.ps1 &lt;span class="c1"&gt;# ./deploy_stack.sh for Linux or Mac&lt;/span&gt;
&lt;span class="c1"&gt;# Attempting to create credentials for gateway..&lt;/span&gt;
&lt;span class="c1"&gt;# [Credentials]&lt;/span&gt;
&lt;span class="c1"&gt;#  username: admin&lt;/span&gt;
&lt;span class="c1"&gt;#  password: b391be3c12d7dc8412a26eb13625f0d28bab2e578acb7473ea6c9e209e501f37&lt;/span&gt;
&lt;span class="c1"&gt;#  Write-Output &amp;quot;b391be3c12d7dc8412a26eb13625f0d28bab2e578acb7473ea6c9e209e501f37&amp;quot; | faas-cli login --username=admin --password-stdin&lt;/span&gt;
&lt;span class="c1"&gt;# Enabling basic authentication for gateway..&lt;/span&gt;

&lt;span class="c1"&gt;# Deploying OpenFaaS core services&lt;/span&gt;
&lt;span class="c1"&gt;# Creating network func_functions&lt;/span&gt;
&lt;span class="c1"&gt;# Creating config func_prometheus_rules&lt;/span&gt;
&lt;span class="c1"&gt;# Creating config func_alertmanager_config&lt;/span&gt;
&lt;span class="c1"&gt;# Creating config func_prometheus_config&lt;/span&gt;
&lt;span class="c1"&gt;# Creating service func_faas-swarm&lt;/span&gt;
&lt;span class="c1"&gt;# Creating service func_nats&lt;/span&gt;
&lt;span class="c1"&gt;# Creating service func_queue-worker&lt;/span&gt;
&lt;span class="c1"&gt;# Creating service func_prometheus&lt;/span&gt;
&lt;span class="c1"&gt;# Creating service func_alertmanager&lt;/span&gt;
&lt;span class="c1"&gt;# Creating service func_gateway&lt;/span&gt;

&lt;span class="c1"&gt;# Prints:&lt;/span&gt;
docker stack ls
&lt;span class="c1"&gt;# NAME                SERVICES            ORCHESTRATOR&lt;/span&gt;
&lt;span class="c1"&gt;# func                6                   Swarm&lt;/span&gt;

docker stack services func --format &lt;span class="s2"&gt;&amp;quot;table {{.Name}}\t{{.Ports}}&amp;quot;&lt;/span&gt;
&lt;span class="c1"&gt;# NAME                PORTS&lt;/span&gt;
&lt;span class="c1"&gt;# func_gateway        *:8080-&amp;gt;8080/tcp&lt;/span&gt;
&lt;span class="c1"&gt;# func_faas-swarm&lt;/span&gt;
&lt;span class="c1"&gt;# func_queue-worker&lt;/span&gt;
&lt;span class="c1"&gt;# func_prometheus     *:9090-&amp;gt;9090/tcp&lt;/span&gt;
&lt;span class="c1"&gt;# func_nats&lt;/span&gt;
&lt;span class="c1"&gt;# func_alertmanager&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;OpenFaaS Usage&lt;/h4&gt;
&lt;h5&gt;OpenFaaS Portal&lt;/h5&gt;
&lt;p&gt;So you've got (as the print above shows you)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://127.0.0.1:8080/ui/"&gt;OpenFaaS Portal&lt;/a&gt; on http://127.0.0.1:8080&lt;br&gt;
&lt;img alt="OpenFaaS Portal" src="img/2019/2019-03-28-OpenFaaS03.PNG" title="OpenFaaS Portal"&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://127.0.0.1:9090/graph"&gt;Prometheus&lt;/a&gt; on http://127.0.0.1:9090
&lt;img alt="Prometheus" src="img/2019/2019-03-28-OpenFaaS04.PNG" title="Prometheus"&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Let's test OpenFaaS.  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Press Deploy New Function.&lt;/li&gt;
&lt;li&gt;Select Figlet and press Deploy.  &lt;/li&gt;
&lt;li&gt;Notice there is a link to the code deployed: &lt;a href="https://github.com/faas-and-furious/figlet"&gt;faas-and-furious/figlet&lt;/a&gt;&lt;br&gt;
&lt;img alt="OpenFaaS Deploy" src="img/2019/2019-03-28-OpenFaaS05.PNG" title="OpenFaaS Deploy"&gt;&lt;/li&gt;
&lt;li&gt;Now test the function. Select it, enter an input string in Request body and invoke it.&lt;/li&gt;
&lt;li&gt;Output is displayed in Response body. Notice the invocation count telling it has been invoked once. And it only took 43ms to create its container, execute it and kill it again!&lt;br&gt;
&lt;img alt="OpenFaaS Invoke" src="img/2019/2019-03-28-OpenFaaS06.PNG" title="OpenFaaS Invoke"&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Let's test Prometheus. &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;On the Graph page there is a dropdown list with a lot of counters. The first one is gateway_function_invocation_total. Select it and press Execute.&lt;/li&gt;
&lt;li&gt;Yes, also here we are told there has been one invocation, but we are even told name of function, where it was running and the http result status code.  &lt;/li&gt;
&lt;li&gt;Notice you can get a graph view instead of this list view.&lt;br&gt;
&lt;img alt="Prometheus counter" src="img/2019/2019-03-28-OpenFaaS07.PNG" title="Prometheus counter"&gt;&lt;/li&gt;
&lt;li&gt;There are lots of counters. Here is a screenshot of the top ones.&lt;br&gt;
&lt;img alt="Prometheus counters" src="img/2019/2019-03-28-OpenFaaS08.PNG" title="Prometheus counters"&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So how about invoking figlet from curl?&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;curl localhost:8080/function/figlet -d &lt;span class="s2"&gt;&amp;quot;OpenFaaS&amp;quot;&lt;/span&gt;
&lt;span class="c1"&gt;#   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current&lt;/span&gt;
&lt;span class="c1"&gt;#                                  Dload  Upload   Total   Spent    Left  Speed&lt;/span&gt;
&lt;span class="c1"&gt;# 100   290  100   282  100     8   5035    142 --:--:-- --:--:-- --:--:--  5272  &lt;/span&gt;
&lt;span class="c1"&gt;#   ___                   _____           ____&lt;/span&gt;
&lt;span class="c1"&gt;#  / _ \ _ __   ___ _ __ |  ___|_ _  __ _/ ___|&lt;/span&gt;
&lt;span class="c1"&gt;# | | | | &amp;#39;_ \ / _ \ &amp;#39;_ \| |_ / _` |/ _` \___ \&lt;/span&gt;
&lt;span class="c1"&gt;# | |_| | |_) |  __/ | | |  _| (_| | (_| |___) |&lt;/span&gt;
&lt;span class="c1"&gt;#  \___/| .__/ \___|_| |_|_|  \__,_|\__,_|____/&lt;/span&gt;
&lt;span class="c1"&gt;#       |_|&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Nice - we have a webservice then :-)  &lt;/p&gt;
&lt;h5&gt;OpenFaaS CLI&lt;/h5&gt;
&lt;p&gt;For Windows you need to download &lt;a href="https://github.com/openfaas/faas-cli"&gt;OpenFaaS CLI - faas-cli.exe&lt;/a&gt; from &lt;a href="https://github.com/openfaas/faas-cli/releases"&gt;openfaas/faas-cli/releases&lt;/a&gt; to e.g. &lt;code&gt;C:\Program Files\Docker\Docker\Resources\bin\&lt;/code&gt;. In this way it will already be in the system path.  &lt;/p&gt;
&lt;p&gt;From GIT Bash - CLI Login does not work from CMD!&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Verify Faas CLI is responding&lt;/span&gt;
faas-cli version
&lt;span class="c1"&gt;# version: 0.8.6&lt;/span&gt;

&lt;span class="c1"&gt;# Login to OpenFaaS gateway&lt;/span&gt;
&lt;span class="nb"&gt;echo&lt;/span&gt; -n b391be3c12d7dc8412a26eb13625f0d28bab2e578acb7473ea6c9e209e501f37 &lt;span class="p"&gt;|&lt;/span&gt; faas-cli login --username&lt;span class="o"&gt;=&lt;/span&gt;admin --password-stdin
&lt;span class="c1"&gt;# Calling the OpenFaaS server to validate the credentials...&lt;/span&gt;
&lt;span class="c1"&gt;# WARNING! Communication is not secure, please consider using HTTPS. Letsencrypt.org offers free SSL/TLS certificates.&lt;/span&gt;
&lt;span class="c1"&gt;# credentials saved for admin http://127.0.0.1:8080&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Info: faas-cli login will store your password as a hash at ~/.openfaas/config.yaml.&lt;br&gt;
But when you open the OpenFaaS Portal at http://127.0.0.1:8080 you will also need the psw.&lt;br&gt;
127.0.0.1 is the localhost IP. You can replace it with the internal (nat'ed) IP of your PC.  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# What does the CLI give you?&lt;/span&gt;
faas-cli
&lt;span class="c1"&gt;# Available Commands:&lt;/span&gt;
&lt;span class="c1"&gt;#   build          Builds OpenFaaS function containers&lt;/span&gt;
&lt;span class="c1"&gt;#   cloud          OpenFaaS Cloud commands&lt;/span&gt;
&lt;span class="c1"&gt;#   deploy         Deploy OpenFaaS functions&lt;/span&gt;
&lt;span class="c1"&gt;#   describe       Describe an OpenFaaS function&lt;/span&gt;
&lt;span class="c1"&gt;#   generate       Generate Kubernetes CRD YAML file&lt;/span&gt;
&lt;span class="c1"&gt;#   help           Help about any command&lt;/span&gt;
&lt;span class="c1"&gt;#   invoke         Invoke an OpenFaaS function&lt;/span&gt;
&lt;span class="c1"&gt;#   list           List OpenFaaS functions&lt;/span&gt;
&lt;span class="c1"&gt;#   login          Log in to OpenFaaS gateway&lt;/span&gt;
&lt;span class="c1"&gt;#   logout         Log out from OpenFaaS gateway&lt;/span&gt;
&lt;span class="c1"&gt;#   new            Create a new template in the current folder with the name given as name&lt;/span&gt;
&lt;span class="c1"&gt;#   push           Push OpenFaaS functions to remote registry (Docker Hub)&lt;/span&gt;
&lt;span class="c1"&gt;#   remove         Remove deployed OpenFaaS functions&lt;/span&gt;
&lt;span class="c1"&gt;#   secret         OpenFaaS secret commands&lt;/span&gt;
&lt;span class="c1"&gt;#   store          OpenFaaS store commands&lt;/span&gt;
&lt;span class="c1"&gt;#   template       OpenFaaS template store and pull commands&lt;/span&gt;
&lt;span class="c1"&gt;#   up             Builds, pushes and deploys OpenFaaS function containers&lt;/span&gt;
&lt;span class="c1"&gt;#   version        Display the clients version information&lt;/span&gt;

&lt;span class="c1"&gt;# Flags:&lt;/span&gt;
&lt;span class="c1"&gt;#       --filter string   Wildcard to match with function names in YAML file&lt;/span&gt;
&lt;span class="c1"&gt;#   -h, --help            help for faas-cli&lt;/span&gt;
&lt;span class="c1"&gt;#       --regex string    Regex to match with function names in YAML file&lt;/span&gt;
&lt;span class="c1"&gt;#   -f, --yaml string     Path to YAML file describing function(s)&lt;/span&gt;


&lt;span class="c1"&gt;# Let&amp;#39;s see what we have of functions&lt;/span&gt;
faas-cli list
&lt;span class="c1"&gt;# Function                        Invocations     Replicas&lt;/span&gt;
&lt;span class="c1"&gt;# figlet                          8               1&lt;/span&gt;

&lt;span class="c1"&gt;# Let&amp;#39;s try to invoke it once more&lt;/span&gt;
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;FaaS CLI&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; faas-cli invoke figlet
&lt;span class="c1"&gt;#  _____           ____     ____ _     ___&lt;/span&gt;
&lt;span class="c1"&gt;# |  ___|_ _  __ _/ ___|   / ___| |   |_ _|&lt;/span&gt;
&lt;span class="c1"&gt;# | |_ / _` |/ _` \___ \  | |   | |    | |&lt;/span&gt;
&lt;span class="c1"&gt;# |  _| (_| | (_| |___) | | |___| |___ | |&lt;/span&gt;
&lt;span class="c1"&gt;# |_|  \__,_|\__,_|____/   \____|_____|___|&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;OpenFaaS CLI Build&lt;/h4&gt;
&lt;p&gt;Now we can build our own functions.  &lt;/p&gt;
&lt;p&gt;I need to run some Python functions, so I'll develop with python.&lt;br&gt;
Here is a guide: &lt;a href="https://blog.alexellis.io/first-faas-python-function/"&gt;Your first serverless Python function with OpenFaaS&lt;/a&gt; (Step 3 - Write your function)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# What Python versions do I have on this devbox? &lt;/span&gt;
&lt;span class="c1"&gt;# 2.x:&lt;/span&gt;
python -V
&lt;span class="c1"&gt;# Python 2.7.15 &lt;/span&gt;
&lt;span class="c1"&gt;# (yes I know it is old)&lt;/span&gt;
pip -V
&lt;span class="c1"&gt;# pip 9.0.3 from c:\program files (x86)\python27\lib\site-packages (python 2.7)&lt;/span&gt;

&lt;span class="c1"&gt;# 3.x:&lt;/span&gt;
py -V
&lt;span class="c1"&gt;# Python 3.6.4&lt;/span&gt;
pip3 -V
&lt;span class="c1"&gt;# pip 9.0.1 from c:\program files (x86)\python36-32\lib\site-packages (python 3.6)&lt;/span&gt;

&lt;span class="c1"&gt;# OK, let&amp;#39;s create a python project&lt;/span&gt;
&lt;span class="nb"&gt;cd&lt;/span&gt; C:&lt;span class="se"&gt;\U&lt;/span&gt;sers&lt;span class="se"&gt;\y&lt;/span&gt;ourname&lt;span class="se"&gt;\p&lt;/span&gt;rojs-openfaas &lt;span class="c1"&gt;#or where ever you want your code&lt;/span&gt;
faas-cli new faas-py-test1 --lang python
&lt;span class="c1"&gt;# 2019/03/29 21:22:17 No templates found in current directory.&lt;/span&gt;
&lt;span class="c1"&gt;# 2019/03/29 21:22:17 Attempting to expand templates from https://github.com/openfaas/templates.git&lt;/span&gt;
&lt;span class="c1"&gt;# 2019/03/29 21:22:23 Fetched 15 template(s) : [csharp csharp-armhf dockerfile go go-armhf java8 node node-arm64 node-armhf php7 python python-armhf python3 python3-armhf ruby] from https://github.com/openfaas/templates.git&lt;/span&gt;
&lt;span class="c1"&gt;# Folder: faas-py-test1 created.&lt;/span&gt;
&lt;span class="c1"&gt;# Function created in folder: faas-py-test1&lt;/span&gt;
&lt;span class="c1"&gt;# Stack file written: faas-py-test1.yml&lt;/span&gt;

&lt;span class="c1"&gt;# So the files we have are&lt;/span&gt;
&lt;span class="c1"&gt;# |- faas-py-test1.yml    # Docker Stack file&lt;/span&gt;
&lt;span class="c1"&gt;# |- faas-py-test1&lt;/span&gt;
&lt;span class="c1"&gt;#     |- handler.py       # Py program&lt;/span&gt;
&lt;span class="c1"&gt;#     |- requirements.txt # Py dependencies&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Tips about templates: 
* &lt;a href="https://github.com/openfaas/faas-cli/blob/master/guide/TEMPLATE.md"&gt;faas-cli/guide/TEMPLATE&lt;/a&gt;
* &lt;a href="https://github.com/openfaas/faas-cli"&gt;faas-cli&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Edit faas-py-test1.yml:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nt"&gt;provider&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
  &lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;openfaas&lt;/span&gt;
  &lt;span class="nt"&gt;gateway&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;http://127.0.0.1:8080&lt;/span&gt;
&lt;span class="nt"&gt;functions&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
  &lt;span class="nt"&gt;faas-py-test1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="nt"&gt;lang&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;python&lt;/span&gt;
    &lt;span class="nt"&gt;handler&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;./faas-py-test1&lt;/span&gt;
    &lt;span class="nt"&gt;image&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;rasor/faas-py-test1:v1&lt;/span&gt; &lt;span class="c1"&gt;# edited! Added dockerhub userid/. Changed :latest to v1&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Edit handler.py:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;handle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;req&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;handle a request to the function&lt;/span&gt;
&lt;span class="sd"&gt;    Args:&lt;/span&gt;
&lt;span class="sd"&gt;        req (str): request body&lt;/span&gt;
&lt;span class="sd"&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Hello! You said: &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;req&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# Added this line&lt;/span&gt;
    &lt;span class="c1"&gt;# return req # Removed this line&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# So let&amp;#39;s build!&lt;/span&gt;
faas-cli build -f ./faas-py-test1.yml
&lt;span class="c1"&gt;# [0] &amp;gt; Building faas-py-test1.&lt;/span&gt;
&lt;span class="c1"&gt;# Clearing temporary build folder: ./build/faas-py-test1/&lt;/span&gt;
&lt;span class="c1"&gt;# Preparing ./faas-py-test1/ ./build/faas-py-test1//function&lt;/span&gt;
&lt;span class="c1"&gt;# Building: rasor/faas-py-test1:v1 with python template. Please wait..&lt;/span&gt;
&lt;span class="c1"&gt;# Sending build context to Docker daemon  8.192kB&lt;/span&gt;
&lt;span class="c1"&gt;# Step 1/25 : FROM python:2.7-alpine&lt;/span&gt;
&lt;span class="c1"&gt;# ..............&lt;/span&gt;
&lt;span class="c1"&gt;# Step 22/25 : ENV fprocess=&amp;quot;python index.py&amp;quot;&lt;/span&gt;
&lt;span class="c1"&gt;#  ---&amp;gt; Running in 597f759e3ecb&lt;/span&gt;
&lt;span class="c1"&gt;# Removing intermediate container 597f759e3ecb&lt;/span&gt;
&lt;span class="c1"&gt;#  ---&amp;gt; d5d5ec9ac47b&lt;/span&gt;
&lt;span class="c1"&gt;# Step 23/25 : EXPOSE 8080&lt;/span&gt;
&lt;span class="c1"&gt;#  ---&amp;gt; Running in 855b6cb3e7f2&lt;/span&gt;
&lt;span class="c1"&gt;# Removing intermediate container 855b6cb3e7f2&lt;/span&gt;
&lt;span class="c1"&gt;#  ---&amp;gt; fad6d57e56ab&lt;/span&gt;
&lt;span class="c1"&gt;# Step 24/25 : HEALTHCHECK --interval=3s CMD [ -e /tmp/.lock ] || exit 1&lt;/span&gt;
&lt;span class="c1"&gt;#  ---&amp;gt; Running in 0016df8d9c04&lt;/span&gt;
&lt;span class="c1"&gt;# Removing intermediate container 0016df8d9c04&lt;/span&gt;
&lt;span class="c1"&gt;#  ---&amp;gt; f39663c66ae2&lt;/span&gt;
&lt;span class="c1"&gt;# Step 25/25 : CMD [&amp;quot;fwatchdog&amp;quot;]&lt;/span&gt;
&lt;span class="c1"&gt;#  ---&amp;gt; Running in f301a88e4ebb&lt;/span&gt;
&lt;span class="c1"&gt;# Removing intermediate container f301a88e4ebb&lt;/span&gt;
&lt;span class="c1"&gt;#  ---&amp;gt; 4cf93e981b89&lt;/span&gt;
&lt;span class="c1"&gt;# Successfully built 4cf93e981b89&lt;/span&gt;
&lt;span class="c1"&gt;# Successfully tagged rasor/faas-py-test1:v1&lt;/span&gt;
&lt;span class="c1"&gt;# SECURITY WARNING: You are building a Docker image from Windows against a non-Windows Docker host. All files and directories added to build context will have &amp;#39;-rwxr-xr-x&amp;#39; permissions. It is recommended to double check and reset permissions for sensitive files and directories.&lt;/span&gt;
&lt;span class="c1"&gt;# Image: rasor/faas-py-test1:v1 built.&lt;/span&gt;
&lt;span class="c1"&gt;# [0] &amp;lt; Building faas-py-test1 done.&lt;/span&gt;
&lt;span class="c1"&gt;# [0] worker done.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The build created file Dockerfile.&lt;br&gt;
Dockerfile contains the 25 build steps you see in the output. It builds the docker image.&lt;br&gt;
Note: It also tells OpenFaaS how and where to start the function.&lt;/p&gt;
&lt;p&gt;.\build\faas-py-test1\Dockerfile:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c"&gt;# ... Lines omitted&lt;/span&gt;
&lt;span class="c"&gt;# Here OpenFaaS knows howto starts the program&lt;/span&gt;
&lt;span class="k"&gt;ENV&lt;/span&gt; &lt;span class="nv"&gt;fprocess&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;python index.py&amp;quot;&lt;/span&gt;
&lt;span class="c"&gt;# ... Lines omitted&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Verify img has been built&lt;/span&gt;
docker images
&lt;span class="c1"&gt;# REPOSITORY                     TAG                 IMAGE ID            CREATED             SIZE&lt;/span&gt;
&lt;span class="c1"&gt;# rasor/faas-py-test1            v1                  4cf93e981b89        14 minutes ago      65.8MB&lt;/span&gt;

&lt;span class="c1"&gt;# Push the img to docker hub for fast access&lt;/span&gt;
faas-cli push -f faas-py-test1.yml
&lt;span class="c1"&gt;# [0] &amp;gt; Pushing faas-py-test1 [rasor/faas-py-test1:v1].&lt;/span&gt;
&lt;span class="c1"&gt;# The push refers to repository [docker.io/rasor/faas-py-test1]&lt;/span&gt;
&lt;span class="c1"&gt;# 617c2e92f234: Pushed&lt;/span&gt;
&lt;span class="c1"&gt;# .......&lt;/span&gt;
&lt;span class="c1"&gt;# bcf2f368fe23: Mounted from library/python&lt;/span&gt;
&lt;span class="c1"&gt;# v1: digest: sha256:84991bc8eae01a7893b869e50758b7849482017f81334b3057289a283932a95a size: 3655&lt;/span&gt;
&lt;span class="c1"&gt;# [0] &amp;lt; Pushing faas-py-test1 [rasor/faas-py-test1:v1] done.&lt;/span&gt;
&lt;span class="c1"&gt;# [0] worker done.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Verify that the img has been uploaded: &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://hub.docker.com/r/rasor/faas-py-test1"&gt;repository/docker/rasor/faas-py-test1&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Time to Deploy&lt;/span&gt;
faas-cli deploy -f ./faas-py-test1.yml
&lt;span class="c1"&gt;# Deploying: faas-py-test1.&lt;/span&gt;
&lt;span class="c1"&gt;# WARNING! Communication is not secure, please consider using HTTPS. Letsencrypt.org offers free SSL/TLS certificates.&lt;/span&gt;
&lt;span class="c1"&gt;# Deployed. 202 Accepted.&lt;/span&gt;
&lt;span class="c1"&gt;# URL: http://127.0.0.1:8080/function/faas-py-test1&lt;/span&gt;

&lt;span class="c1"&gt;# Let&amp;#39;s try to invoke it once more&lt;/span&gt;
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;HiHoh&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; faas-cli invoke faas-py-test1
&lt;span class="c1"&gt;# Hello! You said: &amp;quot;HiHoh&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Next steps&lt;/h2&gt;
&lt;h3&gt;Next steps - Development&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;OpenFaaS CLI Build with JSON input/output&lt;ul&gt;
&lt;li&gt;See &lt;a href="https://blog.alexellis.io/first-faas-python-function/"&gt;Your first serverless Python function with OpenFaaS&lt;/a&gt; (Step 4 - Import 3rd party dependencies).  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.openfaas.com/deployment/troubleshooting/"&gt;Troubleshooting - OpenFaaS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.openfaas.com/reference/async/"&gt;Async - OpenFaaS&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Next steps - New tools&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;OpenFaaS Dashboard&lt;ul&gt;
&lt;li&gt;HowTo setup &lt;strong&gt;Grafana&lt;/strong&gt; as dashboard service in your cluster:&lt;br&gt;
See book D4S chapter 4 (The OpenFaaS dashboard page 80).  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.alexellis.io/cli-functions-with-openfaas/"&gt;Turn Any CLI into a Function with OpenFaaS&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h1&gt;Links&lt;/h1&gt;
&lt;h2&gt;OpenFaaS&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.openfaas.com/blog/serverless-single-page-app/"&gt;How to build a Serverless Single Page App&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/alexellis/leaderboard-app"&gt;alexellis/leaderboard-app&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/openfaas-incubator/openfaas-sinatra-guestbook"&gt;openfaas-incubator/openfaas-sinatra-guestbook&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Deploy: &lt;a href="https://github.com/openfaas/openfaas-cloud#get-started"&gt;openfaas/openfaas-cloud&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;One-Click install on k8s cluster: &lt;a href="https://github.com/openfaas-incubator/ofc-bootstrap"&gt;openfaas-incubator/ofc-bootstrap&lt;/a&gt; - watch vid!&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.openfaas.com/blog/openfaas-cloud-gitlab/"&gt;Introducing OpenFaaS Cloud with GitLab&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=Sa1VBSfVpK0"&gt;OpenFaaS Cloud in 100 seconds&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=J9xoNf9yZ60"&gt;Get your own OpenFaaS Cloud in 1 minute&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=6xJwQgDnMFE"&gt;Create a 2-node Kubernetes cluster in 10 minutes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Manual install: &lt;a href="https://github.com/openfaas/openfaas-cloud/blob/master/docs/README.md"&gt;openfaas/openfaas-cloud&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Deploy docs: &lt;a href="https://docs.openfaas.com/deployment/"&gt;Deployment - OpenFaaS&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://secanablog.wordpress.com/2018/06/10/run-your-own-faas-with-openfaas-and-net-core/"&gt;Run your own FaaS with OpenFaas and .Net Core&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.openshift.com/openfaas-on-openshift/"&gt;OpenFaaS on OpenShift - Red Hat OpenShift Blog&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.alexellis.io/openshift-in-a-footloose-container/"&gt;Install OpenShift in a container with Weave Footloose&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/weaveworks/footloose"&gt;weaveworks/footloose&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Uses &lt;a href="https://github.com/moby/buildkit"&gt;moby/buildkit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Private image registry: &lt;a href="https://docs.docker.com/registry/"&gt;Docker Registry&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;docker-machine&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/docker/machine"&gt;docker/machine&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.docker.com/engine/swarm/swarm-tutorial/create-swarm/"&gt;Create a swarm&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://gist.github.com/johnmccabe/55baab605c0fb82df9c1cbf8c3dde407"&gt;Running OpenFaaS on Windows 10 - using Docker Swarm on Hyper-V&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OpenFaaS &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/openfaas/workshop"&gt;openfaas/workshop&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;My own blogs&lt;ul&gt;
&lt;li&gt;&lt;a href="https://rasor.github.io/tag/docker.html"&gt;Docker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rasor.github.io/tag/kubernetes.html"&gt;Kubernetes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Cloud IaaS container cluster hosts&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.digitalocean.com/"&gt;DigitalOcean&lt;/a&gt; - k8s manager node for free - you pay for cluster nodes only. Min $30/Month.&lt;/li&gt;
&lt;li&gt;AWS&lt;/li&gt;
&lt;li&gt;Azure&lt;/li&gt;
&lt;li&gt;GCP&lt;/li&gt;
&lt;li&gt;&lt;a href="https://devcenter.heroku.com/categories/deploying-with-docker"&gt;Deploying with Docker | Heroku Dev Center&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;More Links&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.alexellis.io/swarm-secrets-in-action/"&gt;Docker Secrets in action: Github integration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ngrok.com/"&gt;ngrok - secure introspectable tunnels to localhost&lt;/a&gt; - use it to expose you localhost to the internet, when testing.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.alexellis.io/cli-functions-with-openfaas/"&gt;Turn Any CLI into a Function with OpenFaaS&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Books&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;2018-04: &lt;a href="https://www.packtpub.com/virtualization-and-cloud/docker-serverless-applications"&gt;Docker for Serverless Applications | PACKT Books&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The End&lt;/p&gt;</content><category term="Develop"></category><category term="#openfaas"></category><category term="#curl"></category><category term="#docker"></category><category term="#kubernetes"></category><category term="#hyperv"></category><category term="#virtualbox"></category><category term="#kitematic"></category><category term="#dockerswarm"></category><category term="#python"></category><category term="#git"></category><category term="#gitlab"></category><category term="#openshift"></category><category term="#footloose"></category></entry><entry><title>YAML tables in Markdown</title><link href="https://rasor.github.io/yaml-tables-in-markdown.html" rel="alternate"></link><published>2018-09-07T17:00:00+02:00</published><updated>2018-09-07T17:00:00+02:00</updated><author><name>rasor</name></author><id>tag:rasor.github.io,2018-09-07:/yaml-tables-in-markdown.html</id><summary type="html">&lt;p&gt;If you put YAML in your github markdown, you can use it for creating &lt;strong&gt;nested&lt;/strong&gt; tables&lt;br&gt;
&lt;a href="https://blog.github.com/2013-09-27-viewing-yaml-metadata-in-your-documents/"&gt;&lt;img alt="Nested tables with yaml" src="https://f.cloud.github.com/assets/64050/1228267/e049d0c6-27a0-11e3-9dd8-a1cd22599344.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This is opposed to using &lt;a href="https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet#tables"&gt;normal markdown tables&lt;/a&gt; as here:  &lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Normal&lt;/th&gt;
&lt;th align="center"&gt;Markdown&lt;/th&gt;
&lt;th align="right"&gt;Tables&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;col 3 is&lt;/td&gt;
&lt;td align="center"&gt;right-aligned&lt;/td&gt;
&lt;td align="right"&gt;$1600&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;col 2 is&lt;/td&gt;
&lt;td align="center"&gt;centered&lt;/td&gt;
&lt;td align="right"&gt;$12&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;zebra stripes&lt;/td&gt;
&lt;td align="center"&gt;are neat&lt;/td&gt;
&lt;td align="right"&gt;$1&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;Cool usage sample&lt;/h2&gt;
&lt;p&gt;CryptoZombies is a …&lt;/p&gt;</summary><content type="html">&lt;p&gt;If you put YAML in your github markdown, you can use it for creating &lt;strong&gt;nested&lt;/strong&gt; tables&lt;br&gt;
&lt;a href="https://blog.github.com/2013-09-27-viewing-yaml-metadata-in-your-documents/"&gt;&lt;img alt="Nested tables with yaml" src="https://f.cloud.github.com/assets/64050/1228267/e049d0c6-27a0-11e3-9dd8-a1cd22599344.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This is opposed to using &lt;a href="https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet#tables"&gt;normal markdown tables&lt;/a&gt; as here:  &lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Normal&lt;/th&gt;
&lt;th align="center"&gt;Markdown&lt;/th&gt;
&lt;th align="right"&gt;Tables&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;col 3 is&lt;/td&gt;
&lt;td align="center"&gt;right-aligned&lt;/td&gt;
&lt;td align="right"&gt;$1600&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;col 2 is&lt;/td&gt;
&lt;td align="center"&gt;centered&lt;/td&gt;
&lt;td align="right"&gt;$12&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;zebra stripes&lt;/td&gt;
&lt;td align="center"&gt;are neat&lt;/td&gt;
&lt;td align="right"&gt;$1&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;Cool usage sample&lt;/h2&gt;
&lt;p&gt;CryptoZombies is a code teaching webapp that uses data from Yaml tables as persistence for their content. Here is how their markup shows in github:&lt;br&gt;
&lt;a href="https://github.com/loomnetwork/cryptozombie-lessons/blob/master/en/3/02-ownable.md"&gt;&lt;img alt="cryptozombie markdown" src="img/2018/2018-09-07-YamlTable1.PNG"&gt;&lt;/a&gt;  &lt;/p&gt;
&lt;p&gt;The corresponding yaml markdown:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nn"&gt;---&lt;/span&gt;
&lt;span class="nt"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;Ownable Contracts&lt;/span&gt;
&lt;span class="nt"&gt;actions&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p p-Indicator"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;checkAnswer&amp;#39;&lt;/span&gt;&lt;span class="p p-Indicator"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;hints&amp;#39;&lt;/span&gt;&lt;span class="p p-Indicator"&gt;]&lt;/span&gt;
&lt;span class="nt"&gt;requireLogin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;true&lt;/span&gt;
&lt;span class="nt"&gt;material&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
  &lt;span class="nt"&gt;editor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="nt"&gt;language&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;sol&lt;/span&gt;
    &lt;span class="nt"&gt;startingCode&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="s"&gt;&amp;quot;zombiefactory.sol&amp;quot;&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt; &lt;span class="p p-Indicator"&gt;|&lt;/span&gt;
        &lt;span class="no"&gt;pragma solidity ^0.4.19;&lt;/span&gt;
        &lt;span class="no"&gt;// 1. Import here&lt;/span&gt;
      &lt;span class="s"&gt;&amp;quot;zombiefeeding.sol&amp;quot;&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt; &lt;span class="p p-Indicator"&gt;|&lt;/span&gt;
        &lt;span class="no"&gt;pragma solidity ^0.4.19;&lt;/span&gt;
        &lt;span class="no"&gt;// other sol code here &lt;/span&gt;
      &lt;span class="s"&gt;&amp;quot;ownable.sol&amp;quot;&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt; &lt;span class="p p-Indicator"&gt;|&lt;/span&gt;
        &lt;span class="no"&gt;// other sol code here &lt;/span&gt;
    &lt;span class="nt"&gt;answer&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p p-Indicator"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="no"&gt;pragma solidity ^0.4.19;&lt;/span&gt;
      &lt;span class="no"&gt;// other sol code here &lt;/span&gt;
&lt;span class="nn"&gt;---&lt;/span&gt;
&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Did you spot ....&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;What is really cool is how their webapp formats the .md
&lt;a href="https://cryptozombies.io/en/lesson/3/chapter/2"&gt;&lt;img alt="cryptozombie markdown" src="img/2018/2018-09-07-YamlTable2.PNG"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;Links&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/github/markup"&gt;github/markup&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet"&gt;Markdown Cheatsheet&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://cryptozombies.io/en/course"&gt;CryptoZombies - Learn to code games on Ethereum.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/loomnetwork/cryptozombie-lessons"&gt;CryptoZombies lessons webapp on github&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The End&lt;/p&gt;</content><category term="Develop"></category><category term="#github"></category><category term="#yaml"></category><category term="#markdown"></category></entry><entry><title>Using TFS from VSCode</title><link href="https://rasor.github.io/using-tfs-from-vscode.html" rel="alternate"></link><published>2018-09-02T14:00:00+02:00</published><updated>2018-09-07T11:30:00+02:00</updated><author><name>rasor</name></author><id>tag:rasor.github.io,2018-09-02:/using-tfs-from-vscode.html</id><summary type="html">&lt;p&gt;You might continue a while working with TFS before you jump to GIT.&lt;br&gt;
At least we do that at my work. For frontend projects like Ionic, Angular, Vue, etc using a CLI for generation code templates it makes most sense to to stay in VSCode (opposed to Visual Studio).&lt;br&gt;
So …&lt;/p&gt;</summary><content type="html">&lt;p&gt;You might continue a while working with TFS before you jump to GIT.&lt;br&gt;
At least we do that at my work. For frontend projects like Ionic, Angular, Vue, etc using a CLI for generation code templates it makes most sense to to stay in VSCode (opposed to Visual Studio).&lt;br&gt;
So howto use TFS from VSCode?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Make sure you are already connected to TFS from normal Visual Studio&lt;/li&gt;
&lt;li&gt;From the normal Visual Studio you need to change your workspace from &lt;code&gt;server&lt;/code&gt; to &lt;code&gt;local&lt;/code&gt;&lt;ul&gt;
&lt;li&gt;Goto Source Control Explorer and edit workspaces&lt;/li&gt;
&lt;li&gt;Change Location from &lt;code&gt;server&lt;/code&gt; to &lt;code&gt;local&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Map the root of your npm project (in level with package.json) to where you want it (or where it already is) in TFS &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="https://github.com/Microsoft/vsts-vscode/blob/master/TFVC_README.md#what-is-the-difference-between-a-local-and-server-workspace-how-can-i-tell-which-one-im-working-with"&gt;&lt;img alt="edit workspaces" src="https://raw.githubusercontent.com/Microsoft/vsts-vscode/master/assets/tf-workspace-dialog.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Install into VSCode &lt;a href="https://marketplace.visualstudio.com/items?itemName=ms-vsts.team"&gt;Visual Studio Team Services&lt;/a&gt; plugin&lt;/li&gt;
&lt;li&gt;In the root of your npm project (in level with package.json) create a &lt;a href="https://docs.microsoft.com/en-us/previous-versions/visualstudio/visual-studio-2013/jj155786(v=vs.120)#tfignore-file-example"&gt;.tfignore&lt;/a&gt; file.&lt;br&gt;
Here is a sample:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# .tfignore&lt;/span&gt;
&lt;span class="c1"&gt;# When using VSCode plugin Visual Studio Team Services&lt;/span&gt;
&lt;span class="c1"&gt;# https://marketplace.visualstudio.com/items?itemName=ms-vsts.team&lt;/span&gt;
&lt;span class="c1"&gt;# .. then you need this .tfignore file&lt;/span&gt;

&lt;span class="c1"&gt;# https://docs.microsoft.com/en-us/previous-versions/visualstudio/visual-studio-2013/jj155786(v=vs.120)#tfignore-file-example&lt;/span&gt;

&lt;span class="c1"&gt;# Ignore all files in the sub-folders&lt;/span&gt;
&lt;span class="se"&gt;\n&lt;/span&gt;ode_modules
&lt;span class="se"&gt;\.&lt;/span&gt;sourcemaps
&lt;span class="se"&gt;\w&lt;/span&gt;ww
&lt;span class="se"&gt;\p&lt;/span&gt;latforms
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;In your &lt;a href="https://stackoverflow.com/questions/48056972/how-to-connect-tfs-in-visual-studio-code/48070466#48070466"&gt;VSCode user settings&lt;/a&gt; (File - Preferences - Settings) add:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;tfvc.location&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\Common7\\IDE\\CommonExtensions\\Microsoft\\TeamFoundation\\Team Explorer\\tf.exe&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;tfvc.restrictWorkspace&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;In VSCode you can now login to TFS with command (Ctrl-Shift-P) team signin, where you´ll enter your corporate username and password&lt;/li&gt;
&lt;li&gt;So now you can checkin (incl see diffs, undo and exclude) to TFS from the Source Control tab&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="https://github.com/Microsoft/vsts-vscode/blob/master/TFVC_README.md#the-tfvc-source-control-viewlet"&gt;&lt;img alt="Source Control Tab in VSCode" src="https://raw.githubusercontent.com/Microsoft/vsts-vscode/master/assets/tfvc-viewlet.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The End&lt;/p&gt;</content><category term="Develop"></category><category term="#vscode"></category><category term="#tfs"></category><category term="#git"></category><category term="#npm"></category><category term="#visualstudio"></category></entry><entry><title>Microsoft Architecture and Implementations</title><link href="https://rasor.github.io/microsoft-architecture-and-implementations.html" rel="alternate"></link><published>2018-08-18T20:00:00+02:00</published><updated>2020-10-18T10:00:00+02:00</updated><author><name>rasor</name></author><id>tag:rasor.github.io,2018-08-18:/microsoft-architecture-and-implementations.html</id><summary type="html">&lt;p&gt;This blog will help you choosing the right design and corresponding code, when you build microsoft web and services in 2017 and 2018.&lt;/p&gt;
&lt;h1&gt;Lists of Architectures and Implementations&lt;/h1&gt;
&lt;p&gt;Here are some lists that can be gives you several designs.  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.microsoft.com/net/learn/architecture"&gt;.NET Application Architecture Guidance&lt;/a&gt;&lt;br&gt;
Mobile, Desktop, Web and Azure&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.microsoft.com/en-us/azure/architecture/reference-architectures/"&gt;Azure Reference …&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;This blog will help you choosing the right design and corresponding code, when you build microsoft web and services in 2017 and 2018.&lt;/p&gt;
&lt;h1&gt;Lists of Architectures and Implementations&lt;/h1&gt;
&lt;p&gt;Here are some lists that can be gives you several designs.  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.microsoft.com/net/learn/architecture"&gt;.NET Application Architecture Guidance&lt;/a&gt;&lt;br&gt;
Mobile, Desktop, Web and Azure&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.microsoft.com/en-us/azure/architecture/reference-architectures/"&gt;Azure Reference Architectures&lt;/a&gt;&lt;br&gt;
Big data, Web applications, N-tier applications, Virtual networks, Active Directory, VM workloads&lt;ul&gt;
&lt;li&gt;eBook (2017, 333 pages): &lt;a href="https://azure.microsoft.com/en-us/campaigns/cloud-application-architecture-guide/"&gt;Cloud Application Architecture Guide&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.microsoft.com/en-us/dotnet/standard/guidance-architecture"&gt;.NET Architecture Guidance&lt;/a&gt;&lt;br&gt;
eBooks and Code&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;WebApps and services&lt;/h2&gt;
&lt;p&gt;This blog only looks at webapps and webservices.  &lt;/p&gt;
&lt;h3&gt;Intro&lt;/h3&gt;
&lt;p&gt;Should you choose simple monolitic webs, scalable microservices or cost saving functions?&lt;br&gt;
Have a look at &lt;strong&gt;Architecture styles&lt;/strong&gt; below to quickly see what you get.&lt;br&gt;
Read the Fowler Article &lt;a href="https://martinfowler.com/articles/serverless.html"&gt;Serverless Architectures&lt;/a&gt; to understand when you continue from microservices to serverless functions.&lt;br&gt;
Follow the &lt;a href="https://docs.microsoft.com/en-us/azure/architecture/guide/design-principles/index"&gt;Design principles for Azure applications&lt;/a&gt;.&lt;br&gt;
Follow the &lt;a href="https://docs.microsoft.com/en-us/azure/security/security-best-practices-and-patterns"&gt;Azure security best practices and patterns&lt;/a&gt;.&lt;br&gt;
Review your design with &lt;a href="https://docs.microsoft.com/en-us/azure/architecture/checklist/resiliency"&gt;Resiliency checklist&lt;/a&gt;.  &lt;/p&gt;
&lt;h4&gt;Architecture from real life&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/DivanteLtd/vue-storefront"&gt;Vue Storefront&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;eBook (2018, 122 pages): &lt;a href="http://go.divante.co/microservices-architecture-ecommerce/"&gt;Microservices Architecture for eCommerce&lt;/a&gt;&lt;br&gt;
The book is not about Azure nor about C#. It is about architecting for cloud and PWA.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a href="https://docs.microsoft.com/en-us/azure/architecture/guide/architecture-styles/"&gt;Architecture styles&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;The drawings below gives you a fast overview of some web patterns you can use.  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;N-tier - Monolitic - The most simple - Good for PaaS&lt;br&gt;
&lt;img alt="N-tier" src="https://docs.microsoft.com/en-us/azure/architecture/guide/architecture-styles/images/n-tier-sketch.svg"&gt;&lt;/li&gt;
&lt;li&gt;Web-Queue-Worker - Good for PaaS&lt;br&gt;
&lt;img alt="Web-Queue-Worker" src="https://docs.microsoft.com/en-us/azure/architecture/guide/architecture-styles/images/web-queue-worker-sketch.svg"&gt;&lt;/li&gt;
&lt;li&gt;Microservices - Good for containers&lt;br&gt;
&lt;img alt="Microservices" src="https://docs.microsoft.com/en-us/azure/architecture/guide/architecture-styles/images/microservices-sketch.svg"&gt;&lt;/li&gt;
&lt;li&gt;CQRS - good for scaling data&lt;br&gt;
&lt;img alt="CQRS" src="https://docs.microsoft.com/en-us/azure/architecture/guide/architecture-styles/images/cqrs-sketch.svg"&gt;&lt;/li&gt;
&lt;li&gt;Event-driven - good for scaling services&lt;br&gt;
&lt;img alt="Event-driven" src="https://docs.microsoft.com/en-us/azure/architecture/guide/architecture-styles/images/event-driven-sketch.svg"&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://martinfowler.com/articles/serverless.html"&gt;Serverless functions&lt;/a&gt; - FaaS&lt;br&gt;
&lt;img alt="Serverless functions" src="https://martinfowler.com/articles/serverless/sps.svg"&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Cloud Design Patterns&lt;/h4&gt;
&lt;p&gt;&lt;a href="https://docs.microsoft.com/en-us/azure/architecture/patterns/"&gt;Cloud Design Patterns&lt;/a&gt; is a long list of patterns you can use to finetune your design of SW, Infrascructure, CI/CD pipline, Monitoring and Operations.  &lt;/p&gt;
&lt;h3&gt;Samples With implementation&lt;/h3&gt;
&lt;p&gt;If you want code to look at here is a list of samples with code.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;N-tier (monolith): &lt;a href="https://docs.microsoft.com/en-us/dotnet/standard/modern-web-apps-azure-architecture/"&gt;Architect modern web applications with ASP.NET Core and Azure&lt;/a&gt;&lt;br&gt;
How to select appropriate frontend and backend&lt;ul&gt;
&lt;li&gt;eBook core 3.1 (2020, 113 pages): &lt;a href="https://aka.ms/webappebook"&gt;Architecting Modern Web Applications with ASP.NET Core and Azure&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Code: &lt;a href="https://github.com/dotnet-architecture/eShopOnWeb"&gt;eShopOnWeb&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;Code: &lt;a href="https://github.com/ardalis/cleanarchitecture"&gt;CleanArchitecture&lt;/a&gt;
MVC and Razor Pages frontend, EF Code first&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;eBook (12-2019, 598 pages): &lt;a href="https://www.packtpub.com/product/asp-net-core-3-and-react/9781789950229"&gt;ASP.NET Core 3 and React&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;code: &lt;a href="https://github.com/PacktPublishing/ASP.NET-Core-3-and-React"&gt;PacktPublishing/ASP.NET-Core-3-and-React&lt;/a&gt;&lt;br&gt;
React frontend, WebAPI, Dapper, OIDConnect&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;eBook (11-2017, 542 pages): &lt;a href="https://www.packtpub.com/application-development/aspnet-core-2-and-angular-5?utm_source=GitHub&amp;amp;utm_medium=repository&amp;amp;utm_campaign=9781788293600"&gt;ASP.NET Core 2 and Angular 5&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;Code: &lt;a href="https://github.com/PacktPublishing/ASP.NET-Core-2-and-Angular-5"&gt;PacktPublishing/ASP.NET-Core-2-and-Angular-5&lt;/a&gt;&lt;br&gt;
Angular frontend, WebAPI, EF Code first, OIDConnect&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.microsoft.com/en-us/dotnet/standard/microservices-architecture/index"&gt;.NET Microservices. Architecture for Containerized .NET Applications&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;eBook(2018, 331 pages): &lt;a href="https://aka.ms/microservicesebook"&gt;.NET Microservices Architecture&lt;/a&gt;&lt;br&gt;
Using CQRS&lt;/li&gt;
&lt;li&gt;Code: &lt;a href="https://github.com/dotnet-architecture/eShopOnContainers"&gt;eShopOnContainers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Code: &lt;a href="https://github.com/dotnet-architecture/eShopOnAzure"&gt;eShopOnAzure&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Code: &lt;a href="https://github.com/dotnet-architecture/eShopOnContainersAI"&gt;eShopOnContainersAI&lt;/a&gt;&lt;br&gt;
&lt;img alt="eShopOnContainers" src="https://user-images.githubusercontent.com/1712635/38758862-d4b42498-3f27-11e8-8dad-db60b0fa05d3.png"&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.microsoft.com/en-us/azure/architecture/microservices/"&gt;Designing, building, and operating microservices on Azure with Kubernetes&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;Code: https://github.com/mspnp/microservices-reference-implementation  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dotnet-architecture/"&gt;More Code&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Samples Without implementation&lt;/h3&gt;
&lt;p&gt;If you just want the architecture design samples here is a list.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.microsoft.com/en-us/azure/architecture/reference-architectures/app-service-web-app/basic-web-app"&gt;Basic web application&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.microsoft.com/en-us/azure/architecture/reference-architectures/app-service-web-app/scalable-web-app"&gt;Scalable web application&lt;/a&gt;&lt;br&gt;
using WebApp, ApiApp, Queue, WebJob, Redis, SQL, Cosmos, Search, Blob, CDN&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.microsoft.com/en-us/azure/architecture/reference-architectures/app-service-web-app/multi-region"&gt;Multi-region web application&lt;/a&gt;&lt;br&gt;
as above, but extend with standby region and replication&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.microsoft.com/en-us/dotnet/standard/serverless-architecture/index"&gt;Serverless apps: Architecture, patterns, and Azure implementation&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;eBook (2018, 54 pages): &lt;a href="https://aka.ms/serverless-ebook"&gt;Serverless apps&lt;/a&gt; &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Azure Tutorials&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.microsoft.com/en-us/azure/app-service/#step-by-step-tutorials"&gt;Azure Web Apps - Tutorials&lt;/a&gt;&lt;br&gt;
WebApp with Secure access to SQL DB&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.microsoft.com/en-us/azure/azure-functions/functions-create-your-first-function-visual-studio"&gt;Create your first function in Azure using Visual Studio&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.microsoft.com/en-us/azure/guides/developer/azure-developer-guide"&gt;Get started guide for developers on Azure&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;eBook (33 pages): &lt;a href="https://www.microsoft.com/net/download/thank-you/azure-quick-start-ebook"&gt;Azure Quick Start Guide for .NET Developers&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;Transistion to cloud&lt;/h1&gt;
&lt;p&gt;If you need help to get started in cloud.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;eBook (2017, 156 pages): &lt;a href="https://azure.microsoft.com/en-us/resources/enterprise-cloud-strategy/"&gt;Enterprise Cloud Strategy&lt;/a&gt;&lt;br&gt;
Why go to cloud?&lt;/li&gt;
&lt;li&gt;eBook (2018, 120 pages): &lt;a href="https://azure.microsoft.com/en-us/resources/azure-strategy-and-implementation-guide/en-us/"&gt;Azure Strategy and Implementation Guide&lt;/a&gt;&lt;br&gt;
Governance, Architecture, Operations, Service Management&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.microsoft.com/en-us/azure/architecture/cloud-adoption-guide/"&gt;Cloud Adoption Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.microsoft.com/en-us/dotnet/standard/modernize-with-azure-and-containers/index"&gt;Modernize Existing .NET Applications With Azure Cloud and Windows Containers (2nd edition)&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;eBook (2018, 72 pages): &lt;a href="https://www.microsoft.com/net/download/thank-you/modernizing-existing-net-apps-ebook"&gt;Modernizing Existing .NET Applications&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Code: &lt;a href="https://github.com/dotnet-architecture/eShopModernizing"&gt;eShopModernizing&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.microsoft.com/en-us/azureessentials/Pivot/AzureEssentials/AzureInfrastructure/Watch"&gt;Azure Essentials&lt;/a&gt; - Intro to Azure&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Infrastructure&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;eBook (10-2017, 346 pages): &lt;a href="https://azure.microsoft.com/en-us/resources/azure-for-architects/en-us/"&gt;Azure for Architects&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Video course (2017): &lt;a href="https://www.youtube.com/watch?v=xJMbkZvuVO0&amp;amp;list=PL9XzOCngAkqs0Q8ZRdafnSYExKQurZrBY"&gt;Architecting Distributed Cloud Applications&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Architecture for providing &lt;a href="https://github.com/mspnp/reference-architectures/tree/master/dmz/secure-vnet-dmz"&gt;Azure services for on-premise and the Internet&lt;/a&gt;&lt;br&gt;
&lt;img alt="Azure services" src="https://camo.githubusercontent.com/f48de024cb1b395a4727b20e18fb14dc33d1bb53/68747470733a2f2f646f63732e6d6963726f736f66742e636f6d2f617a7572652f6172636869746563747572652f7265666572656e63652d617263686974656374757265732f646d7a2f696d616765732f646d7a2d7075626c69632e706e67"&gt;&lt;/li&gt;
&lt;li&gt;ARM &lt;a href="https://azure.microsoft.com/en-us/resources/templates/"&gt;Quickstart Templates&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;Git repo for &lt;a href="https://github.com/Azure/azure-quickstart-templates"&gt;quickstart-templates&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;AzureStack - Cloud on-premise&lt;/h3&gt;
&lt;p&gt;If you want to deploy to Azure-on-premise, then AzureStack is the Microsoft answer to OpenStack&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;eBook (2017, 54 pages): &lt;a href="https://azure.microsoft.com/en-us/resources/azure-stack-building-end-to-end-validation-environment/en-us/"&gt;Azure Stack: Building an end-to-end validation environment&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.microsoft.com/en-us/azure/azure-stack/"&gt;Azure Stack Operator - Tutorials&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;More resources&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://mva.microsoft.com/ebooks"&gt;Microsoft Virtual Academy eBooks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rasor/awesome-tables/blob/master/awesome-ebooks-training.md#ebooks"&gt;Rasor - eBooks&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;The past&lt;/h1&gt;
&lt;p&gt;Up until 2017 you could find guidance on&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://archive.codeplex.com/?s=patterns%20practices"&gt;CodePlex Archive&lt;/a&gt; - Pattern &amp;amp; Practices&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The End&lt;/p&gt;</content><category term="Develop"></category><category term="#microsoft"></category><category term="#architecture"></category><category term="#ebooks"></category><category term="#azure"></category><category term="#microservices"></category><category term="#faas"></category><category term="#react"></category><category term="#ng"></category><category term="#ef"></category><category term="#dapper"></category><category term="#vue"></category></entry><entry><title>Dependency management in Angular CLI - Lib: A-Frame</title><link href="https://rasor.github.io/dependency-management-in-angular-cli-lib-a-frame.html" rel="alternate"></link><published>2018-03-29T22:00:00+02:00</published><updated>2018-05-12T03:00:00+02:00</updated><author><name>rasor</name></author><id>tag:rasor.github.io,2018-03-29:/dependency-management-in-angular-cli-lib-a-frame.html</id><summary type="html">&lt;p&gt;Using 3rd party libraries in Angular 2+ takes a while to become friends with.
In this blog the Virtual Reality library &lt;a href="https://aframe.io/"&gt;A-Frame&lt;/a&gt; is what I want to use together with Angular CLI (Currently using Ng core: 5.2.0, Ng cli: 1.7.3).&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Code from the post can be …&lt;/em&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;Using 3rd party libraries in Angular 2+ takes a while to become friends with.
In this blog the Virtual Reality library &lt;a href="https://aframe.io/"&gt;A-Frame&lt;/a&gt; is what I want to use together with Angular CLI (Currently using Ng core: 5.2.0, Ng cli: 1.7.3).&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Code from the post can be found &lt;a href="https://github.com/rasor/ng-maze-vr-blank"&gt;here&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;h2&gt;Problem #1 - Angular by default expects to know all html elements&lt;/h2&gt;
&lt;p&gt;Given some A-Frame html (in this case separated in its own ng component) - aframe-vr.component.html having selector: 'aframe-vr' in class AframeVrComponent&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c"&gt;&amp;lt;!-- src/app/components/aframe-vr.component.html --&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;a-scene&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;a-box&lt;/span&gt; &lt;span class="na"&gt;position&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;-1 0.5 -4&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;scale&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;0.25 0.5 1&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;rotation&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;-45 0 0&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;#4CC3D9&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;a-box&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;a-plane&lt;/span&gt; &lt;span class="na"&gt;position&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;0 -1 -4&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;rotation&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;-45 0 0&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;width&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;15&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;height&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;80&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;#7BC8A4&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;a-plane&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;a-sky&lt;/span&gt; &lt;span class="na"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;#ECECEC&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;a-sky&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;a-scene&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Angular will complain:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gd"&gt;--- console ---&lt;/span&gt;
Uncaught Error: Template parse errors:
&amp;#39;a-box&amp;#39; is not a known element:
1. If &amp;#39;a-box&amp;#39; is an Angular component, then verify that it is part of this module.
2. If &amp;#39;a-box&amp;#39; is a Web Component then add &amp;#39;CUSTOM_ELEMENTS_SCHEMA&amp;#39; to the &amp;#39;@NgModule.schemas&amp;#39; of this component to suppress this message. (&amp;quot;&amp;lt;a-scene&amp;gt;
  [ERROR -&amp;gt;]&amp;lt;a-box position=&amp;quot;-1 0.5 -4&amp;quot; scale=&amp;quot;0.25 0.5 1&amp;quot; rotation=&amp;quot;-45 0 0&amp;quot; color=&amp;quot;#4CC3D9&amp;quot;&amp;gt;&amp;lt;/a-box&amp;gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Solution #1.1&lt;/h3&gt;
&lt;p&gt;And as it says there is an easy fix:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;// --- app.module.ts ---&lt;/span&gt;
&lt;span class="kr"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;CUSTOM_ELEMENTS_SCHEMA&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="nx"&gt;from&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;@angular/core&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;@NgModule&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="c1"&gt;// Allow elements not to be compiled by Angular &lt;/span&gt;
  &lt;span class="nx"&gt;schemas&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;CUSTOM_ELEMENTS_SCHEMA&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Problem #2 - You cannot load A-Frame in the main bundle&lt;/h2&gt;
&lt;p&gt;I want to load A-Frame just before the component from above.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;// --- app.module.ts ---&lt;/span&gt;
&lt;span class="c1"&gt;// Require aframe in main bundle before an aframe component is loaded&lt;/span&gt;
&lt;span class="kr"&gt;import&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;aframe&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kr"&gt;import&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;aframe-extras&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kr"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;AframeVrComponent&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="nx"&gt;from&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;./components/aframe-vr/aframe-vr.component&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;In other words - I want to load A-Frame in the main bundle.  &lt;/p&gt;
&lt;h3&gt;Result #2&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gd"&gt;--- console ---&lt;/span&gt;
zone.js:2803 Uncaught TypeError: Cannot assign to read only property &amp;#39;attributeChangedCallback&amp;#39; of object &amp;#39;[object HTMLElement]&amp;#39;
    at eval (zone.js:2803)
    at Array.forEach (&amp;lt;anonymous&amp;gt;)
    at HTMLDocument.document.registerElement (`zone.js`:2789)
    at module.exports.registerElement (`aframe-master.js`:74843)
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Sample &lt;a href="https://github.com/rasor/ng-maze-vr-blank/tree/69b38f4b340fe14d1676e2749f78061e24254ac8"&gt;ng-maze-vr-blank/commit 4&lt;/a&gt; demonstrates the problem.  &lt;/p&gt;
&lt;p&gt;If you view-page-source of the page you will see&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c"&gt;&amp;lt;!-- index.html --&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;body&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;app-root&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;app-root&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;inline.bundle.js&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;polyfills.bundle.js&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;styles.bundle.js&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;vendor.bundle.js&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;main.bundle.js&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;body&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;zone.js&lt;/code&gt; is stored in &lt;code&gt;polyfills.bundle.js&lt;/code&gt;,&lt;br&gt;
&lt;code&gt;aframe-master.js&lt;/code&gt; (and all other node_modules from package.json) is stored in &lt;code&gt;vendor.bundle.js&lt;/code&gt; and in&lt;br&gt;
&lt;code&gt;main.bundle.js&lt;/code&gt; the error is thrown when we try to load A-Frame with &lt;code&gt;import 'aframe';&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Tip: Do also install aframe types (so you can use it in TypeScript) by adding  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;// --- package.json ---&lt;/span&gt; 
  &lt;span class="l l-Scalar l-Scalar-Plain"&gt;&amp;quot;devDependencies&amp;quot;&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt; &lt;span class="p p-Indicator"&gt;{&lt;/span&gt;
    &lt;span class="s"&gt;&amp;quot;@types/aframe&amp;quot;&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;^0.7.0&amp;quot;&lt;/span&gt;&lt;span class="p p-Indicator"&gt;,&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;em&gt;More details on @types: &lt;a href="https://github.com/angular/angular-cli/wiki/stories-third-party-lib"&gt;3rd Party Library Installation&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;The blog ´&lt;a href="https://medium.com/@pitipon/a-frame-with-angular-setup-project-5797b2f2a03b"&gt;A-frame with Angular&lt;/a&gt;´ will tell you that you need to load A-Frame earlier - before zone.js. It suggests polyfills.js.  &lt;/p&gt;
&lt;h3&gt;Solution attempt #2.1&lt;/h3&gt;
&lt;p&gt;Angular CLI has a way to load libraries globally, as if they were in script tags.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Remove the aframe import from app.module.ts&lt;/li&gt;
&lt;li&gt;Add the A-Frame library to Angular Cli config&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;// --- .angular-cli.json ---&lt;/span&gt; 
  &lt;span class="l l-Scalar l-Scalar-Plain"&gt;&amp;quot;apps&amp;quot;&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt; &lt;span class="p p-Indicator"&gt;[&lt;/span&gt;
    &lt;span class="p p-Indicator"&gt;{&lt;/span&gt;
      &lt;span class="s"&gt;&amp;quot;scripts&amp;quot;&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt; &lt;span class="p p-Indicator"&gt;[&lt;/span&gt;
        &lt;span class="s"&gt;&amp;quot;../node_modules/aframe/dist/aframe-master.js&amp;quot;&lt;/span&gt;&lt;span class="p p-Indicator"&gt;,&lt;/span&gt;
        &lt;span class="s"&gt;&amp;quot;../node_modules/aframe-extras/dist/aframe-extras.min.js&amp;quot;&lt;/span&gt;
      &lt;span class="p p-Indicator"&gt;],&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Result #2.1&lt;/h3&gt;
&lt;p&gt;If you view-page-source of the page you will see&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c"&gt;&amp;lt;!-- index.html --&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;body&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;app-root&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;app-root&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;inline.bundle.js&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;polyfills.bundle.js&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;styles.bundle.js&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;scripts.bundle.js&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;vendor.bundle.js&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;main.bundle.js&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;body&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;New is ´scripts.bundle.js´. &lt;/p&gt;
&lt;p&gt;But still we have an error:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gd"&gt;--- console ---&lt;/span&gt;
zone.js:2803 Uncaught TypeError: Cannot assign to read only property &amp;#39;attributeChangedCallback&amp;#39; of object &amp;#39;[object HTMLElement]&amp;#39;
    at eval (zone.js:2803)
    at Array.forEach (&amp;lt;anonymous&amp;gt;)
    at HTMLDocument.document.registerElement (zone.js:2789)
    at module.exports.registerElement (scripts.bundle.js:74843)
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;zone.js&lt;/code&gt; is stored in &lt;code&gt;polyfills.bundle.js&lt;/code&gt;,&lt;br&gt;
&lt;code&gt;aframe-master.js&lt;/code&gt; is stored and loaded in &lt;code&gt;scripts.bundle.js&lt;/code&gt; and&lt;br&gt;
all other node_modules from package.json is stored in &lt;code&gt;vendor.bundle.js&lt;/code&gt;.&lt;br&gt;
The error is thrown when we try to auto-load A-Frame inside &lt;code&gt;scripts.bundle.js&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The common pattern is again that A-Frame is loaded after zone.js.&lt;/p&gt;
&lt;p&gt;Sample &lt;a href="https://github.com/rasor/ng-maze-vr-blank/tree/cd0fd787cb4aa9dcc287925e2ddd9310e7b837ab"&gt;ng-maze-vr-blank/commit 5&lt;/a&gt; demonstrates the error.  &lt;/p&gt;
&lt;h3&gt;Solution attempt #2.2&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;scripts.bundle.js&lt;/code&gt; is loaded after &lt;code&gt;polyfills.bundle.js&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;As the blog ´&lt;a href="https://medium.com/@pitipon/a-frame-with-angular-setup-project-5797b2f2a03b"&gt;A-frame with Angular&lt;/a&gt;´ told you, you needed to load A-Frame before zone.js.  &lt;/p&gt;
&lt;p&gt;So this time we go one more level up to polyfills.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Remove the scripts in &lt;code&gt;.angular-cli.json&lt;/code&gt; (or just rename the scripts property)&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;// --- .angular-cli.json ---&lt;/span&gt; 
  &lt;span class="l l-Scalar l-Scalar-Plain"&gt;&amp;quot;apps&amp;quot;&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt; &lt;span class="p p-Indicator"&gt;[&lt;/span&gt;
    &lt;span class="p p-Indicator"&gt;{&lt;/span&gt;
      &lt;span class="s"&gt;&amp;quot;someUnusedScripts&amp;quot;&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt; &lt;span class="p p-Indicator"&gt;[&lt;/span&gt;
        &lt;span class="s"&gt;&amp;quot;../node_modules/aframe/dist/aframe-master.js&amp;quot;&lt;/span&gt;&lt;span class="p p-Indicator"&gt;,&lt;/span&gt;
        &lt;span class="s"&gt;&amp;quot;../node_modules/aframe-extras/dist/aframe-extras.min.js&amp;quot;&lt;/span&gt;
      &lt;span class="p p-Indicator"&gt;],&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Add aframe to polyfills before zone.js&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;// --- src/polyfills.ts ---&lt;/span&gt;
&lt;span class="c1"&gt;// Load aframe before zone.js&lt;/span&gt;
&lt;span class="kr"&gt;import&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;aframe&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kr"&gt;import&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;aframe-extras&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kr"&gt;import&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;zone.js/dist/zone&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  &lt;span class="c1"&gt;// Included with Angular CLI.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Result #2.2&lt;/h3&gt;
&lt;p&gt;Now A-Frame is loaded in &lt;code&gt;polyfills.bundle.js&lt;/code&gt; before zone.js and A-Frame content is rendered  &lt;/p&gt;
&lt;p&gt;&lt;img alt="Aframe loaded from polyfills.bundle.js" src="img/2018/2018-03-29-Ng-cli.PNG"&gt;&lt;/p&gt;
&lt;p&gt;Sample &lt;a href="https://github.com/rasor/ng-maze-vr-blank/tree/d15d7271277ba6b8bc5c16fc35bd06d8497569f2"&gt;ng-maze-vr-blank/commit 6&lt;/a&gt; shows the result.  &lt;/p&gt;
&lt;h2&gt;Problem #3 - Some A-Frame extras doesn't render&lt;/h2&gt;
&lt;p&gt;If you want to replace the floor &lt;code&gt;&amp;lt;a-plane&amp;gt;&lt;/code&gt; with the floor from A-Frame extras &lt;code&gt;&amp;lt;a-grid&amp;gt;&lt;/code&gt; you can't see it. This happens with following change:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c"&gt;&amp;lt;!-- src/app/components/aframe-vr.component.html --&amp;gt;&lt;/span&gt;
  &lt;span class="c"&gt;&amp;lt;!-- &amp;lt;a-plane position=&amp;quot;0 -1 -4&amp;quot; rotation=&amp;quot;-45 0 0&amp;quot; width=&amp;quot;15&amp;quot; height=&amp;quot;80&amp;quot; color=&amp;quot;#7BC8A4&amp;quot;&amp;gt;&amp;lt;/a-plane&amp;gt; --&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;a-grid&lt;/span&gt; &lt;span class="na"&gt;position&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;0 -1 -4&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;rotation&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;-90 0 0&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;static-body&lt;/span&gt; &lt;span class="na"&gt;width&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;15&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;height&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;80&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;#7BC8A4&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;a-grid&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Solution #3&lt;/h3&gt;
&lt;p&gt;Now we will move loading of A-Frame even further up from polyfills to the &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt;  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Remove A-Frame from polyfills&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;// --- src/polyfills.ts ---&lt;/span&gt;
&lt;span class="c1"&gt;// Load aframe before zone.js&lt;/span&gt;
&lt;span class="c1"&gt;//import &amp;#39;aframe&amp;#39;;&lt;/span&gt;
&lt;span class="c1"&gt;//import &amp;#39;aframe-extras&amp;#39;;&lt;/span&gt;
&lt;span class="kr"&gt;import&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;zone.js/dist/zone&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  &lt;span class="c1"&gt;// Included with Angular CLI.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;In Ng Cli config copy A-Frame dist to assets  &lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;// --- .angular-cli.json ---&lt;/span&gt; 
  &lt;span class="l l-Scalar l-Scalar-Plain"&gt;&amp;quot;apps&amp;quot;&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt; &lt;span class="p p-Indicator"&gt;[&lt;/span&gt;
    &lt;span class="p p-Indicator"&gt;{&lt;/span&gt;
      &lt;span class="s"&gt;&amp;quot;assets&amp;quot;&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt; &lt;span class="p p-Indicator"&gt;[&lt;/span&gt;
        &lt;span class="p p-Indicator"&gt;{&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;glob&amp;quot;&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;**/*&amp;quot;&lt;/span&gt;&lt;span class="p p-Indicator"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;input&amp;quot;&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;../node_modules/aframe/dist&amp;quot;&lt;/span&gt;&lt;span class="p p-Indicator"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;output&amp;quot;&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;./assets/lib/aframe/dist/&amp;quot;&lt;/span&gt; &lt;span class="p p-Indicator"&gt;},&lt;/span&gt;
        &lt;span class="p p-Indicator"&gt;{&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;glob&amp;quot;&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;**/*&amp;quot;&lt;/span&gt;&lt;span class="p p-Indicator"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;input&amp;quot;&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;../node_modules/aframe-extras/dist&amp;quot;&lt;/span&gt;&lt;span class="p p-Indicator"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;output&amp;quot;&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;./assets/lib/aframe-extras/dist/&amp;quot;&lt;/span&gt; &lt;span class="p p-Indicator"&gt;}&lt;/span&gt;
      &lt;span class="p p-Indicator"&gt;],&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;em&gt;Link: Copy assets via &lt;a href="https://github.com/angular/angular-cli/wiki/stories-asset-configuration"&gt;angular-cli&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;In index.html head load A-Frame + extras  &lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c"&gt;&amp;lt;!-- src/index.html --&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;head&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt; &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;assets/lib/aframe/dist/aframe-master.js&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt; &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;assets/lib/aframe-extras/dist/aframe-extras.min.js&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;head&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Result #3 - Commit 7&lt;/h3&gt;
&lt;p&gt;Now A-Frame is loaded already in the &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; before &lt;code&gt;polyfills.bundle.js&lt;/code&gt; and also &lt;code&gt;&amp;lt;a-grid&amp;gt;&lt;/code&gt; is rendered  &lt;/p&gt;
&lt;p&gt;&lt;img alt="Aframe loaded from head" src="img/2018/2018-03-29-Ng-cli2.PNG"&gt;&lt;/p&gt;
&lt;p&gt;Sample &lt;a href="https://github.com/rasor/ng-maze-vr-blank/tree/4f666ce66cf74e211ee06df0f019b528723c2398"&gt;ng-maze-vr-blank/commit 7&lt;/a&gt; shows the result.  &lt;/p&gt;
&lt;h2&gt;Problem #4 - When using &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; for loading, then @types are not loaded and you cannot use the types in code&lt;/h2&gt;
&lt;p&gt;Having the libraries loaded now I want to use them in code. Example:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kr"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;VrBox&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;position&lt;/span&gt;: &lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="kr"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;pos&lt;/span&gt;: &lt;span class="kt"&gt;AFrame.Coordinate&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;position&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;AFRAME&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;utils&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;coordinates&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stringify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;pos&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;WebPack complains:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;error TS2552: Cannot find name &amp;#39;AFRAME&amp;#39;. Did you mean &amp;#39;frames&amp;#39;&lt;/span&gt;
&lt;span class="err"&gt;error TS2503: Cannot find namespace &amp;#39;AFrame&amp;#39;.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Solution #4a&lt;/h3&gt;
&lt;p&gt;If you did not have the @types/aframe you could define the types yourself&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kr"&gt;declare&lt;/span&gt; &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;AFRAME&lt;/span&gt;: &lt;span class="kt"&gt;any&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
&lt;span class="kr"&gt;declare&lt;/span&gt; &lt;span class="nx"&gt;namespace&lt;/span&gt; &lt;span class="nx"&gt;AFrame&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kr"&gt;interface&lt;/span&gt; &lt;span class="nx"&gt;Coordinate&lt;/span&gt;&lt;span class="p"&gt;{}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; 
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Solution #4b&lt;/h3&gt;
&lt;p&gt;But since you have the @types/aframe you instead just can import them&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;// src/app/components/aframe-vr.component.ts&lt;/span&gt;
&lt;span class="c1"&gt;/// &amp;lt;reference types=&amp;quot;aframe&amp;quot; /&amp;gt;&lt;/span&gt;
&lt;span class="c1"&gt;// Above ref is needed when aframe is loaded from &amp;lt;script&amp;gt; instead of&lt;/span&gt;
&lt;span class="c1"&gt;// import &amp;#39;aframe&amp;#39;;&lt;/span&gt;
&lt;span class="c1"&gt;// It will use the types from @types/aframe&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Result #4 - Commit 10&lt;/h3&gt;
&lt;p&gt;Now we can use A-Frame library in our code.&lt;/p&gt;
&lt;p&gt;Sample &lt;a href="https://github.com/rasor/ng-maze-vr-blank/tree/7535b3cca27f3354b061deff21005c863907b06e"&gt;ng-maze-vr-blank/commit 10&lt;/a&gt; shows the result.  &lt;/p&gt;
&lt;h2&gt;Problem #5 - A-Frame doen't work with Angular binding&lt;/h2&gt;
&lt;p&gt;Next up is to use Angular binding. In this case I want to create &lt;code&gt;&amp;lt;a-box&amp;gt;&lt;/code&gt;'s from a list of data.&lt;br&gt;
Looping through the list with &lt;code&gt;*ngFor&lt;/code&gt; is not a problem, but setting the position proporty does not work.  &lt;/p&gt;
&lt;p&gt;In the view a &lt;code&gt;div&lt;/code&gt; on top of A-Frame demonstrates how &lt;code&gt;*ngFor&lt;/code&gt; sets a property.&lt;br&gt;
But in the &lt;code&gt;a-scene&lt;/code&gt; the same way of binding does not work. The created &lt;code&gt;&amp;lt;a-box&amp;gt;&lt;/code&gt; is put in position "0 0 0". You have to go backwards to see the box. It is behind you.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c"&gt;&amp;lt;!-- src/app/components/aframe-vr.component.html --&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;box&amp;quot;&lt;/span&gt; &lt;span class="err"&gt;*&lt;/span&gt;&lt;span class="na"&gt;ngFor&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;let b of vrBoxes&amp;quot;&lt;/span&gt; &lt;span class="err"&gt;[&lt;/span&gt;&lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="err"&gt;]=&amp;quot;&lt;/span&gt;&lt;span class="na"&gt;b&lt;/span&gt;&lt;span class="err"&gt;.&lt;/span&gt;&lt;span class="na"&gt;position&lt;/span&gt;&lt;span class="err"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;I am a div {{b.position}}&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;a-scene&lt;/span&gt; &lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="na"&gt;scene&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="c"&gt;&amp;lt;!-- &amp;lt;a-box position=&amp;quot;-1 0.5 -4&amp;quot; scale=&amp;quot;0.25 0.5 1&amp;quot; rotation=&amp;quot;-45 0 0&amp;quot; color=&amp;quot;#4CC3D9&amp;quot;&amp;gt;&amp;lt;/a-box&amp;gt; --&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;a-box&lt;/span&gt; &lt;span class="err"&gt;*&lt;/span&gt;&lt;span class="na"&gt;ngFor&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;let b of vrBoxes&amp;quot;&lt;/span&gt; &lt;span class="err"&gt;[&lt;/span&gt;&lt;span class="na"&gt;position&lt;/span&gt;&lt;span class="err"&gt;]=&amp;quot;&lt;/span&gt;&lt;span class="na"&gt;b&lt;/span&gt;&lt;span class="err"&gt;.&lt;/span&gt;&lt;span class="na"&gt;position&lt;/span&gt;&lt;span class="err"&gt;&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;scale&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;0.25 0.5 1&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;rotation&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;-45 0 0&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;#4CC3D9&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;a-box&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;a-scene&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="Angular binding not working with Aframe" src="img/2018/2018-03-29-Ng-cli3.PNG"&gt;  &lt;/p&gt;
&lt;p&gt;Sample &lt;a href="https://github.com/rasor/ng-maze-vr-blank/tree/f2933d4d324036c99df2739fb266c7cf5af21dea"&gt;ng-maze-vr-blank/commit 11&lt;/a&gt; demonstrates this situation.  &lt;/p&gt;
&lt;h3&gt;So what are the options?&lt;/h3&gt;
&lt;p&gt;Initially I picked options like these:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Create an Angular wrapper component.&lt;br&gt;
&lt;a href="https://github.com/zefoy/ngx-ace-wrapper"&gt;zefoy/ngx-ace-wrapper&lt;/a&gt; is an example of a wrapper.&lt;br&gt;
ZEF has a handfull of &lt;a href="https://github.com/zefoy?utf8=%E2%9C%93&amp;amp;q=wrapper&amp;amp;type=&amp;amp;language="&gt;other wrappers&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;Publish to npm: &lt;a href="https://medium.com/@nikolasleblanc/building-an-angular-4-component-library-with-the-angular-cli-and-ng-packagr-53b2ade0701e"&gt;Building an Angular 4 Component Library with the Angular CLI and ng-packagr&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Create a Web Component wrapper component&lt;br&gt;
&lt;a href="https://www.joshmorony.com/publishing-a-web-component-using-stencil-and-using-it-anywhere/"&gt;Publishing a Web Component Using Stencil (And Using It Anywhere)&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;Build and use a Web Component from Angular: &lt;a href="https://github.com/seveves/angular-stencil"&gt;seveves/angular-stencil&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The first attempt I did was to look at the &lt;a href="https://github.com/seveves/angular-stencil"&gt;seveves/angular-stencil&lt;/a&gt; repo and tried to see if I could bind A-Frame in a Stencil web component.
That attempt failed. Repo is here: &lt;a href="https://github.com/rasor/stencil-aframe"&gt;rasor/stencil-aframe&lt;/a&gt;.&lt;br&gt;
Notice: In that repo I am using the latest version of A-Frame: 0.8.0.&lt;/p&gt;
&lt;p&gt;Angular components builds on the web components-way of doing things - e.g. using ShaowDom. So I think, when binding with web components does not work, then I should not expect to getting it to work in Angular either. &lt;/p&gt;
&lt;h3&gt;So what are the options, when ShadowDom does not play well with A-Frame?&lt;/h3&gt;
&lt;p&gt;Well &lt;a href="https://github.com/trusktr"&gt;trusktr&lt;/a&gt; actually found a way &lt;a href="https://github.com/aframevr/aframe/issues/1492#issuecomment-324124434"&gt;to deal with Shadow DOM&lt;/a&gt;, which he find easy, but to me is protocol workaround - a low level protocol change, which should not be necessary to twist as library a user.  &lt;/p&gt;
&lt;h3&gt;So when I don't want to make ShadowDOM workaround, then what are the options?&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Use &lt;a href="https://github.com/trusktr"&gt;trusktr&lt;/a&gt;s &lt;a href="https://infamous.io/docs/index.html"&gt;Infamous&lt;/a&gt; library (&lt;a href="https://github.com/trusktr/infamous"&gt;repo here&lt;/a&gt;) instead of A-Frame. Infamous supports Web Components (and Angular).&lt;/li&gt;
&lt;li&gt;A-Frames creator &lt;a href="https://github.com/ngokevin"&gt;ngokevin&lt;/a&gt; recommends using NunJucks/Static Templating:&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;I currently recommend using vanilla A-Frame and &lt;a href="https://www.npmjs.com/package/aframe-state-component"&gt;aframe-state-component&lt;/a&gt; with &lt;a href="https://mozilla.github.io/nunjucks/"&gt;static templating&lt;/a&gt; over &lt;a href="https://github.com/ngokevin/aframe-react"&gt;aframe-react&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;To be continued...&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;Links&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Declare lib + plugin and load globally in &lt;a href="https://github.com/angular/angular-cli/wiki/stories-global-scripts"&gt;angular-cli&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;More on zone.js: &lt;a href="https://medium.com/@MertzAlertz/what-the-hell-is-zone-js-and-why-is-it-in-my-angular-2-6ff28bcf943e"&gt;What the hell is Zone.js and why is it in my Angular 2?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Lots of other &lt;a href="https://github.com/angular/angular-cli/wiki/stories"&gt;Angular CLI tricks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/angular/angular-cli/wiki/angular-cli"&gt;Angular CLI Config Schema&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.typescriptlang.org/docs/handbook/compiler-options.html"&gt;TypeScript Compiler Options&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The End&lt;/p&gt;</content><category term="Develop"></category><category term="#ng"></category><category term="#aframe"></category><category term="#webpack"></category><category term="#vr"></category></entry><entry><title>D'n'd development with RPA, hpaPaaS, mBaaS and ESB (iPaaS)</title><link href="https://rasor.github.io/dnd-development-with-rpa-hpapaas-mbaas-and-esb-ipaas.html" rel="alternate"></link><published>2018-01-11T20:00:00+01:00</published><updated>2019-02-20T15:30:00+01:00</updated><author><name>rasor</name></author><id>tag:rasor.github.io,2018-01-11:/dnd-development-with-rpa-hpapaas-mbaas-and-esb-ipaas.html</id><summary type="html">&lt;h1&gt;Low-Code&lt;/h1&gt;
&lt;p&gt;Development using Drag'n'drop (&lt;a href="https://en.wikipedia.org/wiki/Low-code_development_platforms"&gt;Low-code development platforms - LCDP&lt;/a&gt;)
 is also taking a share in development pipelines with test/prod environments and version control.&lt;/p&gt;
&lt;p&gt;Some of the areas are&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Automated Business UI Process development - &lt;a href="https://en.wikipedia.org/wiki/Robotic_process_automation"&gt;RPA&lt;/a&gt;. Automated frontend using existing UI as data transfer channel are created in this category. &lt;/li&gt;
&lt;li&gt;Application development …&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;h1&gt;Low-Code&lt;/h1&gt;
&lt;p&gt;Development using Drag'n'drop (&lt;a href="https://en.wikipedia.org/wiki/Low-code_development_platforms"&gt;Low-code development platforms - LCDP&lt;/a&gt;)
 is also taking a share in development pipelines with test/prod environments and version control.&lt;/p&gt;
&lt;p&gt;Some of the areas are&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Automated Business UI Process development - &lt;a href="https://en.wikipedia.org/wiki/Robotic_process_automation"&gt;RPA&lt;/a&gt;. Automated frontend using existing UI as data transfer channel are created in this category. &lt;/li&gt;
&lt;li&gt;Application development - &lt;a href="https://en.wikipedia.org/wiki/Platform_as_a_service"&gt;hpaPaaS&lt;/a&gt;. Apps, Webapps (frontends) and APIs (backends) are created in this category.&lt;/li&gt;
&lt;li&gt;Application APIs - &lt;a href="https://en.wikipedia.org/wiki/Mobile_backend_as_a_service"&gt;mBaaS&lt;/a&gt;. This is backend exposing APIs to receive/produce data.&lt;/li&gt;
&lt;li&gt;Application integration - &lt;a href="https://en.wikipedia.org/wiki/Enterprise_service_bus"&gt;ESB / iPaaS&lt;/a&gt;. This is middleware/backend using and exposing APIs to transfer data (B2B).&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;1. RPA&lt;/h2&gt;
&lt;p&gt;Top RPA players are&lt;br&gt;
&lt;a href="https://forum.uipath.com/t/uipath-vs-other-rpa-vendor/1748/9"&gt;&lt;img alt="Forrester RPA" src="https://discourse-cdn-sjc1.com/business2/uploads/uipath/optimized/2X/6/640e7c77d0e13254150952ee7d6ed66959201abf_1_577x500.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.automationanywhere.com/"&gt;Automation Anywhere&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.blueprism.com/"&gt;Blue Prism&lt;/a&gt; - C#&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.uipath.com/"&gt;UiPath&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;2. hpaPaaS&lt;/h2&gt;
&lt;p&gt;In 2017 Microsoft Access RAD tools are called &lt;strong&gt;High Productivity Application Platform as a Service&lt;/strong&gt; (hpaPaaS)&lt;br&gt;
&lt;a href="https://www.mendix.com/resources/gartner-high-productivity-apaas/"&gt;&lt;img alt="gartner hpaPaaS tools" src="https://images.mendix.com/wp-content/uploads/Gartner-High-Productivity-aPaaS-Magic-Quadrant.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;In the top quadrant there are only 3 players&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.salesforce.com/"&gt;Salesforce&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.mendix.com/"&gt;Mendix&lt;/a&gt; - C# + Java&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.outsystems.com/"&gt;OutSystems&lt;/a&gt; - C#&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=hFwiZYxQboQ"&gt;Microsoft Azure Mobile Apps or Power Apps (+ Flow + Logic Apps) + Functions&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Download the &lt;a href="https://www.mendix.com/resources/gartner-high-productivity-apaas/"&gt;Gartner Quadrant&lt;/a&gt; to learn more.&lt;br&gt;
&lt;em&gt;According to Gartner, by 2020, at least 50 percent of all new business applications will be created with high-productivity toolsets&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;And compare features and integrations&lt;br&gt;
&lt;a href="https://www.getapp.com/it-management-software/a/mendix-business-agility-suite/compare/mule-esb-vs-outsystems-platform-vs-salesforce/"&gt;&lt;img alt="compare features and integrations" src="img/2018/2018-01-11-hpaPaaS1.PNG"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;3. API&lt;/h2&gt;
&lt;p&gt;To create IOT or mobile backends there are API tools&lt;br&gt;
&lt;a href="https://www.mulesoft.com/ty/report/gartner-magic-quadrant-api"&gt;&lt;img alt="gartner API tools" src="https://www.gartner.com/resources/277600/277632/277632_0001.png;wa4459b121dae44439?reprintKey=1-3KZGFI4"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.mulesoft.com/platform/api/anypoint-designer"&gt;MuleSoft Anypoint API Designer&lt;/a&gt; - Java&lt;/li&gt;
&lt;li&gt;&lt;a href="https://apigee.com/api-management/"&gt;Apigee&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.ca.com/us/products/ca-live-api-creator.html"&gt;CA Live API Creator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://azure.microsoft.com/en-us/services/functions/"&gt;Microsoft Azure Functions or API Apps or Mobile Services&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;4. ESB / iPaaS / MaaS&lt;/h2&gt;
&lt;p&gt;To tie applications together there are integration tools also called ESBs&lt;br&gt;
&lt;a href="http://info.jitterbit.com/Adwords-Gartner-Magic-Quadrant-iPaaS-2017-Report.html"&gt;&lt;img alt="gartner iPaaS tools" src="https://www.gartner.com/resources/304000/304070/304070_0001.png?reprintKey=1-3ZKX04V"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.informatica.com"&gt;Informatica&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://boomi.com"&gt;Dell Boomi&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.mulesoft.com/platform/soa/mule-esb-open-source-esb"&gt;MuleSoft ESB&lt;/a&gt; - Java&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=hFwiZYxQboQ"&gt;Microsoft Flow + Azure Logic Apps + Azure Service Bus&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.neuronesb.com/#"&gt;Neuron ESB&lt;/a&gt; - C#&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;No-Code&lt;/h1&gt;
&lt;p&gt;Some tools offers &lt;a href="https://en.wikipedia.org/wiki/No-code_development_platform"&gt;No-code&lt;/a&gt; development at all.  &lt;/p&gt;
&lt;p&gt;Product Hunt highlights a few of them &lt;a href="https://www.producthunt.com/newsletter/2538"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;Links&lt;/h1&gt;
&lt;h2&gt;Design Sprint&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://medium.com/@dhruvghulati/google-ventures-5-day-design-sprint-1b3a07c93864"&gt;Google Ventures 5 Day Design Sprint – Dhruv Ghulati – Medium&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.gv.com/sprint/"&gt;The Design Sprint — GV&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Microsoft Links&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=f6ysuQUZ2wQ"&gt;Microsoft Flow: Multi-Step Approvals&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Microsoft Flow resources&lt;br&gt;
&lt;a href="https://youtu.be/hFwiZYxQboQ?t=34m43s"&gt;&lt;img alt="Microsoft Flow resources" src="img/2018/2018-01-11-hpaPaaS2.PNG"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Microsoft Messaging&lt;br&gt;
&lt;a href="https://www.servicebus360.com/blogs/azure-service-bus-event-hub-event-grid-one-choose/"&gt;&lt;img alt="Microsoft Messaging" src="https://www.servicebus360.com/wp-content/uploads/2017/08/azure-service-bus-event-hub-event-grid.jpg"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Other Links&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Microservices, SOA, and APIs: Friends or enemies?&lt;br&gt;
&lt;a href="https://www.ibm.com/developerworks/websphere/library/techarticles/1601_clark-trs/1601_clark.html"&gt;&lt;img alt="Microservices, SOA, and APIs" src="https://www.ibm.com/developerworks/websphere/library/techarticles/1601_clark-trs/images/figure8.jpg"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The End&lt;/p&gt;</content><category term="Develop"></category><category term="#hpapaas"></category><category term="#rpa"></category><category term="#mbaas"></category><category term="#ipaas"></category><category term="#esb"></category><category term="#designsprint"></category><category term="#nocode"></category></entry><entry><title>cUrl CLI on Windows</title><link href="https://rasor.github.io/curl-cli-on-windows.html" rel="alternate"></link><published>2017-12-11T21:00:00+01:00</published><updated>2018-01-05T23:00:00+01:00</updated><author><name>rasor</name></author><id>tag:rasor.github.io,2017-12-11:/curl-cli-on-windows.html</id><summary type="html">&lt;p&gt;cUrl on Windows is not trouble-free to get working, when posting to SSL domains.&lt;/p&gt;
&lt;p&gt;Here is howto:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Download latest &lt;a href="https://curl.haxx.se/dlwiz/?type=bin&amp;amp;os=Win64&amp;amp;flav=-&amp;amp;ver=*&amp;amp;cpu=x86_64"&gt;windows version of cUrl&lt;/a&gt;. I used &lt;a href="https://dl.uxnr.de/build/curl/curl_winssl_msys2_mingw64_stc/curl-7.57.0/curl-7.57.0.zip"&gt;curl-7.57.0&lt;/a&gt;, which is SSL and SSH enabled.&lt;/li&gt;
&lt;li&gt;Extract the files from the zip file to &lt;code&gt;C:\Program Files\curl-7.57.0\&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Add to …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;cUrl on Windows is not trouble-free to get working, when posting to SSL domains.&lt;/p&gt;
&lt;p&gt;Here is howto:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Download latest &lt;a href="https://curl.haxx.se/dlwiz/?type=bin&amp;amp;os=Win64&amp;amp;flav=-&amp;amp;ver=*&amp;amp;cpu=x86_64"&gt;windows version of cUrl&lt;/a&gt;. I used &lt;a href="https://dl.uxnr.de/build/curl/curl_winssl_msys2_mingw64_stc/curl-7.57.0/curl-7.57.0.zip"&gt;curl-7.57.0&lt;/a&gt;, which is SSL and SSH enabled.&lt;/li&gt;
&lt;li&gt;Extract the files from the zip file to &lt;code&gt;C:\Program Files\curl-7.57.0\&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Add to enviroment PATH (running as admin): &lt;code&gt;C:\Program Files\curl-7.57.0\src&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So now you can call the CLI from a prompt&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;curl --version

&lt;span class="c1"&gt;# Response:&lt;/span&gt;
&lt;span class="c1"&gt;# curl 7.57.0 (x86_64-w64-mingw32) libcurl/7.57.0 OpenSSL/1.0.2h (WinSSL) zlib/1.2.8 WinIDN libssh2/1.7.0_DEV&lt;/span&gt;
&lt;span class="c1"&gt;# Release-Date: 2017-11-30&lt;/span&gt;
&lt;span class="c1"&gt;# Protocols: dict file ftp ftps gopher http https imap imaps ldap ldaps pop3 pop3s rtsp scp sftp smtp smtps telnet tftp&lt;/span&gt;
&lt;span class="c1"&gt;#Features: AsynchDNS IDN IPv6 Largefile SSPI Kerberos SPNEGO NTLM SSL libz TLS-SRP HTTPS-proxy MultiSSL&lt;/span&gt;

&lt;span class="c1"&gt;# Call an API:&lt;/span&gt;
curl -X GET &lt;span class="s2"&gt;&amp;quot;http://petstore.swagger.io/v2/pet/1&amp;quot;&lt;/span&gt; -H &lt;span class="s2"&gt;&amp;quot;accept: application/json&amp;quot;&lt;/span&gt;

&lt;span class="c1"&gt;# Response:&lt;/span&gt;
&lt;span class="c1"&gt;# {&amp;quot;id&amp;quot;:1,&amp;quot;category&amp;quot;:{&amp;quot;id&amp;quot;:1,&amp;quot;name&amp;quot;:&amp;quot;string&amp;quot;},&amp;quot;name&amp;quot;:&amp;quot;1&amp;quot;,&amp;quot;photoUrls&amp;quot;:[&amp;quot;string&amp;quot;],&amp;quot;tags&amp;quot;:[{&amp;quot;id&amp;quot;:1,&amp;quot;name&amp;quot;:&amp;quot;string&amp;quot;}],&amp;quot;status&amp;quot;:&amp;quot;1&amp;quot;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;But if you try an SSL endpoint you get an error&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;curl -X GET &lt;span class="s2"&gt;&amp;quot;https://hacker-news.firebaseio.com/v0/item/8863.json?print=pretty&amp;quot;&lt;/span&gt;

&lt;span class="c1"&gt;# Response:&lt;/span&gt;
&lt;span class="c1"&gt;# curl: (60) SSL certificate problem: unable to get local issuer certificate&lt;/span&gt;
&lt;span class="c1"&gt;# More details here: https://curl.haxx.se/docs/sslcerts.html&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The reason seems to be that &lt;a href="https://laracasts.com/discuss/channels/general-discussion/curl-error-60-ssl-certificate-problem-unable-to-get-local-issuer-certificate/replies/95548"&gt;cUrl can't access Windows's certificate store&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;HowTo fix curl: (60) SSL certificate problem:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Let curl read allowed SSL providers from file &lt;a href="https://curl.haxx.se/docs/caextract.html"&gt;cacert.pem&lt;/a&gt;. Put the file in the &lt;code&gt;\src\&lt;/code&gt; folder.&lt;/li&gt;
&lt;li&gt;Create &lt;a href="https://curl.haxx.se/docs/sslcerts.html"&gt;new enviroment variable&lt;/a&gt; (running as admin) &lt;code&gt;set CURL_CA_BUNDLE=C:\Program Files\curl-7.57.0\src\cacert.pem&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Refresh environment: &lt;code&gt;refreshenv&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;curl -X GET &lt;span class="s2"&gt;&amp;quot;https://hacker-news.firebaseio.com/v0/item/8863.json?print=pretty&amp;quot;&lt;/span&gt;

&lt;span class="c1"&gt;# Response:&lt;/span&gt;
&lt;span class="c1"&gt;# {&lt;/span&gt;
&lt;span class="c1"&gt;#    &amp;quot;by&amp;quot; : &amp;quot;dhouston&amp;quot;,&lt;/span&gt;
&lt;span class="c1"&gt;#    &amp;quot;descendants&amp;quot; : 71,&lt;/span&gt;
&lt;span class="c1"&gt;#    &amp;quot;id&amp;quot; : 8863,...&lt;/span&gt;
&lt;span class="c1"&gt;# }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;SSL with GIT&lt;/h2&gt;
&lt;p&gt;Just like cUrl Git-for-windows also checks the SSL path.&lt;br&gt;
By default ca-bundle.crt file from OpenSSL&lt;br&gt;
&lt;img alt="GitInstall-SSL" src="img/2017/2017-12-11-GitInstall1.PNG"&gt;&lt;/p&gt;
&lt;p&gt;If you during installation change to use Windows Certificate Store, then Windows will keep the ca-list updated for you, I assume.&lt;/p&gt;
&lt;p&gt;The End&lt;/p&gt;</content><category term="Develop"></category><category term="#curl"></category><category term="#windows"></category><category term="#shell"></category><category term="#ssl"></category><category term="#git"></category><category term="#openssl"></category></entry><entry><title>Expand your WCF service with REST</title><link href="https://rasor.github.io/expand-your-wcf-service-with-rest.html" rel="alternate"></link><published>2017-11-19T13:00:00+01:00</published><updated>2017-12-16T10:00:00+01:00</updated><author><name>rasor</name></author><id>tag:rasor.github.io,2017-11-19:/expand-your-wcf-service-with-rest.html</id><summary type="html">&lt;p&gt;If you are working with .NET you probably have WCF services.&lt;br&gt;
You might have thought of expanding those WCF services to REST allowing you to make mobile or SPA frontends.&lt;br&gt;
Instead of using ServiceStack or WebApi+Swashbuckle, you can stay in WCF. This have the advantage of a smaller learning …&lt;/p&gt;</summary><content type="html">&lt;p&gt;If you are working with .NET you probably have WCF services.&lt;br&gt;
You might have thought of expanding those WCF services to REST allowing you to make mobile or SPA frontends.&lt;br&gt;
Instead of using ServiceStack or WebApi+Swashbuckle, you can stay in WCF. This have the advantage of a smaller learning curve for other developers.&lt;/p&gt;
&lt;p&gt;After this walk-through you have a REST service and swagger.yaml that you can use for creating client code via &lt;a href="https://editor.swagger.io/"&gt;https://editor.swagger.io/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="IBookService.yaml" src="img/2017/2017-11-18-IBookService.yaml.PNG" title="IBookService.yaml"&gt;&lt;/p&gt;
&lt;p&gt;You can find &lt;a href="https://github.com/rasor/wcf-rest"&gt;code for this guide on github&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;HowTo create a REST service (including Swagger.yaml) from a WCF service&lt;/h1&gt;
&lt;p&gt;If you have an existing service you create yet an endpoint allowing you to keep the existing service.&lt;/p&gt;
&lt;p&gt;In most cases the best thing is to create yet a WCF service using the same contract as your original WCF service. Just start from bullet 2 then.&lt;/p&gt;
&lt;h2&gt;1. The templates&lt;/h2&gt;
&lt;p&gt;This guide is based on Visusal Studio 2017.4&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Create an empty web&lt;ul&gt;
&lt;li&gt;File - New - Project - ASP.NET Web Application - Empty  &lt;/li&gt;
&lt;li&gt;=&amp;gt; This gives you a project without Global.Ajax and startup files&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Add Ajax-enabled WCF service&lt;ul&gt;
&lt;li&gt;Solution - RightClick project - Add - New Item (Ctrl-Shft-A) - WCF Service (Ajax-enabled) - You could call it &lt;code&gt;RestService1&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;=&amp;gt; This gives you a WCF service with webHttpBinding and a ref to System.ServiceModel.Web&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;2. The first response&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Change from SOAP to REST response&lt;ul&gt;
&lt;li&gt;In &lt;code&gt;RestService1.svc.cs&lt;/code&gt; add below &lt;code&gt;[OperationContract]&lt;/code&gt;:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="na"&gt;    [WebGet(RequestFormat = WebMessageFormat.Json, ResponseFormat = WebMessageFormat.Json)]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;Set a breakpoint in DoWork() and debug project (F5)&lt;/li&gt;
&lt;li&gt;Open &lt;a href="http://localhost:15563/RestService1.svc/DoWork"&gt;http://localhost:15563/RestService1.svc/DoWork&lt;/a&gt; in Chrome&lt;/li&gt;
&lt;li&gt;=&amp;gt; Breakpoint is hit. Response: {"d":null}&lt;/li&gt;
&lt;li&gt;GET &lt;a href="http://localhost:15563/RestService1.svc/DoWork"&gt;http://localhost:15563/RestService1.svc/DoWork&lt;/a&gt; in Postman&lt;/li&gt;
&lt;li&gt;=&amp;gt; Response: {"d":null}&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;3. Change response to &lt;code&gt;&amp;lt;empty&amp;gt;&lt;/code&gt; for void functions&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Change from Ajax to REST client&lt;ul&gt;
&lt;li&gt;In web.config &lt;code&gt;&amp;lt;behavior&amp;gt;&lt;/code&gt;: Replace &lt;code&gt;&amp;lt;enableWebScript /&amp;gt;&lt;/code&gt; with &lt;code&gt;&amp;lt;webHttp /&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Debug project (F5)&lt;/li&gt;
&lt;li&gt;GET &lt;a href="http://localhost:15563/RestService1.svc/DoWork"&gt;http://localhost:15563/RestService1.svc/DoWork&lt;/a&gt; in Postman&lt;/li&gt;
&lt;li&gt;=&amp;gt; Response: &lt;code&gt;&amp;lt;empty&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;4. Add Sample Interface&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Add a sample interface&lt;ul&gt;
&lt;li&gt;Paste &lt;code&gt;\models\Book.cs&lt;/code&gt; from &lt;a href="https://www.codeproject.com/Tips/1190441/How-to-generate-basic-swagger-yaml-description-for"&gt;https://www.codeproject.com/Tips/1190441/How-to-generate-basic-swagger-yaml-description-for&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Paste &lt;code&gt;\interfaces\IBookService.cs&lt;/code&gt; from &lt;a href="https://www.codeproject.com/Tips/1190441/How-to-generate-basic-swagger-yaml-description-for"&gt;https://www.codeproject.com/Tips/1190441/How-to-generate-basic-swagger-yaml-description-for&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Notice the code in &lt;code&gt;IBookService&lt;/code&gt; in this project is changed a bit to allow to POST and PUT a &lt;code&gt;Book&lt;/code&gt; object using JSON in the body of the request.&lt;/li&gt;
&lt;li&gt;In &lt;code&gt;RestService1.svc.cs&lt;/code&gt; inherit from interface:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;RestService1&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;IBookService&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;Click on LigthBulp - Implement Interface&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Change contract. In &lt;code&gt;web.config&lt;/code&gt; change 
    from &lt;code&gt;&amp;lt;service contract="WebApplicationWcfRest1.RestService1&lt;/code&gt;&lt;br&gt;
    to &lt;code&gt;&amp;lt;service contract="WebApplicationWcfRest1.interfaces.IBookService&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Implement &lt;code&gt;GetBookById()&lt;/code&gt;. Add line:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;Book&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;Id&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Name&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;The incredible stamp&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Debug project (F5)&lt;ul&gt;
&lt;li&gt;GET &lt;a href="http://localhost:15563/RestService1.svc/Book/1"&gt;http://localhost:15563/RestService1.svc/Book/1&lt;/a&gt; in Postman&lt;/li&gt;
&lt;li&gt;=&amp;gt; Response: &lt;code&gt;{"Id": 1, "Name": "The incredible stamp"}&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;POST &lt;a href="http://localhost:15563/RestService1.svc/Book"&gt;http://localhost:15563/RestService1.svc/Book&lt;/a&gt; in Postman - Set Body to &lt;code&gt;raw&lt;/code&gt; and write &lt;code&gt;{"Id": 2, "Name": "The invincible stamp"}&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;=&amp;gt; Notice - you receive the object as a &lt;code&gt;Book&lt;/code&gt; in C#&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;5. Create Swagger Yaml&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Create Swagger.yaml - this is the wsdl for REST&lt;ul&gt;
&lt;li&gt;In Project Properties (Alt-Enter) - Build - Select &lt;code&gt;XML Documentation file&lt;/code&gt; - Clear the path&lt;/li&gt;
&lt;li&gt;Install &lt;a href="https://www.nuget.org/packages/Swagger4WCF"&gt;https://www.nuget.org/packages/Swagger4WCF&lt;/a&gt; into the project containing the interfaces&lt;/li&gt;
&lt;li&gt;Build project&lt;/li&gt;
&lt;li&gt;=&amp;gt; The yaml file is in &lt;code&gt;\bin\WebApplicationWcfRest1.IBookService.yaml&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Edit yaml file&lt;ul&gt;
&lt;li&gt;Replace &lt;code&gt;host&lt;/code&gt; from &lt;code&gt;localhost&lt;/code&gt; to &lt;code&gt;localhost:15563&lt;/code&gt; (or to the test- or prod server host)&lt;/li&gt;
&lt;li&gt;Replace &lt;code&gt;basePath&lt;/code&gt; from  &lt;code&gt;/IBookService&lt;/code&gt; to &lt;code&gt;/RestService1.svc&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Replace all &lt;code&gt;path&lt;/code&gt;s from e.g. &lt;code&gt;/GetBooksList:&lt;/code&gt; to &lt;code&gt;/Book:&lt;/code&gt; (as you wrote in UriTemplate)&lt;/li&gt;
&lt;li&gt;Group operations with same &lt;code&gt;path&lt;/code&gt; together and delete the duplicate paths&lt;/li&gt;
&lt;li&gt;Those paths having path parameters e.g. &lt;code&gt;/{id}&lt;/code&gt; change parameters from &lt;code&gt;in: query&lt;/code&gt; to &lt;code&gt;in: path&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Save the yaml file into &lt;code&gt;\interfaces\&lt;/code&gt; - update version number each time you send a new version to the client&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Test the yaml file&lt;ul&gt;
&lt;li&gt;Goto &lt;a href="http://editor.swagger.io/"&gt;http://editor.swagger.io/&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;Replace left pane with the content of the yaml file (if you use chrome, you can paste)&lt;/li&gt;
&lt;li&gt;=&amp;gt; In top of right pane: The should be no errors&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;6. Move contracts to new library&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Swagger4WCF does not work well with Unity.WCF, so we move the contracts to a new library&lt;ul&gt;
&lt;li&gt;File - New - Project (Ctrl-Shft-N) - Class Library - Name: Contracts&lt;/li&gt;
&lt;li&gt;Drag'n'drop folder interfaces to Contracts&lt;/li&gt;
&lt;li&gt;Drag'n'drop folder models to Contracts&lt;/li&gt;
&lt;li&gt;Add Refs to project Contracts:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;System.ServiceModel&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;System.ServiceModel.Web&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;System.Runtime.Serialization&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Create Swagger.yaml - this is the wsdl for REST&lt;ul&gt;
&lt;li&gt;In Project Properties (Alt-Enter) - Build - Selt "XML Documentation file" - Clear the path&lt;/li&gt;
&lt;li&gt;Install &lt;a href="https://www.nuget.org/packages/Swagger4WCF"&gt;https://www.nuget.org/packages/Swagger4WCF&lt;/a&gt; into the project containing the interfaces (Contracts)&lt;/li&gt;
&lt;li&gt;Build project&lt;/li&gt;
&lt;li&gt;=&amp;gt; The yaml file is in &lt;code&gt;\bin\WebApplicationWcfRest1.IBookService.yaml&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Remove &lt;code&gt;Swagger4WCF&lt;/code&gt; from project &lt;code&gt;WebApplicationWcfRest1&lt;/code&gt;&lt;ul&gt;
&lt;li&gt;In project &lt;code&gt;WebApplicationWcfRest1&lt;/code&gt; add ref to project &lt;code&gt;Contracts&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;In &lt;code&gt;packages.config&lt;/code&gt; remove line having &lt;code&gt;Swagger4WCF&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Rebuild Solution&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;7. Add dependency injection with Unity&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Remove &lt;code&gt;Swagger4WCF&lt;/code&gt; from service project&lt;ul&gt;
&lt;li&gt;Unload project &lt;code&gt;WebApplicationWcfRest1&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Remove two lines containing &lt;code&gt;Swagger4WCF&lt;/code&gt; near bottom&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Add dependency injection&lt;ul&gt;
&lt;li&gt;Install &lt;a href="https://www.nuget.org/packages/Unity.Wcf"&gt;https://www.nuget.org/packages/Unity.Wcf&lt;/a&gt; into the project containing the services (&lt;code&gt;WebApplicationWcfRest1&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;=&amp;gt; This created file &lt;code&gt;WcfServiceFactory.cs&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;View Markup of &lt;code&gt;RestService1.svc&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Replace: &lt;code&gt;CodeBehind="RestService1.svc.cs"&lt;/code&gt;&lt;ul&gt;
&lt;li&gt;with: &lt;code&gt;Factory="WebApplicationWcfRest1.WcfServiceFactory"&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;In &lt;code&gt;WcfServiceFactory.cs&lt;/code&gt; register the service:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;               &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;RegisterType&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;IBookService&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;RestService1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;();&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;Build the solution&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Debug project (F5)&lt;ul&gt;
&lt;li&gt;GET &lt;a href="http://localhost:15563/RestService1.svc/Book/1"&gt;http://localhost:15563/RestService1.svc/Book/1&lt;/a&gt; in Postman&lt;/li&gt;
&lt;li&gt;=&amp;gt; Response: &lt;code&gt;{"Id": 1, "Name": "The incredible stamp"}&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;8. Use HTTP Status Codes&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Add HTTP Status Codes to your service&lt;ul&gt;
&lt;li&gt;In your service &lt;code&gt;RestService1.svc.cs&lt;/code&gt; - method &lt;code&gt;AddBook()&lt;/code&gt; add content&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;            &lt;span class="n"&gt;WebOperationContext&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Current&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;OutgoingResponse&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;StatusCode&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Net&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;HttpStatusCode&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Created&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// 201&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;book&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Name&lt;/span&gt; &lt;span class="p"&gt;==&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;The incredible stamp&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;   &lt;span class="c1"&gt;// Book exist&lt;/span&gt;
                &lt;span class="n"&gt;WebOperationContext&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Current&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;OutgoingResponse&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;StatusCode&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Net&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;HttpStatusCode&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Conflict&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// 409&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;In method &lt;code&gt;UpdateBook()&lt;/code&gt; add content&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;book&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Id&lt;/span&gt; &lt;span class="p"&gt;==&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="c1"&gt;// Book does not exist - 404&lt;/span&gt;
                &lt;span class="n"&gt;WebOperationContext&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Current&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;OutgoingResponse&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SetStatusAsNotFound&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Resource not found&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;book&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Name&lt;/span&gt; &lt;span class="p"&gt;==&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="c1"&gt;// Invalid request&lt;/span&gt;
                &lt;span class="n"&gt;WebOperationContext&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Current&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;OutgoingResponse&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;StatusCode&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Net&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;HttpStatusCode&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;MethodNotAllowed&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// 405&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;In method &lt;code&gt;GetBookById()&lt;/code&gt; add content&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="p"&gt;==&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;2&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="c1"&gt;// Book does not exist - 404&lt;/span&gt;
                &lt;span class="n"&gt;WebOperationContext&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Current&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;OutgoingResponse&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SetStatusAsNotFound&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Resource not found&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;Book&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;Id&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Name&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;The incredible stamp&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;Follow the guidance for HTTP Status Codes in &lt;a href="https://developers.redhat.com/blog/2017/01/19/applying-api-best-practices-in-fuse/"&gt;https://developers.redhat.com/blog/2017/01/19/applying-api-best-practices-in-fuse/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;=&amp;gt; Test the change using Postman&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Update your yaml with the Status Codes&lt;ul&gt;
&lt;li&gt;In &lt;code&gt;IBookService.yaml&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    &lt;span class="nt"&gt;put&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="nt"&gt;responses&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="nt"&gt;201&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
          &lt;span class="nt"&gt;description&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Book&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;created&amp;quot;&lt;/span&gt;
        &lt;span class="nt"&gt;409&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
          &lt;span class="nt"&gt;description&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Book&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;exist&amp;quot;&lt;/span&gt;
    &lt;span class="nt"&gt;post&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="nt"&gt;responses&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="nt"&gt;404&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
          &lt;span class="nt"&gt;description&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Book&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;not&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;found&amp;quot;&lt;/span&gt;
        &lt;span class="nt"&gt;405&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
          &lt;span class="nt"&gt;description&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Validation&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;exception&amp;quot;&lt;/span&gt;
    &lt;span class="nt"&gt;get&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="nt"&gt;responses&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="nt"&gt;404&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
          &lt;span class="nt"&gt;description&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Book&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;not&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;found&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;9. CORS&lt;/h2&gt;
&lt;p&gt;To be able to call the API you need to allow clients to call it. You can do that already in global.asax&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;protected&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;Application_BeginRequest&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;object&lt;/span&gt; &lt;span class="n"&gt;sender&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;EventArgs&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;HttpContext&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Current&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AddHeader&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Access-Control-Allow-Origin&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;http://localhost&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;HttpContext&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Current&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;HttpMethod&lt;/span&gt; &lt;span class="p"&gt;==&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;OPTIONS&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;HttpContext&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Current&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AddHeader&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Access-Control-Allow-Methods&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;POST, PUT, DELETE&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="n"&gt;HttpContext&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Current&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AddHeader&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Access-Control-Allow-Headers&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Content-Type, Accept&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;HttpContext&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Current&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AddHeader&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Access-Control-Max-Age&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;1728000&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;HttpContext&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Current&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;End&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;10. Security&lt;/h2&gt;
&lt;p&gt;Towards a SPA or mobile you could use OAuth as demonstrated in &lt;a href="https://www.codeproject.com/Tips/372422/Secure-WCF-RESTful-service-using-OAUTH"&gt;Secure WCF RESTful service using OAUTH&lt;/a&gt;&lt;br&gt;
Towards a partner you could use certificates as demonstrated in &lt;a href="http://hiteshkesharia.blogspot.dk/2014/01/secure-wcf-rest-service-with-x509.html"&gt;Secure a WCF REST Service with an X509 Certificate, hosted on IIS&lt;/a&gt;  &lt;/p&gt;
&lt;h2&gt;11. Adding Swagger examples&lt;/h2&gt;
&lt;p&gt;To make your API clearer to understand you can add &lt;a href="https://swagger.io/docs/specification/2-0/adding-examples/"&gt;Swagger examples&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Refs / Credits&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Postman: &lt;a href="https://www.getpostman.com/"&gt;https://www.getpostman.com/&lt;/a&gt; or &lt;a href="https://chrome.google.com/webstore/detail/postman/fhbjgbiflinjbdggehcddcbncdddomop?hl=en"&gt;https://chrome.google.com/webstore/detail/postman/fhbjgbiflinjbdggehcddcbncdddomop?hl=en&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Swagger4WCF: &lt;a href="https://www.codeproject.com/Tips/1190441/How-to-generate-basic-swagger-yaml-description-for"&gt;https://www.codeproject.com/Tips/1190441/How-to-generate-basic-swagger-yaml-description-for&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;NuGet Swagger4WCF: &lt;a href="https://www.nuget.org/packages/Swagger4WCF"&gt;https://www.nuget.org/packages/Swagger4WCF&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Unity.WCF: &lt;a href="https://www.devtrends.co.uk/blog/introducing-unity.wcf-providing-easy-ioc-integration-for-your-wcf-services"&gt;https://www.devtrends.co.uk/blog/introducing-unity.wcf-providing-easy-ioc-integration-for-your-wcf-services&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Set StatusCode: &lt;a href="https://codeblitz.wordpress.com/2009/04/27/how-to-host-and-consume-wcf-restful-services/"&gt;https://codeblitz.wordpress.com/2009/04/27/how-to-host-and-consume-wcf-restful-services/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;API Best Practices: &lt;a href="https://developers.redhat.com/blog/2017/01/19/applying-api-best-practices-in-fuse/#"&gt;https://developers.redhat.com/blog/2017/01/19/applying-api-best-practices-in-fuse/#&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Enabling CORS in WCF: &lt;a href="https://www.codeproject.com/Articles/845474/Enabling-CORS-in-WCF"&gt;https://www.codeproject.com/Articles/845474/Enabling-CORS-in-WCF&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Official WCF REST Docs: &lt;a href="https://docs.microsoft.com/en-us/dotnet/framework/wcf/samples/web"&gt;https://docs.microsoft.com/en-us/dotnet/framework/wcf/samples/web&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;WCF REST with ASP.NET routing: &lt;a href="https://docs.microsoft.com/en-us/dotnet/framework/wcf/samples/aspnetrouteintegration"&gt;https://docs.microsoft.com/en-us/dotnet/framework/wcf/samples/aspnetrouteintegration&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The End&lt;/p&gt;</content><category term="Develop"></category><category term="#wcf"></category><category term="#rest"></category><category term="#swagger"></category><category term="#depencyinjection"></category><category term="#dotnet"></category><category term="#visualstudio"></category><category term="#cors"></category></entry><entry><title>Contributing to Open Source</title><link href="https://rasor.github.io/contributing-to-open-source.html" rel="alternate"></link><published>2017-10-14T23:00:00+02:00</published><updated>2017-10-27T21:00:00+02:00</updated><author><name>rasor</name></author><id>tag:rasor.github.io,2017-10-14:/contributing-to-open-source.html</id><summary type="html">&lt;p&gt;What is needed to contribute to Open Source hosted in Git?&lt;br&gt;
It is quite a bit - read all about it &lt;a href="https://opensource.guide/how-to-contribute/"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This blog post assumes you contribute by doing changes to a git repo.&lt;br&gt;
So In short you need to&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Choose a project you will do changes into&lt;/li&gt;
&lt;li&gt;Follow below …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;What is needed to contribute to Open Source hosted in Git?&lt;br&gt;
It is quite a bit - read all about it &lt;a href="https://opensource.guide/how-to-contribute/"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This blog post assumes you contribute by doing changes to a git repo.&lt;br&gt;
So In short you need to&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Choose a project you will do changes into&lt;/li&gt;
&lt;li&gt;Follow below Git Workflow&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Abbreviations&lt;/h2&gt;
&lt;p&gt;Before start you need to get a little list of vocabulary&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Abbr&lt;/th&gt;
&lt;th&gt;Full&lt;/th&gt;
&lt;th&gt;Meaning&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;PR&lt;/td&gt;
&lt;td&gt;Pull Request&lt;/td&gt;
&lt;td&gt;Your code submitted for review before merge into Upstream&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Repo&lt;/td&gt;
&lt;td&gt;Repository&lt;/td&gt;
&lt;td&gt;A project folder under source control having a \.git\ subfolder&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;WIP&lt;/td&gt;
&lt;td&gt;Work In Progress&lt;/td&gt;
&lt;td&gt;Comment in PR for unfinished code - indication feedback wanted before going too far on a wrong tangent&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;#&lt;/td&gt;
&lt;td&gt;“Closes #37.”&lt;/td&gt;
&lt;td&gt;Comment with reference to an issue&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Git Contributer&lt;/td&gt;
&lt;td&gt;Person, who sends a Pull Request&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Git Maintainer&lt;/td&gt;
&lt;td&gt;Person, who merges a Pull Request&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Fork and Pull model&lt;/td&gt;
&lt;td&gt;One out of two &lt;a href="https://help.github.com/articles/about-collaborative-development-models/"&gt;development models&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Shared Repository model&lt;/td&gt;
&lt;td&gt;One out of two &lt;a href="https://help.github.com/articles/about-collaborative-development-models/"&gt;development models&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Upstream&lt;/td&gt;
&lt;td&gt;A repo where you want to merge PR's into&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Next thing you need to know is that the &lt;code&gt;master&lt;/code&gt; branch is always production - meaning - you do your work in a feature branch and you ask the owner of the repo if he wants your changes. Often a discussion will follow and possible more changes you will have to do - including deploy to test - before it perhaps is accepted by being merged into the master.
In more details &lt;a href="https://guides.github.com/introduction/flow/"&gt;here is a visual flow&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Since you are just starting you are probably not member of a team, that has access to a shared repo.&lt;br&gt;
Thus you need to contribute with the &lt;a href="https://help.github.com/articles/about-collaborative-development-models/"&gt;Fork and Pull model&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Fork and Pull model" src="img/2017/2017-10-14-Fork-and-Pull.png" title="Fork and Pull model"&gt;&lt;/p&gt;
&lt;p&gt;I use two phases&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A. Prepare&lt;/li&gt;
&lt;li&gt;B. Do the work, PR and cleanup&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In that way you can do A. Prepare only once and repeat phase B.&lt;/p&gt;
&lt;h3&gt;A. Prepare&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# 1. Create a Fork of the repo you will contribute to&lt;/span&gt;
&lt;span class="c1"&gt;# 2. Download your Fork (origin)&lt;/span&gt;
git clone https://github.com/your_userid/ORIGINAL_REPOSITORY.git
&lt;span class="nb"&gt;cd&lt;/span&gt; ORIGINAL_REPOSITORY
&lt;span class="c1"&gt;# 3. Add Upstream as a remote&lt;/span&gt;
git remote add upstream https://github.com/ORIGINAL_OWNER/ORIGINAL_REPOSITORY.git
git remote -v
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;B. Do the work, PR and cleanup&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# 4. Download latest changes from upstream&lt;/span&gt;
git pull upstream master &lt;span class="c1"&gt;# or rebase&lt;/span&gt;
&lt;span class="c1"&gt;# handle possible conflicts: https://help.github.com/articles/addressing-merge-conflicts/&lt;/span&gt;
git status
git commit -a -m &lt;span class="s2"&gt;&amp;quot;upstream changes added&amp;quot;&lt;/span&gt;
&lt;span class="c1"&gt;# 5. Create a feature branch&lt;/span&gt;
git checkout -b mynewfeaturebranch
&lt;span class="c1"&gt;# 6. Do some work and save&lt;/span&gt;
git commit -a -m &lt;span class="s2"&gt;&amp;quot;made a nice feature&amp;quot;&lt;/span&gt;
&lt;span class="c1"&gt;# 7. Push branch to fork&lt;/span&gt;
git push -u origin mynewfeaturebranch
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;a href="https://help.github.com/articles/creating-a-pull-request-from-a-fork/"&gt;8a. Pull Request to upstream - from Fork&lt;/a&gt;  &lt;/p&gt;
&lt;p&gt;You are then rewarded with this image for the first PR, if it was GitHub you contributed to&lt;br&gt;
&lt;img alt="The first Pull Request" src="img/2017/2017-10-14-profile-first-pr.png" title="The first Pull Request"&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;8b. Listen for feedback&lt;br&gt;
You can see your PR's &lt;a href="https://github.com/pulls"&gt;here&lt;/a&gt;. Maintainers will make comments in there.&lt;/li&gt;
&lt;li&gt;8c. Maintainer merges feature branch to upstream&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Remember - Always be polite. Maintainers are in their good right to not care about your contribution.&lt;br&gt;
If you don't like that you can just keep working on your perfect fork.&lt;/p&gt;
&lt;p&gt;But if you only have your fork for PR's, then it is time to do clean-up, so you can do another cycle.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# 9. Delete mynewfeaturebranch&lt;/span&gt;
git checkout mynewfeaturebranch
git branch -d
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Find a project&lt;/h3&gt;
&lt;p&gt;Knowing how to create a PR, you can now go out and look for a project to contribute to&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Read CONTRIBUTING, CODE_OF_CONDUCT and/or README&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/MunGell/awesome-for-beginners"&gt;https://github.com/MunGell/awesome-for-beginners&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/showcases/great-for-new-contributors"&gt;https://github.com/showcases/great-for-new-contributors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://hacktoberfest.digitalocean.com/?utm_source=local&amp;amp;utm_medium=email&amp;amp;utm_campaign=Hacktoberfest2017#projects"&gt;Hacktoberfest - DigitalOcean&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/search?q=state%3Aopen+label%3Ahacktoberfest+is%3Aissue&amp;amp;type=Issues&amp;amp;utf8=%E2%9C%93&amp;amp;utm_source=DigitalOcean_Hacktoberfest2017"&gt;#Hacktoberfest&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Next steps&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://opensource.guide/"&gt;https://opensource.guide/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;See bottom of &lt;a href="http://jlord.us/patchwork/"&gt;Patchwork&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;@osteele's GIT commands&lt;/h2&gt;
&lt;p&gt;&lt;img alt="@osteele's GIT commands" src="http://images.osteele.com/2008/git-transport.png" title="@osteele's GIT commands"&gt;&lt;/p&gt;
&lt;h2&gt;Links&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.digitalocean.com/community/tutorials/how-to-rebase-and-update-a-pull-request"&gt;How To Rebase and Update a PR&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://opensource.guide/how-to-contribute/#orienting-yourself-to-a-new-project"&gt;https://opensource.guide/how-to-contribute/#orienting-yourself-to-a-new-project&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.freecodecamp.org/a-beginners-very-bumpy-journey-through-the-world-of-open-source-4d108d540b39"&gt;https://medium.freecodecamp.org/a-beginners-very-bumpy-journey-through-the-world-of-open-source-4d108d540b39&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.firsttimersonly.com/"&gt;http://www.firsttimersonly.com/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://help.github.com/articles/github-flow/"&gt;https://help.github.com/articles/github-flow/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://help.github.com/articles/working-with-forks/"&gt;https://help.github.com/articles/working-with-forks/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://help.github.com/categories/collaborating-with-issues-and-pull-requests/"&gt;Content - When Asking for Pull Requests&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://help.github.com/articles/merging-an-upstream-repository-into-your-fork/"&gt;Merge local from upstream - when using Fork and pull&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://help.github.com/articles/allowing-changes-to-a-pull-request-branch-created-from-a-fork/"&gt;Allow maintainers to make changes to your branch&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Get started links&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://* [Git-it (Desktop App)](https://github.com/jlord/git-it-electron)"&gt;Git-it - a git exercise&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://blog.osteele.com/2008/05/my-git-workflow/"&gt;@osteele's GIT Workflow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://slides.com/acanimal/git#/"&gt;Git - by slides by @acanimal&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://ndpsoftware.com/git-cheatsheet.html#loc=remote_repo;"&gt;Git Cheatsheet&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://guides.github.com/introduction/flow/"&gt;the GitHub Flow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://guides.github.com/activities/hello-world/"&gt;GitHub hello-world&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.microsoft.com/en-us/vsts/git/gitquickstart?tabs=visual-studio"&gt;Git and VS2017&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://nvie.com/posts/a-successful-git-branching-model/"&gt;A Git branching model&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The End&lt;/p&gt;</content><category term="Develop"></category><category term="#git"></category></entry><entry><title>Using SSH keys - Connect to Ionic Pro</title><link href="https://rasor.github.io/using-ssh-keys-connect-to-ionic-pro.html" rel="alternate"></link><published>2017-10-03T20:30:00+02:00</published><updated>2020-01-13T22:00:00+01:00</updated><author><name>rasor</name></author><id>tag:rasor.github.io,2017-10-03:/using-ssh-keys-connect-to-ionic-pro.html</id><summary type="html">&lt;p&gt;HowTo connect to Ionic Pro, when &lt;code&gt;ionic link&lt;/code&gt; fails?&lt;br&gt;
&lt;em&gt;&lt;a href="https://ionicframework.com/docs/pro/" target="_blank"&gt;Ionic Pro&lt;/a&gt; is a new site taking over the features from Ionic Cloud - a hosted mobile build, test and deploy service&lt;/em&gt;&lt;/p&gt;
&lt;h1&gt;Intro&lt;/h1&gt;
&lt;h3&gt;The problem&lt;/h3&gt;
&lt;p&gt;I wanted to connect to Ionic Pro from Windows.&lt;br&gt;
But the attempt failed.&lt;/p&gt;
&lt;p&gt;It kept coming with …&lt;/p&gt;</summary><content type="html">&lt;p&gt;HowTo connect to Ionic Pro, when &lt;code&gt;ionic link&lt;/code&gt; fails?&lt;br&gt;
&lt;em&gt;&lt;a href="https://ionicframework.com/docs/pro/" target="_blank"&gt;Ionic Pro&lt;/a&gt; is a new site taking over the features from Ionic Cloud - a hosted mobile build, test and deploy service&lt;/em&gt;&lt;/p&gt;
&lt;h1&gt;Intro&lt;/h1&gt;
&lt;h3&gt;The problem&lt;/h3&gt;
&lt;p&gt;I wanted to connect to Ionic Pro from Windows.&lt;br&gt;
But the attempt failed.&lt;/p&gt;
&lt;p&gt;It kept coming with one error after the other. The latest I had difficulty to pass was:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;gt;ionic link
× Looking up your apps - failed!
Request: GET https://api.ionicjs.com/apps?page&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nv"&gt;page_size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;25&lt;/span&gt;
Response: &lt;span class="m"&gt;401&lt;/span&gt;
Body:
&lt;span class="o"&gt;{&lt;/span&gt; type: &lt;span class="s1"&gt;&amp;#39;Unauthorized&amp;#39;&lt;/span&gt;, link: null, message: &lt;span class="s1"&gt;&amp;#39;Invalid Token&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This blog has a &lt;strong&gt;workaround&lt;/strong&gt; for &lt;code&gt;ionic link&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;ionic link&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://ionicframework.com/docs/cli/link/" target="_blank"&gt;&lt;code&gt;ionic link&lt;/code&gt;&lt;/a&gt; CLI command connects your local git repo with a remote repo at Ionic Pro.
That remote repo was created when you manually created an app at &lt;a href="https://dashboard.ionicjs.com/apps" target="_blank"&gt;Ionic Pro&lt;/a&gt; site.&lt;/p&gt;
&lt;p&gt;It does that by doing probably all these tasks&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;creating a set of SSH keys, &lt;/li&gt;
&lt;li&gt;uploading the public key to Ionic Pro and&lt;/li&gt;
&lt;li&gt;adding the app id to project-root\ionic.config.json&lt;/li&gt;
&lt;li&gt;adding remote ionic repo to your local project&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;So when it won't we can do it ourselves.&lt;/p&gt;
&lt;h1&gt;The workaround&lt;/h1&gt;
&lt;h3&gt;Prerequisites&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Create a ionic app in &lt;a href="https://dashboard.ionicjs.com" target="_blank"&gt;Ionic Pro&lt;/a&gt;&lt;br&gt;
After creation the id of the app will be the last part of the url - e.g. as in https://apps.ionic.io/app/09faf85a&lt;/li&gt;
&lt;li&gt;Create a &lt;a href="http://ionicframework.com/getting-started/" target="_blank"&gt;ionic starter app&lt;/a&gt; on your PC&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;1. Create a set of SSH keys&lt;/h3&gt;
&lt;p&gt;You need &lt;code&gt;ssh-keygen.exe&lt;/code&gt; to generate a set of public/private SSH keys.
&lt;code&gt;ssh-keygen.exe&lt;/code&gt; is installed as part of &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Git (default installed into &lt;code&gt;C:\Program Files\Git\usr\bin&lt;/code&gt;) or&lt;/li&gt;
&lt;li&gt;OpenSSH (default installed into &lt;code&gt;C:\Program Files\OpenSSH-Win64&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;On my PC I also had HerokuToolkit installed with a path in &lt;code&gt;ssh-keygen.bat&lt;/code&gt; to &lt;code&gt;ssh-keygen.exe&lt;/code&gt;.&lt;br&gt;
But this path was wrong. It seemed to be part of some problems. Rename that file, so it is not called instead of one of the real .exe files.&lt;/p&gt;
&lt;p&gt;From Git bash:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# https://help.github.com/articles/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent/&lt;/span&gt;

&lt;span class="c1"&gt;# Generate key-pair into C:\Users\your_userid\.ssh\&lt;/span&gt;
c:
&lt;span class="nb"&gt;cd&lt;/span&gt; C:/Users/your_userid/.ssh
&lt;span class="c1"&gt;# http://docs.ionic.io/services/ssh-keys/&lt;/span&gt;
ssh-keygen.exe -t rsa -b &lt;span class="m"&gt;4096&lt;/span&gt; -C &lt;span class="s2"&gt;&amp;quot;your_email@example.com&amp;quot;&lt;/span&gt;

&lt;span class="c1"&gt;# Check if ssh agent is running&lt;/span&gt;
&lt;span class="nb"&gt;eval&lt;/span&gt; &lt;span class="k"&gt;$(&lt;/span&gt;ssh-agent -s&lt;span class="k"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# Agent pid 12345 - yes&lt;/span&gt;

&lt;span class="c1"&gt;# Add private key to agent - &lt;/span&gt;
ssh-add C:/Users/your_userid/.ssh/id_rsa
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;2. Upload the public key to Ionic Pro&lt;/h3&gt;
&lt;p&gt;Paste the content of file &lt;code&gt;id_rsa.pub&lt;/code&gt; to a new key in &lt;a href="https://dashboard.ionicjs.com/settings/ssh-keys" target="_blank"&gt;Ionic Pro's SSH store&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;3. Add the app id to your Ionic config in your local repo&lt;/h3&gt;
&lt;p&gt;Edit &lt;code&gt;project-root\ionic.config.json&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p p-Indicator"&gt;{&lt;/span&gt;
  &lt;span class="s"&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Your&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Magic&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;App&amp;quot;&lt;/span&gt;&lt;span class="p p-Indicator"&gt;,&lt;/span&gt;
  &lt;span class="s"&gt;&amp;quot;app_id&amp;quot;&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;09faf85a&amp;quot;&lt;/span&gt;&lt;span class="p p-Indicator"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;# replace with your id&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;4. Add remote ionic repo to your local project&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# https://dashboard.ionicjs.com/app/09faf85a/settings/git&lt;/span&gt;
&lt;span class="c1"&gt;# Add Ionic Pro as remote repo&lt;/span&gt;
git remote add ionic ssh://git@git.ionicjs.com:your_ionic_userid/your_ionic_appname.git
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;After the workaround&lt;/h1&gt;
&lt;h3&gt;5. Upload your app to Ionic Pro&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Upload to Ionic Pro&lt;/span&gt;
git push ionic master
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;6. Make Github your default remote repo&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Add github as remote repo&lt;/span&gt;
git remote add origin https://github.com/your_git_userid/your_git_appname.git
&lt;span class="c1"&gt;# Upload to github and set it default (for pull)&lt;/span&gt;
git push --set-upstream origin master
&lt;span class="c1"&gt;# Check your remotes&lt;/span&gt;
git remote -v
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;7. Continue to use Ionic Pro&lt;/h3&gt;
&lt;p&gt;On the url for your app - e.g. https://dashboard.ionicjs.com/app/09faf85a/code/builds/list you can continue to deploy, preview and more.&lt;/p&gt;
&lt;p&gt;You might also need to modify &lt;code&gt;src/app/app.module.ts&lt;/code&gt;. &lt;a href="http://docs.ionic.io/setup.html#configuration" target="_blank"&gt;Define a CloudSettings object&lt;/a&gt;. &lt;/p&gt;
&lt;hr&gt;
&lt;h1&gt;Tips&lt;/h1&gt;
&lt;h3&gt;Download an app as a starter app&lt;/h3&gt;
&lt;p&gt;If you have access to a Ionic Pro app, you can &lt;code&gt;git clone&lt;/code&gt; it with&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ionic start --pro-id 09faf85a
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;... if I am asuming correct.&lt;/p&gt;
&lt;h3&gt;If you want OpenSSH on Windows&lt;/h3&gt;
&lt;p&gt;.. then here is how you &lt;a href="https://github.com/PowerShell/Win32-OpenSSH/wiki/Win32-OpenSSH-Automated-Install-and-Upgrade-using-Chocolatey" target="_blank"&gt;install OpenSSH&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# do this from an admin prompt&lt;/span&gt;
choco install openssh &lt;span class="c1"&gt;# takes a while&lt;/span&gt;
&lt;span class="c1"&gt;# reload environment variables&lt;/span&gt;
refresh env
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;If you want Git Bash to add your Github SSH key to an agent&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://dev.to/bsara/how-to-setup-ssh-authentication-for-git-bash-on-windows-a63"&gt;How to Setup SSH Authentication for Git Bash on Windows&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;If you want Powershell to add your SSH key to an agent&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://code.visualstudio.com/docs/remote/troubleshooting#_setting-up-the-ssh-agent"&gt;Setting up the SSH Agent&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c"&gt;# PS1&lt;/span&gt;
&lt;span class="c"&gt;# Make sure you&amp;#39;re running as an Administrator&lt;/span&gt;
&lt;span class="nb"&gt;Set-Service&lt;/span&gt; &lt;span class="n"&gt;ssh-agent&lt;/span&gt; &lt;span class="n"&gt;-StartupType&lt;/span&gt; &lt;span class="n"&gt;Automatic&lt;/span&gt;
&lt;span class="nb"&gt;Start-Service&lt;/span&gt; &lt;span class="n"&gt;ssh-agent&lt;/span&gt;
&lt;span class="nb"&gt;Get-Service&lt;/span&gt; &lt;span class="n"&gt;ssh-agent&lt;/span&gt;
&lt;span class="c"&gt;# Add SSH private key to agent&lt;/span&gt;
&lt;span class="n"&gt;ssh-add&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="p"&gt;\&lt;/span&gt;&lt;span class="n"&gt;users&lt;/span&gt;&lt;span class="p"&gt;\&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;yourid&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;\.&lt;/span&gt;&lt;span class="n"&gt;ssh&lt;/span&gt;&lt;span class="p"&gt;\&lt;/span&gt;&lt;span class="n"&gt;id_rsa&lt;/span&gt;
&lt;span class="c"&gt;# Verity key added&lt;/span&gt;
&lt;span class="n"&gt;ssh-add&lt;/span&gt; &lt;span class="n"&gt;-l&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;Links&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://ionicframework.com/docs/pro/basics/getting-started/" target="_blank"&gt;http://ionicframework.com/docs/pro/basics/getting-started/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/PowerShell/Win32-OpenSSH/wiki/ssh.exe-examples" target="_blank"&gt;https://github.com/PowerShell/Win32-OpenSSH/wiki/ssh.exe-examples&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The End&lt;/p&gt;</content><category term="Develop"></category><category term="#git"></category><category term="#ssh"></category><category term="#ionic"></category></entry><entry><title>Ngx: Template for Visual Studio 2017</title><link href="https://rasor.github.io/ngx-template-for-visual-studio-2017.html" rel="alternate"></link><published>2017-09-24T17:00:00+02:00</published><updated>2017-11-05T14:00:00+01:00</updated><author><name>rasor</name></author><id>tag:rasor.github.io,2017-09-24:/ngx-template-for-visual-studio-2017.html</id><summary type="html">&lt;p&gt;At my work all web developers are getting an Angular 4 course.
But there are a couple of issues with that.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;When you work with ngx in Visual Studio code you get a &lt;code&gt;.gitnore&lt;/code&gt; file from the Angular CLI to take care of what not to commit to GIT.
Since …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;At my work all web developers are getting an Angular 4 course.
But there are a couple of issues with that.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;When you work with ngx in Visual Studio code you get a &lt;code&gt;.gitnore&lt;/code&gt; file from the Angular CLI to take care of what not to commit to GIT.
Since we are not yet using GIT at work (but TFS), then TFS don't know what to checkin.&lt;/li&gt;
&lt;li&gt;Since the develpers feel more comfortable with VS 2017, then we also have a chance to get control of files to Checkin with a &lt;code&gt;.csproj&lt;/code&gt; file.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So HowTo import a Angular CLI project into VS 2017 on Windows?&lt;/p&gt;
&lt;p&gt;Luckily there is a &lt;code&gt;.vsix&lt;/code&gt; for that: &lt;a href="https://marketplace.visualstudio.com/items?itemName=AndreyFomin.AngularCLIProjectTemplate" target="_blank"&gt;Angular CLI Project Template&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Installation&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Optionally install &lt;a href="https://rasor.github.io/using-nvm-for-windows-and-yarn.html" target="_blank"&gt;Nvm for Windows&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Install &lt;a href="https://www.visualstudio.com/vs/community/" target="_blank"&gt;VS 2017&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;Include web development including TypeScript&lt;/li&gt;
&lt;li&gt;Framework ASP.NET Core 1.1.2&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Node 6.9.0 or higher (&lt;code&gt;node -v&lt;/code&gt;) - Should come with VS&lt;/li&gt;
&lt;li&gt;Npm 3 or higher (&lt;code&gt;npm -v&lt;/code&gt;) - Should come with VS&lt;/li&gt;
&lt;li&gt;&lt;a href="https://git-scm.com/download/win" target="_blank"&gt;Git for Windows&lt;/a&gt; (&lt;code&gt;git -version&lt;/code&gt;) - Should come with VS &lt;/li&gt;
&lt;li&gt;Install latest &lt;a href="https://www.npmjs.com/package/@angular/cli/tutorial" target="_blank"&gt;Angular CLI&lt;/a&gt; (&lt;code&gt;ng version&lt;/code&gt;)
** Note: The CLI you install will be the one that is used for creating Ng SPA&lt;/li&gt;
&lt;li&gt;Exit VisualStudio&lt;/li&gt;
&lt;li&gt;Install &lt;a href="https://marketplace.visualstudio.com/items?itemName=AndreyFomin.AngularCLIProjectTemplate" target="_blank"&gt;Angular CLI Project Template&lt;/a&gt; by executing the &lt;code&gt;.vsix&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Ready-Set-Go&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Start VisualStudio&lt;/li&gt;
&lt;li&gt;New - Project - Other Languages - TypeScript - Angular CLI Application - Name: &lt;YourNgAppName&gt;
** Note: You can also do New - Item into an existing .NET Core project - &lt;a href="https://github.com/damienbod/angular-auth-oidc-client"&gt;details&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="New Angular CLI Project in Visual Studio 2017" src="img/2017/2017-09-24-NewAngularCLIProject.PNG" title="New Angular CLI Project in Visual Studio 2017"&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;In the project options choises select both if you are in doubt&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="Angular CLI Project options" src="img/2017/2017-09-24-AngularCLIProjectOptions.PNG" title="Angular CLI Project options"&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Installing the npm packages takes a long time. I prefer to skip that step and do it manually from a command prompt, where I feel I better can see what is going on, if something fails&lt;ul&gt;
&lt;li&gt;Open a command prompt and CD into the root of your Angular project&lt;/li&gt;
&lt;li&gt;&lt;code&gt;npm install&lt;/code&gt; # install all the node_modules found in package.json&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Now start the app with F5&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;VS 2017 will read .\properties\launchsettings.json&lt;ul&gt;
&lt;li&gt;If you started IIS Express, then VS will start dotnet.exe on &lt;a href="http://localhost:58162/"&gt;http://localhost:58162/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;If you started [yourapp], then VS will start dotnet.exe on &lt;a href="http://localhost:58163/"&gt;http://localhost:58163/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="F5 startup 1" src="img/2017/2017-09-24-F5Startup1.PNG" title="F5 startup 1"&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;In both cases Angular CLI will serve you app after buiding it with the Angular CLI on &lt;a href="http://localhost:4200/"&gt;http://localhost:4200/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="F5 startup 2" src="img/2017/2017-09-24-F5Startup2.PNG" title="F5 startup 2"&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;This is very good news. Why? Because it does not matter what webserver or editor you are using.
But the best of is that you use standard node.js deployment methods, so you can deploy your app anywhere. You can use standard npm or yarn managers without having to do a lot of strange Visual Studio configuration.&lt;/li&gt;
&lt;li&gt;You can now stop F5 debugging.&lt;/li&gt;
&lt;li&gt;Instead start a webserver manually from a command prompt (in the root of your project) with &lt;code&gt;ng serve&lt;/code&gt;
Now you can see that it is Angular CLI (via .angular-cli.json) that in both cases uses webpack to build packages (via \src\tsconfig.app.json) to serve once again on &lt;a href="http://localhost:4200/"&gt;http://localhost:4200/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Press Ctrl-C to stop the webserver&lt;/li&gt;
&lt;li&gt;Checkin your code using your favorite VCS (e.g. TFS or GIT)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Links&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.microsoft.com/en-us/aspnet/core/client-side/spa-services"&gt;SSR with .NET Core&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.npmjs.com/package/@angular/cli/" target="_blank"&gt;@angular/cli&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://angular.io/guide/visual-studio-2015" target="_blank"&gt;Visual Studio 2015 QuickStart&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The End&lt;/p&gt;</content><category term="Develop"></category><category term="#npm"></category><category term="#ngx"></category><category term="#typescript"></category><category term="#visualstudio"></category><category term="#tfs"></category></entry></feed>