<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Rasor's Tech Blog</title><link href="https://rasor.github.io/" rel="alternate"></link><link href="https://rasor.github.io/feeds/all.atom.xml" rel="self"></link><id>https://rasor.github.io/</id><updated>2018-06-10T21:00:00+02:00</updated><entry><title>Tools for Wordpress sites</title><link href="https://rasor.github.io/tools-for-wordpress-sites.html" rel="alternate"></link><published>2018-06-10T21:00:00+02:00</published><updated>2018-06-10T21:00:00+02:00</updated><author><name>rasor</name></author><id>tag:rasor.github.io,2018-06-10:/tools-for-wordpress-sites.html</id><summary type="html">&lt;p&gt;Wordpress sites is still going strong with a large community creating beautiful thems.&lt;/p&gt;
&lt;h2&gt;Chrome Plugin: WP Sniffer&lt;/h2&gt;
&lt;p&gt;PenguinWP has created a  [Chrome plugin] called(https://chrome.google.com/webstore/detail/wpsniffer-wordpress-theme/kihhefcbenhkjgjhchanjfhhflaojldn)  &lt;a href="https://penguinwp.com/better-way-to-find-most-popular-wordpress-themes/"&gt;WPSniffer&lt;/a&gt; &lt;/p&gt;
&lt;h3&gt;Testing&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;GoTo a site hosted by WordPress - e.g. &lt;a href="http://www.knowledgecube.net/"&gt;Knowledge Cube&lt;/a&gt;&lt;br&gt;
=&amp;gt; The plugin will change color to …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;Wordpress sites is still going strong with a large community creating beautiful thems.&lt;/p&gt;
&lt;h2&gt;Chrome Plugin: WP Sniffer&lt;/h2&gt;
&lt;p&gt;PenguinWP has created a  [Chrome plugin] called(https://chrome.google.com/webstore/detail/wpsniffer-wordpress-theme/kihhefcbenhkjgjhchanjfhhflaojldn)  &lt;a href="https://penguinwp.com/better-way-to-find-most-popular-wordpress-themes/"&gt;WPSniffer&lt;/a&gt; &lt;/p&gt;
&lt;h3&gt;Testing&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;GoTo a site hosted by WordPress - e.g. &lt;a href="http://www.knowledgecube.net/"&gt;Knowledge Cube&lt;/a&gt;&lt;br&gt;
=&amp;gt; The plugin will change color to orange in the address bar.&lt;/li&gt;
&lt;li&gt;Press the plugin&lt;br&gt;
=&amp;gt; DETECTED WORDPRESS THEME: &lt;a href="https://themeforest.net/item/jupiter-multipurpose-responsive-theme/5177775?s_rank=1"&gt;JUPITER&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="WPSniffer" src="https://lh3.googleusercontent.com/-4HDYqRKhxBQWvniHkf7AAMtLKmL9L2jySRvb8cIesOIYAR9PdvxzrtaTEsLkiEHWAxvroM=w640-h400-e365"&gt;&lt;/p&gt;
&lt;h2&gt;Theme: Jupiter&lt;/h2&gt;
&lt;p&gt;Jupiter has an &lt;a href="https://themes.artbees.net/docs/installing-theme-and-child-theme/"&gt;Installation instrction&lt;/a&gt; telling how to install a child theme to avoid theme customizations to be overwritten by theme updates.&lt;/p&gt;
&lt;h2&gt;Tool: Visual Composer&lt;/h2&gt;
&lt;p&gt;Knowledge Cube web also uses the tool &lt;a href="https://visualcomposer.io/"&gt;Visual Composer&lt;/a&gt; to edit the Website.&lt;/p&gt;
&lt;h2&gt;WP Plugin: Yoast SEO&lt;/h2&gt;
&lt;p&gt;Knowledge Cube web does SEO optimisation with &lt;a href="https://yoast.com/wordpress/plugins/seo/"&gt;Yoast SEO&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The End&lt;/p&gt;</content><category term="#wordpress"></category><category term="#theme"></category><category term="#seo"></category></entry><entry><title>Vue Storefront installation on Windows Dev box</title><link href="https://rasor.github.io/vue-storefront-installation-on-windows-dev-box.html" rel="alternate"></link><published>2018-05-15T23:00:00+02:00</published><updated>2018-05-21T21:01:00+02:00</updated><author><name>rasor</name></author><id>tag:rasor.github.io,2018-05-15:/vue-storefront-installation-on-windows-dev-box.html</id><summary type="html">&lt;p&gt;&lt;a href="https://medium.com/@piotrkarwatka/vue-storefront-1-0rc-3-has-arrived-5c770a338d4"&gt;Vue Storefront&lt;/a&gt; will soon be out (june 2018).
It is a PWA frontend to the Magento webshop.  &lt;/p&gt;
&lt;p&gt;I think I'll give it a testdrive.&lt;br&gt;
I am attending a online marketing seminar and workshop presented by &lt;a href="https://twitter.com/tzacchi"&gt;Thomas Zacchi (@tzacchi)&lt;/a&gt; from &lt;a href="https://www.intoto.dk/"&gt;intoto digital&lt;/a&gt;, so I could use a modern webshop to play …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;a href="https://medium.com/@piotrkarwatka/vue-storefront-1-0rc-3-has-arrived-5c770a338d4"&gt;Vue Storefront&lt;/a&gt; will soon be out (june 2018).
It is a PWA frontend to the Magento webshop.  &lt;/p&gt;
&lt;p&gt;I think I'll give it a testdrive.&lt;br&gt;
I am attending a online marketing seminar and workshop presented by &lt;a href="https://twitter.com/tzacchi"&gt;Thomas Zacchi (@tzacchi)&lt;/a&gt; from &lt;a href="https://www.intoto.dk/"&gt;intoto digital&lt;/a&gt;, so I could use a modern webshop to play with.  &lt;/p&gt;
&lt;h2&gt;Initial thoughts about installation&lt;/h2&gt;
&lt;p&gt;I think I'll deploy Magento to a cheap PHP webhotel I have and then at another time roll it out as a Docker container.&lt;br&gt;
&lt;a href="https://hub.docker.com/r/bitnami/magento/"&gt;bitnami/magento/&lt;/a&gt; looks good for test - it proposes a data volume with MariaDB.&lt;br&gt;
Vue Storefront could just as well be served from the same container as Magento.  &lt;/p&gt;
&lt;p&gt;But hey - I won't need it neither front nor back deployed - I only want to play. Then instead I'll serve it in MiniShift from my PC.  &lt;/p&gt;
&lt;h2&gt;Got a little wiser&lt;/h2&gt;
&lt;p&gt;In the article  &lt;a href="https://www.linkedin.com/pulse/magento2-nosql-database-pwa-support-piotr-karwatka/"&gt;"Magento2 - NoSQL database and PWA support"&lt;/a&gt; &lt;a href="https://twitter.com/piotrkarwatka"&gt;Piotr Karwatka (@piotrkarwatka)&lt;/a&gt; explains there is a little more the setup than a Vue frontend and a Magento backend.&lt;br&gt;
There seems to be two chains that works something like  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;OLTP chain: &lt;a href="https://github.com/DivanteLtd/vue-storefront"&gt;VueFront&lt;/a&gt; -&amp;gt; &lt;a href="https://github.com/DivanteLtd/vue-storefront-api"&gt;ExpressApiBack&lt;/a&gt; -&amp;gt; ElasticSearch or MongoDB container &lt;/li&gt;
&lt;li&gt;Sync with Magento chain: &lt;a href="https://github.com/Automattic/kue"&gt;KueWorker&lt;/a&gt; -&amp;gt; KueBack(Redis) container -&amp;gt;  &lt;a href="https://github.com/DivanteLtd/mage2vuestorefront"&gt;Mage2VueFront&lt;/a&gt; -&amp;gt; ElasticSearch or MongoDB &amp;lt;-&amp;gt; Magento DB  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The model of VueFront the data apparently is great for NoSQL storage and querying, which supposedly scales better than the models used in SQL (which the Magento DB uses).&lt;br&gt;
So I guess we for the dev envir again are down to three containers:  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Vue apps: VueFront, ExpressApiBack, KueWorker, Mage2VueFront&lt;/li&gt;
&lt;li&gt;Vue storage: Redis, ElasticSearch or MongoDB&lt;/li&gt;
&lt;li&gt;Magento app, Magento DB&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If we for a quick start skip the sync chain, then &lt;a href="https://github.com/DivanteLtd/vue-storefront/blob/master/doc/Installing%20on%20Linux%20and%20MacOS.md#install-the-vue-storefront-api"&gt;data can be fetched&lt;/a&gt; from &lt;a href="https://github.com/magento/magento2-sample-data"&gt;magento2-sample-data&lt;/a&gt;&lt;br&gt;
Let's see if that is doable.&lt;/p&gt;
&lt;h2&gt;&lt;a href="https://github.com/DivanteLtd/vue-storefront/blob/master/doc/Installing%20on%20Windows.md"&gt;Installing on Windows&lt;/a&gt;&lt;/h2&gt;
&lt;h3&gt;Prerequisites&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Install &lt;a href="https://git-scm.com/downloads"&gt;Git for Windows&lt;/a&gt; - This will install &lt;code&gt;Git Bash&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Optional Install &lt;a href="https://rasor.github.io/curl-cli-on-windows.html"&gt;cUrl CLI on Windows&lt;/a&gt; - This will ensure that you can call a remote end over SSL&lt;/li&gt;
&lt;li&gt;Install &lt;a href="https://store.docker.com/editions/community/docker-ce-desktop-windows"&gt;Docker CE for Windows&lt;/a&gt;. &lt;/li&gt;
&lt;li&gt;I installed &lt;a href="2018-05-06-Docker4Win.md"&gt;Docker4Win here&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;Moore info: &lt;a href="https://blog.jayway.com/2017/04/19/running-docker-on-bash-on-windows/"&gt;Running Docker containers on Bash on Windows&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;If you use VS Code you could install &lt;a href="https://marketplace.visualstudio.com/items?itemName=PeterJausovec.vscode-docker"&gt;Docker Support for VSCode&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;Install &lt;a href="https://rasor.github.io/using-nvm-for-windows-and-yarn.html"&gt;NVM for Windows, Node.js and Yarn&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;Install &lt;a href="https://www.npmjs.com/package/vue-cli"&gt;vue-cli&lt;/a&gt;  &lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# print installed node versions&lt;/span&gt;
nvm list

&lt;span class="c1"&gt;# At time of writing vue-cli 3 is still in beta, so I choose an old one&lt;/span&gt;
&lt;span class="c1"&gt;#nvm install 8.11.1&lt;/span&gt;
nvm use &lt;span class="m"&gt;8&lt;/span&gt;.11.1 
npm install -g vue-cli@2.9.3
vue --version
&lt;span class="c1"&gt;# Test drive&lt;/span&gt;
vue list
&lt;span class="nb"&gt;cd&lt;/span&gt; .&lt;span class="se"&gt;\y&lt;/span&gt;our-vue-root&lt;span class="se"&gt;\&lt;/span&gt;
vue init webpack-simple my-29project
&lt;span class="nb"&gt;cd&lt;/span&gt; my-29project
code . &lt;span class="c1"&gt;#if you are using VS Code editor&lt;/span&gt;
npm install
npm run dev &lt;span class="c1"&gt;# Opens http://localhost:8080/&lt;/span&gt;

&lt;span class="c1"&gt;# When vue-cli 3 comes out I want to have that cli together with another node version - notice - the cli changed name @npm&lt;/span&gt;
&lt;span class="c1"&gt;#nvm install 10.1.0&lt;/span&gt;
nvm use &lt;span class="m"&gt;10&lt;/span&gt;.1.0
npm install -g @vue/cli@3.0.0-beta.10
vue --version
&lt;span class="c1"&gt;# Test drive&lt;/span&gt;
&lt;span class="nb"&gt;cd&lt;/span&gt; .&lt;span class="se"&gt;\y&lt;/span&gt;our-vue-root&lt;span class="se"&gt;\&lt;/span&gt;
vue create my-30project
&lt;/pre&gt;&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;v2.9.3 &lt;a href="https://github.com/vuejs/vue-cli/tree/master"&gt;vue-cli&lt;/a&gt; intro&lt;/li&gt;
&lt;li&gt;v3.0. &lt;a href="https://github.com/vuejs/vue-cli/blob/dev/docs/README.md#introduction"&gt;@vue/cli&lt;/a&gt; intro&lt;/li&gt;
&lt;li&gt;If you use VSCode you could install &lt;a href="https://marketplace.visualstudio.com/items?itemName=octref.vetur"&gt;Vetur&lt;/a&gt; - Vue tooling for VSCode for syntax highlight and snippets&lt;/li&gt;
&lt;li&gt;If you use Chrome you need &lt;a href="https://chrome.google.com/webstore/detail/vuejs-devtools/nhdogjmejiglipccpnnnanhbledajbpd?hl=en"&gt;Vue.js devtools&lt;/a&gt; for debugging&lt;/li&gt;
&lt;li&gt;The devtools has &lt;strong&gt;Open in editor&lt;/strong&gt; button to bring you back to the code. check out &lt;a href="https://medium.com/the-vue-point/whats-new-in-vue-devtools-4-0-9361e75e05d0"&gt;What’s new in Vue Devtools 4.0&lt;/a&gt;, which also points you to this &lt;a href="https://github.com/vuejs/vue-devtools/blob/master/docs/open-in-editor.md"&gt;setup guide&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;Install Vue Storefront&lt;/h3&gt;
&lt;p&gt;There are two parts&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;the Express API including a Docker container for the data&lt;/li&gt;
&lt;li&gt;the Vue frontend&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;VS API&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;Start Docker VM by double-click on the desktop icon. This takes a while&lt;/li&gt;
&lt;li&gt;Install VS API&lt;br&gt;
From GitBash:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; .&lt;span class="se"&gt;\y&lt;/span&gt;our-vue-root&lt;span class="se"&gt;\&lt;/span&gt;
git clone https://github.com/DivanteLtd/vue-storefront-api.git vue-storefront-api
&lt;span class="nb"&gt;cd&lt;/span&gt; vue-storefront-api
&lt;span class="c1"&gt;# Fetch dependencies&lt;/span&gt;
yarn
&lt;/pre&gt;&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;Load you docker VM with containers from docker-compose.yaml&lt;br&gt;
From CMD prompt:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# login to docker - this did not work from GitBash, but did from CMD&lt;/span&gt;
docker login -u yourUseridNotYourEmail -p yourPassword
&lt;span class="c1"&gt;# Run Docker containers required by vue-storefront-api. This can take a while ...&lt;/span&gt;
docker-compose up
&lt;span class="c1"&gt;# this CMD promt won&amp;#39;t return the promt. It is probably a Daemon now, so switch back to GitBash&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;Load the Docker data containers with data&lt;br&gt;
From GitBash:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Verify that the containers are running&lt;/span&gt;
docker network ls
&lt;span class="c1"&gt;# Open browser for Elastic Search (es1) container&lt;/span&gt;
start http://localhost:9200/
&lt;span class="c1"&gt;# Restore products database (yarn restore) and run latest migrations (yarn migrate)&lt;/span&gt;
yarn restore
yarn migrate
&lt;/pre&gt;&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;Copy &lt;code&gt;config/default.json&lt;/code&gt; to &lt;code&gt;config/local.json&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Add &lt;a href="https://gist.github.com/rasor/6eb9293a025ae919d66a31a8f8bdcb3d"&gt;..vscode\launch.json&lt;/a&gt; to the project&lt;/li&gt;
&lt;li&gt;Edit package.json - change:  &lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;  &lt;span class="s"&gt;&amp;quot;scripts&amp;quot;&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt; &lt;span class="p p-Indicator"&gt;{&lt;/span&gt;
    &lt;span class="s"&gt;&amp;quot;dev&amp;quot;&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;nodemon&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;-w&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;src&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;--exec&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;\&amp;quot;babel-node&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;src&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;--presets&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;es2015,stage-0\&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p p-Indicator"&gt;,&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;to (add --inspect)  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;  &lt;span class="s"&gt;&amp;quot;scripts&amp;quot;&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt; &lt;span class="p p-Indicator"&gt;{&lt;/span&gt;
    &lt;span class="s"&gt;&amp;quot;dev&amp;quot;&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;nodemon&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;--inspect&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;-w&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;src&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;--exec&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;\&amp;quot;babel-node&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;src&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;--presets&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;es2015,stage-0\&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p p-Indicator"&gt;,&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;Run API using &lt;code&gt;yarn dev&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Verify API is running&lt;br&gt;
start http://localhost:8080/api/&lt;br&gt;
Response:  &lt;code&gt;{"version":"0.1.0"}&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Debug the API from VSCode by setting breakpoints and press &lt;code&gt;play Attach&lt;/code&gt; on the Debug tab.&lt;/li&gt;
&lt;/ol&gt;
&lt;h4&gt;VS Frontend&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;Install VS API&lt;br&gt;
From GitBash 2:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; .&lt;span class="se"&gt;\y&lt;/span&gt;our-vue-root&lt;span class="se"&gt;\&lt;/span&gt;
git clone https://github.com/DivanteLtd/vue-storefront.git vue-storefront
&lt;span class="nb"&gt;cd&lt;/span&gt; vue-storefront
&lt;span class="c1"&gt;# Fetch dependencies&lt;/span&gt;
yarn install
&lt;/pre&gt;&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;Copy &lt;code&gt;config/default.json&lt;/code&gt; to &lt;code&gt;config/local.json&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Images: because vue-storefront-api uses &lt;code&gt;imagemagick&lt;/code&gt; and some nodejs cmdline bindings it can be dificult to run the image proxy on localhost/windows machine. Please point out the vue-storefront to image proxy provided by changing &lt;code&gt;config/local.json&lt;/code&gt; images.baseUrl:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kr"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;elasticsearch&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;httpAuth&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;host&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;localhost:8080/api/catalog&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;vue_storefront_catalog&amp;#39;&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="c1"&gt;// we have vue-storefront-api (https://github.com/DivanteLtd/vue-storefront-api) endpoints below:&lt;/span&gt;
  &lt;span class="nx"&gt;orders&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;endpoint&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;localhost:8080/api/order/create&amp;#39;&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="nx"&gt;images&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;baseUrl&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;https://demo.vuestorefront.io/img/&amp;#39;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;Run Vue Storefront Server using &lt;code&gt;yarn dev&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Verify Fronteend is running&lt;br&gt;
start http://localhost:3000/  &lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;You will see a &lt;a href="https://medium.com/@deepusnath/4-points-to-keep-in-mind-before-introducing-progressive-web-apps-pwa-to-your-team-8dc66bcf6011"&gt;PWA&lt;/a&gt; webshop
&lt;a href="https://demo.vuestorefront.io/"&gt;&lt;img alt="Vue Storefront" src="img/2018/2018-05-15-VueStore1.PNG"&gt;&lt;/a&gt;  &lt;/p&gt;
&lt;p&gt;The shop is reponsive&lt;br&gt;
&lt;a href="https://demo.vuestorefront.io/"&gt;&lt;img alt="Vue Storefront" src="img/2018/2018-05-15-VueStore2.PNG"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;And images resizes to small, when devices are very small&lt;br&gt;
&lt;a href="https://demo.vuestorefront.io/"&gt;&lt;img alt="Vue Storefront" src="img/2018/2018-05-15-VueStore3.PNG"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Turn off Vue Storefront&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Frontend - in GitBash-2 is just a PWA server - there is nothing to save - just &lt;code&gt;X&lt;/code&gt; it&lt;/li&gt;
&lt;li&gt;API - in GitBash-1 is just an API server - there is nothing to save - just &lt;code&gt;X&lt;/code&gt; it&lt;/li&gt;
&lt;li&gt;Now what about the CMD and the VM? You need to tell the containers in the VM to close down and then close down the VM.&lt;/li&gt;
&lt;li&gt;Start a new GitBash-3  &lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Verify containers are there&lt;/span&gt;
docker container ls
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Output: &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;CONTAINER ID   IMAGE               COMMAND                  CREATED       STATUS       PORTS                              NAMES
fcd38fe4910e   kibana:5.5          &amp;quot;/docker-entrypoint.…&amp;quot;   2 hours ago   Up 2 hours   0.0.0.0:5601-&amp;gt;5601/tcp             vue-storefront-api_kibana_1
070f93cc3a08   redis               &amp;quot;docker-entrypoint.s…&amp;quot;   2 hours ago   Up 2 hours   0.0.0.0:6379-&amp;gt;6379/tcp             vue-storefront-api_redis_1
a3fec0cc4f2b   elasticsearch:5.5   &amp;quot;/docker-entrypoint.…&amp;quot;   2 hours ago   Up 2 hours   9200/tcp, 9300/tcp                 vue-storefront-api_es2_1
56caf26862c4   elasticsearch:5.5   &amp;quot;/docker-entrypoint.…&amp;quot;   2 hours ago   Up 2 hours   0.0.0.0:9200-&amp;gt;9200/tcp, 9300/tcp   es1
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Hmm - this is part of the &lt;a href="https://www.elastic.co/elk-stack"&gt;ELK Stack: Elasticsearch, Logstash, Kibana&lt;/a&gt; and the Redis needed for sync with Magento is also there, so perhaps it is ready to connect to a real Magento installation.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; .&lt;span class="se"&gt;\y&lt;/span&gt;our-vue-root&lt;span class="se"&gt;\&lt;/span&gt;
&lt;span class="nb"&gt;cd&lt;/span&gt; vue-storefront-api
&lt;span class="c1"&gt;# Turn off the containers&lt;/span&gt;
docker-compose stop
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Output:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Stopping vue-storefront-api_kibana_1 ... done
Stopping vue-storefront-api_redis_1  ... done
Stopping vue-storefront-api_es2_1    ... done
Stopping es1                         ... done
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The CMD promt will display this, so you can close it.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;redis_1   | 1:signal-handler (1526416098) Received SIGTERM scheduling shutdown...
redis_1   | 1:M 15 May 20:28:18.957 # User requested shutdown...
redis_1   | 1:M 15 May 20:28:19.142 * Saving the final RDB snapshot before exiting.
es2_1     | [2018-05-15T20:28:19,274][INFO ][o.e.n.Node               ] [J8Lto-u] stopping ...
es1       | [2018-05-15T20:28:19,271][INFO ][o.e.n.Node               ] [sH31WJW] stopping ...
redis_1   | 1:M 15 May 20:28:19.306 * DB saved on disk
redis_1   | 1:M 15 May 20:28:19.306 # Redis is now ready to exit, bye bye...
es1       | [2018-05-15T20:28:19,444][INFO ][o.e.n.Node               ] [sH31WJW] stopped
es1       | [2018-05-15T20:28:19,444][INFO ][o.e.n.Node               ] [sH31WJW] closing ...
es2_1     | [2018-05-15T20:28:19,473][INFO ][o.e.n.Node               ] [J8Lto-u] stopped
es2_1     | [2018-05-15T20:28:19,473][INFO ][o.e.n.Node               ] [J8Lto-u] closing ...
es1       | [2018-05-15T20:28:19,509][INFO ][o.e.n.Node               ] [sH31WJW] closed
es2_1     | [2018-05-15T20:28:19,509][INFO ][o.e.n.Node               ] [J8Lto-u] closed
vue-storefront-api_es2_1 exited with code 143
vue-storefront-api_redis_1 exited with code 0
vue-storefront-api_kibana_1 exited with code 143
es1 exited with code 143
&lt;/pre&gt;&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;Optionally Close Docker from the taskbar-notification-icon: Select &lt;code&gt;Quit&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;Startup scripts&lt;/h2&gt;
&lt;p&gt;I've created &lt;a href="https://gist.github.com/rasor/a3e6e6d6fd824685956d922a3de55b63"&gt;three scripts&lt;/a&gt; that does the above startup.&lt;br&gt;
You can put them in &lt;code&gt;\your-vue-root\&lt;/code&gt; and just double-click on them to start up VueStorefront. They are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;vsapi1.bat&lt;/li&gt;
&lt;li&gt;vsapi2.sh&lt;/li&gt;
&lt;li&gt;vs3.sh&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Note: &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;You must set Git Bash to open extension .sh for this to work&lt;/li&gt;
&lt;li&gt;You must start them in above order and wait patiently for each part to start before you continue with the next script&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Whats next?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;You can customize your frontend theme and change the behavior (code)&lt;/li&gt;
&lt;li&gt;You can install Magento at some host and configure your shop to go towards it&lt;/li&gt;
&lt;li&gt;You can deploy your shop&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h1&gt;Links&lt;/h1&gt;
&lt;h2&gt;Vue Storefront&lt;/h2&gt;
&lt;h3&gt;4 - Vue Storefront - People&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://vuestorefront.slack.com/messages/DAP34PT8U/"&gt;vuestorefront.slack.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/VueStorefront"&gt;Vue Storefront (@VueStorefront) | Twitter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/piotrkarwatka"&gt;Piotr Karwatka (@piotrkarwatka) | Twitter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/filrakowski"&gt;Filip Rakowski (@filrakowski) | Twitter&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;1 - Vue Storefront - Events&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;2018 May &lt;a href="https://medium.com/@piotrkarwatka/vue-storefront-hackathon-1-0-stable-case-studies-29406050727a"&gt;Vue Storefront Hackathon, 1.0 STABLE, case studies – Piotr Karwatka – Medium&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2018 May &lt;a href="http://go.divante.co/wro-open-source/#lp-pom-block-1029"&gt;Wro Open Source 2018&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;2 - Vue Storefront - Github issues&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/DivanteLtd/vue-storefront/issues?q=is%3Aopen+is%3Aissue+label%3Avs-hackathon"&gt;vue-storefront issues&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;3 - Vue Storefront - Learn&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCkm1F3Cglty3CE1QwKQUhhg"&gt;Vue Storefront - YouTube&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Blog: -&amp;gt; 2018.01.31 &lt;a href="https://medium.com/@piotrkarwatka/vue-storefront-how-to-install-and-integrate-with-magento2-227767dd65b2"&gt;Vue Storefront — how to install and integrate with Magento2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Blog: 2018.01.04 &lt;a href="https://medium.com/@piotrkarwatka/how-to-connect-3rd-party-platform-to-vue-storefront-df9cb30779f6"&gt;How to connect 3rd party platform to Vue Storefront?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Slides: 2018.02.26 &lt;a href="https://www.slideshare.net/FilipRakowski/vue-storefront-basics"&gt;Vue Storefront Basics - Why we created Vue Storefront and how it works&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;vue: PWA front, Magento back &lt;a href="https://github.com/DivanteLtd/vue-storefront"&gt;DivanteLtd/vue-storefront&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;Demo: &lt;a href="https://demo.vuestorefront.io/"&gt;Home Page - Vue Storefront&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DivanteLtd/vue-storefront/blob/master/doc/Installing%20on%20Windows.md"&gt;Installing on Windows&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DivanteLtd/vue-storefront/blob/master/doc/Installing%20on%20Linux%20and%20MacOS.md"&gt;Installing on Linux and MacOS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.linkedin.com/pulse/magento2-nosql-database-pwa-support-piotr-karwatka/"&gt;Magento2 - NoSQL database and PWA support&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DivanteLtd/vue-storefront/blob/master/doc/FAQ%20and%20Receipes.md"&gt;FAQ and Receipes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DivanteLtd/vue-storefront/blob/master/doc/Project%20structure.md"&gt;Project structure&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DivanteLtd/vue-storefront/wiki/Config-file-format-for-vue-storefront"&gt;Config file format for vue storefront&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DivanteLtd/vue-storefront/tree/master/doc"&gt;More docs...&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Vue&lt;/h2&gt;
&lt;h3&gt;Vue Libs&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;vue &lt;a href="https://github.com/topics/shopping-cart?l=vue"&gt;shopping-carts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vue-bulma/nprogress"&gt;vue-bulma/nprogress&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.npmjs.com/package/vue-tags"&gt;vue-tags&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Vue - Learn&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://vuejs.org/v2/guide/installation.html"&gt;Installation — Vue.js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://egghead.io/courses/build-async-vue-js-apps-with-rxjs?utm_source=drip&amp;amp;utm_medium=email&amp;amp;utm_campaign=may2018&amp;amp;utm_term=vue&amp;amp;utm_content=build-async-vue-js-apps-with-rxjs"&gt;Build Async Vue.js Apps with RxJS&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Other&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.dropbox.com/s/8h9lo8ee65oo9y1/front-end-performance-checklist-2018.pdf?dl=0"&gt;front-end-performance-checklist-2018.pdf&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;SEO and PWA: &lt;a href="https://medium.com/progressive-web-apps/2018-state-of-progressive-web-apps-f7517d43ba70"&gt;2018 State of PWA&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="HeadlessApiFirst.md"&gt;Other headless / API first apps&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/topics/ecommerce"&gt;Other ecommerce projects on GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;My &lt;a href="https://github.com/rasor/awesome-tables/blob/master/awesome-cli-js.md#nvm-sets-of-tools---avoiding-version-conficts"&gt;list of npm installs locally&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;OpenShift&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://rasor.github.io/developing-with-openshift.html"&gt;Installing OpenShift&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.openshift.org/latest/minishift/getting-started/quickstart.html#deploy-sample-app"&gt;Deploying&lt;/a&gt; to MiniShift&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The End&lt;/p&gt;</content><category term="#vue"></category><category term="#magento"></category><category term="#webshop"></category><category term="#seo"></category><category term="#pwa"></category><category term="#docker"></category><category term="#git"></category><category term="#yarn"></category><category term="#npm"></category><category term="#nvm"></category></entry><entry><title>Docker for Windows</title><link href="https://rasor.github.io/docker-for-windows.html" rel="alternate"></link><published>2018-05-06T17:00:00+02:00</published><updated>2018-05-21T09:30:00+02:00</updated><author><name>rasor</name></author><id>tag:rasor.github.io,2018-05-06:/docker-for-windows.html</id><summary type="html">&lt;p&gt;For a development project I needed Docker for Windows (D4W).&lt;br&gt;
In this blog I'll install Docker. Playing with it I'll do in another post.  &lt;/p&gt;
&lt;h2&gt;Prerequisite&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Install &lt;a href="https://git-scm.com/downloads"&gt;Git for Windows&lt;/a&gt; - This will install &lt;code&gt;Git Bash&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Optional Install &lt;a href="https://rasor.github.io/curl-cli-on-windows.html"&gt;cUrl CLI on Windows&lt;/a&gt; - This will ensure that you can call a remote end …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;For a development project I needed Docker for Windows (D4W).&lt;br&gt;
In this blog I'll install Docker. Playing with it I'll do in another post.  &lt;/p&gt;
&lt;h2&gt;Prerequisite&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Install &lt;a href="https://git-scm.com/downloads"&gt;Git for Windows&lt;/a&gt; - This will install &lt;code&gt;Git Bash&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Optional Install &lt;a href="https://rasor.github.io/curl-cli-on-windows.html"&gt;cUrl CLI on Windows&lt;/a&gt; - This will ensure that you can call a remote end over SSL&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Install&lt;/h2&gt;
&lt;p&gt;You download &lt;a href="https://store.docker.com/editions/community/docker-ce-desktop-windows"&gt;Docker CE for Windows here&lt;/a&gt;.  &lt;/p&gt;
&lt;p&gt;Docker wants to know if you want to use Windows or Linux containers - Since I'll deploy to Linux in production, I also choose Linux here. Linux will ususally be the cheepest choise in cloud.&lt;br&gt;
The version I installed was 18.03.1-ce-win65.&lt;br&gt;
Note: The installer will log you out to be able to finish.  &lt;/p&gt;
&lt;h2&gt;1st test drive&lt;/h2&gt;
&lt;p&gt;When starting Docker from the Desktop Icon I was met with:&lt;br&gt;
&lt;img alt="Docker will disable VirtualBox" src="img/2018/2018-05-06-Docker4Win1.PNG"&gt;  &lt;/p&gt;
&lt;p&gt;Docker will disable VirtualBox. Oh-oh - I am using VirtualBox for OpenShift - so I don't want that option.&lt;br&gt;
When I press cancel I get:&lt;br&gt;
&lt;img alt="Docker will exit" src="img/2018/2018-05-06-Docker4Win2.PNG"&gt;    &lt;/p&gt;
&lt;p&gt;Damned - I don't have other option than to let the bastard disable VirtualBox - I wonder if this disabling is only for Docker4Windows... I'll bite the grasss and do as I'm told.  &lt;/p&gt;
&lt;h2&gt;2nd test drive&lt;/h2&gt;
&lt;p&gt;Ok, so 2nd time I started Docker I chose OK to enable Hyper-V and Container services. That also required a restart.  &lt;/p&gt;
&lt;p&gt;When it was done enabling and restarting it still needed some time to boot the Docker VM. Meanwhile I could take a look and see what the installation had done.&lt;br&gt;
It had enabled the Windows features Containers and Hyper-V as it told me&lt;br&gt;
&lt;img alt="Container services enabled" src="img/2018/2018-05-06-Docker4Win3.PNG"&gt;    &lt;/p&gt;
&lt;p&gt;It had enabled two Hyper-V Virtual Ethernet Adapters, but my VirtualBox networks remained. I wonder if I easily can switch to VirtualBox then?&lt;br&gt;
&lt;img alt="Docker VM Network enabled" src="img/2018/2018-05-06-Docker4Win5.PNG"&gt;    &lt;/p&gt;
&lt;p&gt;When it was done starting the Docker VM I could see it running in Hyper-V manager&lt;br&gt;
&lt;img alt="Hyper-V manager" src="img/2018/2018-05-06-Docker4Win6.PNG"&gt;   &lt;/p&gt;
&lt;p&gt;It was called MobyLinuxVM&lt;br&gt;
&lt;img alt="MobyLinuxVM" src="img/2018/2018-05-06-Docker4Win7.PNG"&gt;   &lt;/p&gt;
&lt;p&gt;Docker4Win wanted me to login to Docker Cloud. Docker Cloud uses Docker Hub as image registry, so even though I won't use Docker Cloud at this time, I'll need to be logged in to Docker.&lt;br&gt;
&lt;img alt="Docker for windows GUI" src="img/2018/2018-05-06-Docker4Win4.PNG"&gt;   &lt;/p&gt;
&lt;p&gt;Docker4Win GUI disappears, when you log in - but then you go to TaskBar-Notification area to find Docker4Win. Choose Settings&lt;br&gt;
&lt;img alt="Docker for windows GUI" src="img/2018/2018-05-06-Docker4Win8.PNG"&gt;   &lt;/p&gt;
&lt;p&gt;I unchecked &lt;code&gt;Start Docker when you log in&lt;/code&gt;. Then I hope I can be using VirtualBox, too. I am unsure if I have to disable Hyper-V and/or Container services before that is possible. I'll come back with an update later. &lt;/p&gt;
&lt;p&gt;After boot Docker VM will not be running, but you'll have docker client somewhere on the PC:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker -v
&lt;span class="c1"&gt;# Docker version 18.03.1-ce, build 9ee9f40&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;But while the VM is not running you'll get an error, when calling the VM:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker images
&lt;span class="c1"&gt;# error during connect: Get http://%2F%2F.%2Fpipe%2Fdocker_engine/v1.37/images/json: open //./pipe/docker_engine: The system cannot find the file specified. In the default daemon configuration on Windows, the docker client must be run elevated to connect. This error may also indicate that the docker daemon is not running.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Workflow&lt;/h2&gt;
&lt;p&gt;After boot you'll be able to do like this:  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Start D4W from the Desktop icon - and wait for the Docker animation in the taskbar-notofication-area to end - then Docker VM has started&lt;/li&gt;
&lt;li&gt;Call D4W:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker images
&lt;span class="c1"&gt;# REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Do some more work from bash e.g. read &lt;a href="https://www.syncfusion.com/ebooks/docker_succinctly"&gt;Docker Succinctly&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;AddOns&lt;/h2&gt;
&lt;p&gt;The Docker taksbar menu gives you an option called Kitematic. When you select the menu you'll &lt;a href="https://download.docker.com/kitematic/Kitematic-Windows.zip"&gt;start downloading Kitematic&lt;/a&gt;.&lt;br&gt;
Kitematic is a GUI on top of your Docker CLI.&lt;br&gt;
Here I even have the option to switch back to VirtualBox. I'll do that later.&lt;br&gt;
&lt;img alt="Kitematic settings" src="img/2018/2018-05-06-Docker4Win9.PNG"&gt;   &lt;/p&gt;
&lt;p&gt;I wonder if that switch will work - changing shell from powershell to bash did not work - Kitematic is in time og writing only in Alpha.&lt;/p&gt;
&lt;h2&gt;Links&lt;/h2&gt;
&lt;h3&gt;Learn&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.syncfusion.com/ebooks/docker_succinctly"&gt;Syncfusion Free Ebooks | Docker Succinctly&lt;/a&gt; (2018)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developers.redhat.com/cheat-sheets/containers/"&gt;Containers Cheat Sheet&lt;/a&gt; (2017)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Hosts&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://cloud.docker.com/"&gt;Docker Cloud&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;The Public Docker Image Registry &lt;a href="https://hub.docker.com/"&gt;Docker Hub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Other installation&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://rasor.github.io/curl-cli-on-windows.html"&gt;cUrl CLI on Windows&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.jayway.com/2017/04/19/running-docker-on-bash-on-windows/"&gt;Running Docker containers on Bash on Windows&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DivanteLtd/vue-storefront/blob/master/doc/Installing%20on%20Windows.md"&gt;vue-storefront Installing on Windows.md&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The End.&lt;/p&gt;</content><category term="#docker"></category><category term="#hyperv"></category><category term="#virtualbox"></category></entry><entry><title>Developing with OpenShift</title><link href="https://rasor.github.io/developing-with-openshift.html" rel="alternate"></link><published>2018-04-15T15:00:00+02:00</published><updated>2018-04-24T21:00:00+02:00</updated><author><name>rasor</name></author><id>tag:rasor.github.io,2018-04-15:/developing-with-openshift.html</id><summary type="html">&lt;p&gt;It has become time (for me) to explore OpenShift.
OpenShift is a Build and Deployment block using Kubernetes and Docker as deployment target. In other words: It connects GitHub and DockerHub to your cloud provider. It allows you to do do on-premise deployment and to monitor and operate your cloud …&lt;/p&gt;</summary><content type="html">&lt;p&gt;It has become time (for me) to explore OpenShift.
OpenShift is a Build and Deployment block using Kubernetes and Docker as deployment target. In other words: It connects GitHub and DockerHub to your cloud provider. It allows you to do do on-premise deployment and to monitor and operate your cloud.
In this blog I'll run it (my own little cloud) locally on Windows.&lt;/p&gt;
&lt;h2&gt;Why OpenShift?&lt;/h2&gt;
&lt;p&gt;There are four good reasons seen with my dev glasses on: &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;OpenShift is my local cloud. I can build it locally and replicate it to a real cloud, when I see it is working as intended.&lt;/li&gt;
&lt;li&gt;I don't have to pay cloud resources for a test envir except for when testers needs it - I'll delete it, when it is not in use.&lt;/li&gt;
&lt;li&gt;Microservices like Redis and MongoDB - I can have it installed inside my OpenShift envir - just by fetching them as containers from DockerHub. Once I know how there'll not be any hassle and I won't be forsed to use SaaS services.&lt;/li&gt;
&lt;li&gt;When you build your OpenShift environment with Ansible it becomes an environment you can deploy to any cloud provider.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Of course there'll be pros and cons depending on your taste and on other requirement, but OpenShift is a great option.&lt;/p&gt;
&lt;h2&gt;So how to get started with OpenShift?&lt;/h2&gt;
&lt;h3&gt;Which editions (products) are awailbale?&lt;/h3&gt;
&lt;p&gt;Currently (spring 2018) you get a good helicopter view from the free eBook &lt;a href="https://www.openshift.com/promotions/deploying-to-openshift.html"&gt;Deploying to OpenShift&lt;/a&gt; - Preface - Online Resources.&lt;br&gt;
From there you'll learn that there are two editions (called products) of OpenShift:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;OpenShift Origin&lt;/code&gt; - This is the OpenShift repo, that you can also use while doing local dev.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;OpenShift Container Platform&lt;/code&gt; - An Enterprise version aimed for on-premise hosting of your own cloud.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;On the &lt;a href="https://docs.openshift.com/"&gt;OpenShift documentation&lt;/a&gt; homepage, you'll learn that there are also two more editions (products):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;OpenShift Dedicated&lt;/code&gt; - Redhat's managed public cloud edition of &lt;code&gt;OpenShift Container Platform&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;OpenShift Online&lt;/code&gt; - I think this is like the dedicated edition (single tenant) except that the VMs are not dedicated to only one customer, but are multi tenant.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The latter two editions seems to be clouds hosted by RedHat.&lt;/p&gt;
&lt;p&gt;OpenShift is a managed PaaS, that must be deployed to some IaaS &lt;a href="https://developers.redhat.com/products/cdk/overview/"&gt;explained here&lt;/a&gt; - Quote:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The containers you build can be easily deployed on any Red Hat container host or platform, including: &lt;code&gt;Red Hat Enterprise Linux&lt;/code&gt;, &lt;code&gt;Red Hat Enterprise Linux Atomic Host&lt;/code&gt;, and our platform-as-a-service solution, &lt;code&gt;OpenShift Container Platform 3&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I think this IaaS stack often will be RedHat OpenStack and probably also is it, when you are using RedHat Enterprise Linux as the container host.&lt;/p&gt;
&lt;h3&gt;How do I start playing with the toy?&lt;/h3&gt;
&lt;p&gt;You can locally play with either &lt;code&gt;OpenShift Origin&lt;/code&gt; or &lt;code&gt;OpenShift Container Platform&lt;/code&gt;.  &lt;/p&gt;
&lt;p&gt;With &lt;code&gt;OpenShift Origin&lt;/code&gt; you have &lt;a href="https://github.com/sclorg/nodejs-ex#nodejs-sample-app-on-openshift"&gt;5 options&lt;/a&gt;:  &lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;code&gt;OpenShift Origin&lt;/code&gt; Option&lt;/th&gt;
&lt;th&gt;Win/Mac/Lin&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1.&lt;/td&gt;
&lt;td&gt;Running a VM with &lt;code&gt;Vagrant&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;W/M/L&lt;/td&gt;
&lt;td&gt;*1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2.&lt;/td&gt;
&lt;td&gt;Running a VM managed by &lt;code&gt;MiniShift&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;W/M/L&lt;/td&gt;
&lt;td&gt;*1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3.&lt;/td&gt;
&lt;td&gt;Starting a &lt;code&gt;Docker&lt;/code&gt; container&lt;/td&gt;
&lt;td&gt;L (Fedora, CentOS, RHEL)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4.&lt;/td&gt;
&lt;td&gt;Downloading the &lt;code&gt;binary&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;L&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5.&lt;/td&gt;
&lt;td&gt;Running an &lt;code&gt;Ansible&lt;/code&gt; playbook&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;*1: &lt;code&gt;MiniShift&lt;/code&gt; is a newer method for local development than the method used in eBook &lt;code&gt;OpenShift for Developers&lt;/code&gt; called &lt;code&gt;Vagrant all-in-one virtual machine&lt;/code&gt;.&lt;br&gt;
In eBook &lt;code&gt;DevOps with OpenShift&lt;/code&gt; a local all-in-one cluster is started using &lt;code&gt;oc cluster up&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;In the table below there are some links provided by OpenShift:  &lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;code&gt;Origin&lt;/code&gt;&lt;/th&gt;
&lt;th&gt;&lt;code&gt;Container Platform&lt;/code&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Download and Run Openshift locally&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.openshift.org/minishift/"&gt;&lt;code&gt;MiniShift&lt;/code&gt;&lt;/a&gt; *1&lt;/td&gt;
&lt;td&gt;&lt;a href="https://developers.redhat.com/products/cdk/overview/"&gt;&lt;code&gt;Container Development Kit (CDK)&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Test Hosted Openshift&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://aws.amazon.com/testdrive/redhat/"&gt;Red Hat Test Drive&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Install Walkthrough&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://docs.openshift.com/container-platform/3.9/getting_started/install_openshift.html"&gt;Container Platform 3.9&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Configure Walkthrough&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://docs.openshift.com/container-platform/3.9/getting_started/configure_openshift.html"&gt;Container Platform 3.9&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Web Console&lt;/code&gt; Walkthrough&lt;/td&gt;
&lt;td&gt;&lt;a href="https://docs.openshift.org/3.9/getting_started/developers_console.html"&gt;Origin 3.9&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://docs.openshift.com/container-platform/3.9/getting_started/developers_console.html"&gt;Container Platform 3.9&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;CLI&lt;/code&gt; Walkthrough&lt;/td&gt;
&lt;td&gt;&lt;a href="https://docs.openshift.org/3.9/getting_started/developers_cli.html"&gt;Origin 3.9&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://docs.openshift.com/container-platform/3.9/getting_started/developers_cli.html"&gt;Container Platform 3.9&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;So there are lots of options to play with it locally. I'll use &lt;code&gt;MiniShift&lt;/code&gt;, which seems to be the simplest option.&lt;/p&gt;
&lt;h3&gt;What is in the box?&lt;/h3&gt;
&lt;p&gt;Fig 1. When you run the box there will be a REST API enabling you to manage the box (Drawing by &lt;a href="https://www.levvel.io/author/james-buckett"&gt;James Bucket&lt;/a&gt; hosted by levvel.io)
&lt;a href="https://www.levvel.io/our-ideas/differences-between-kubernetes-and-openshift"&gt;&lt;img alt="OpenShift access and control" src="https://cdn.levvel.io/blog_content/James+Buckett+Differences+Article/Differences2.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Fig 2. Your code (in docker containers) will be deployed to Kubernetes Pods inside the box (Drawing by &lt;a href="https://www.levvel.io/author/james-buckett"&gt;James Bucket&lt;/a&gt; hosted by levvel.io)&lt;br&gt;
&lt;a href="https://www.levvel.io/our-ideas/differences-between-kubernetes-and-openshift"&gt;&lt;img alt="OpenShift project (Namespace)" src="https://cdn.levvel.io/blog_content/James+Buckett+Differences+Article/Differences1.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If you compare Fig 2. to a deployment in GCP without OpenShift, then you'll notice that OpenShift takes all the pieces and put them into one box.&lt;br&gt;
So if you build your OpenShift environment (including DBs and other microservices) with Ansible, then you can deploy it to any cloud provider - you environment is now 100% portable.&lt;br&gt;
Fig 3. Continuous Deployment to Kubernetes Engine using Jenkins (Drawing hosted by google.com)&lt;br&gt;
&lt;a href="https://cloud.google.com/solutions/continuous-delivery-jenkins-kubernetes-engine?hl=en"&gt;&lt;img alt="Continuous Deployment to Kubernetes Engine using Jenkins" src="https://cloud.google.com/solutions/images/jenkins-cd-container-engine.svg"&gt;&lt;/a&gt;  &lt;/p&gt;
&lt;p&gt;Fig 4. RedHats own picture of OpenShift runtime environment (Drawing by &lt;a href="https://blog.openshift.com/author/mikebarrett/"&gt;Mike Barret&lt;/a&gt; hosted by openshift.com)
&lt;a href="https://blog.openshift.com/openshift-enterprise-3-evolving-paas-future/"&gt;&lt;img alt="OpenShift runtime environment" src="https://blog.openshift.com/wp-content/uploads/arch-diagram.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Installation&lt;/h2&gt;
&lt;h3&gt;VirtualBox&lt;/h3&gt;
&lt;p&gt;I am installing on Windows 10.&lt;br&gt;
Openshift needs a hypervisor. There are two options: Hyper-v or VirtualBox.&lt;br&gt;
VirtualBox is the easy one to handle is my experince. It is also an option that can be chosen both on Windows, Linux and Mac.&lt;br&gt;
I have used hypervisors some years ago on my local PC, so I know that I have already enabled &lt;code&gt;Intel Virtualization Technology&lt;/code&gt; (also known as &lt;code&gt;Intel VT&lt;/code&gt;) in the Bios. It was required for Hyper-v, so I assume it is either beneficial or required for VirtualBox, too.&lt;br&gt;
Notice: Not all PC's comes with Intel VT.  &lt;/p&gt;
&lt;p&gt;When you have &lt;a href="https://www.virtualbox.org/wiki/Downloads"&gt;downloaded VirtualBox&lt;/a&gt; and start to install it you are told that it will disconnect your network (why did I also just start a long running upload? - I'll abort that for a while)&lt;br&gt;
Fig 5. Your network will disconnect&lt;br&gt;
&lt;img alt="Will disconnect network" src="img/2018/2018-04-15-OpenShift1.PNG"&gt;&lt;/p&gt;
&lt;p&gt;After restart I had an extra network adapter&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ipconfig /all

&lt;span class="c1"&gt;# output:&lt;/span&gt;
&lt;span class="c1"&gt;# Ethernet adapter VirtualBox Host-Only Network:&lt;/span&gt;
&lt;span class="c1"&gt;#   Connection-specific DNS Suffix  . :&lt;/span&gt;
&lt;span class="c1"&gt;#   Description . . . . . . . . . . . : VirtualBox Host-Only Ethernet Adapter&lt;/span&gt;
&lt;span class="c1"&gt;#   IPv4 Address. . . . . . . . . . . : 192.168.56.1(Preferred)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;MiniShift&lt;/h3&gt;
&lt;p&gt;I downloded and unzipped &lt;a href="https://github.com/minishift/minishift/releases"&gt;minishift/minishift&lt;/a&gt; for Windows.&lt;br&gt;
It could be unzipped to anywhere. I chose &lt;code&gt;C:\Program Files\&lt;/code&gt;, so after unzip the MiniShift path was &lt;code&gt;C:\Program Files\minishift-1.15.1-windows-amd64&lt;/code&gt;. That path had to be added to the enviroment %path%.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Verify minishift can be reached from any local path&lt;/span&gt;
&lt;span class="c1"&gt;# Note: On Windows minishift cannot be executed from a network drive&lt;/span&gt;
minishift --help
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If any issues consult &lt;a href="https://docs.openshift.org/latest/minishift/getting-started/installing.html"&gt;Installing Minishift&lt;/a&gt; guide.&lt;/p&gt;
&lt;h2&gt;Test driving MiniShift&lt;/h2&gt;
&lt;h3&gt;&lt;a href="https://docs.openshift.org/latest/minishift/getting-started/quickstart.html#starting-minishift"&gt;Start&lt;/a&gt; and stop&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Optionally Start hypervisor - if you don&amp;#39;t start the GUI, it will be started by MiniShift as headless using VBoxHeadless.exe&lt;/span&gt;
C:&lt;span class="se"&gt;\P&lt;/span&gt;rogram Files&lt;span class="se"&gt;\O&lt;/span&gt;racle&lt;span class="se"&gt;\V&lt;/span&gt;irtualBox&lt;span class="se"&gt;\V&lt;/span&gt;irtualBox.exe
&lt;span class="c1"&gt;# Start minishift&lt;/span&gt;
minishift start --vm-driver&lt;span class="o"&gt;=&lt;/span&gt;virtualbox
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Output&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;-- Starting profile &amp;#39;minishift&amp;#39;
-- Checking if requested OpenShift version &amp;#39;v3.7.2&amp;#39; is valid ... OK
-- Checking if requested OpenShift version &amp;#39;v3.7.2&amp;#39; is supported ... OK
-- Checking if requested hypervisor &amp;#39;virtualbox&amp;#39; is supported on this platform ... OK
-- Checking if VirtualBox is installed ... OK
-- Checking the ISO URL ... OK
-- Downloading OpenShift binary &amp;#39;oc&amp;#39; version &amp;#39;v3.7.2&amp;#39;
 38.44 MiB / 38.44 MiB [=======================================================================================================================================] 100.00% 0s-- Downloading OpenShift v3.7.2 checksums ... OK
-- Checking if provided oc flags are supported ... OK
-- Starting local OpenShift cluster using &amp;#39;virtualbox&amp;#39; hypervisor ...
-- Minishift VM will be configured with ...
   Memory:    2 GB
   vCPUs :    2
   Disk size: 20 GB

   Downloading ISO &amp;#39;https://github.com/minishift/minishift-b2d-iso/releases/download/v1.2.0/minishift-b2d.iso&amp;#39;
 40.00 MiB / 40.00 MiB [=======================================================================================================================================] 100.00% 0s
-- Starting Minishift VM ...................................... OK
-- Checking for IP address ... OK
-- Checking for nameservers ... OK
-- Checking if external host is reachable from the Minishift VM ...
   Pinging 8.8.8.8 ... OK
-- Checking HTTP connectivity from the VM ...
   Retrieving http://minishift.io/index.html ... OK
-- Checking if persistent storage volume is mounted ... OK
-- Checking available disk space ... 0% used OK
   Importing &amp;#39;openshift/origin:v3.7.2&amp;#39; . CACHE MISS
   Importing &amp;#39;openshift/origin-docker-registry:v3.7.2&amp;#39; . CACHE MISS
   Importing &amp;#39;openshift/origin-haproxy-router:v3.7.2&amp;#39; . CACHE MISS
-- OpenShift cluster will be configured with ...
   Version: v3.7.2
Starting OpenShift using openshift/origin:v3.7.2 ...
Pulling image openshift/origin:v3.7.2
Pulled 1/4 layers, 26% complete
Pulled 2/4 layers, 78% complete
Pulled 3/4 layers, 90% complete
Pulled 4/4 layers, 100% complete
Extracting
Image pull complete
OpenShift server started.

The server is accessible via web console at:
    https://192.168.99.100:8443

You are logged in as:
    User:     developer
    Password: &amp;lt;any value&amp;gt;

To login as administrator:
    oc login -u system:admin

-- Exporting of OpenShift images is occuring in background process with pid 11256.
&amp;gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If your screen looks like above the downloded minishift image wil be cached to&lt;br&gt;
&lt;code&gt;c:\users\youruserid\.minishift\cache\iso\b2d\v1.2.0\&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Fig 6. In VirtualBox you'll see the VM running:
&lt;img alt="Minishift running" src="img/2018/2018-04-15-OpenShift2.PNG"&gt;&lt;/p&gt;
&lt;p&gt;If you have trouble consult &lt;a href="https://docs.openshift.org/latest/minishift/getting-started/quickstart.html"&gt;Minishift Quickstart&lt;/a&gt; and &lt;a href="https://docs.openshift.org/latest/minishift/troubleshooting/troubleshooting-getting-started.html#minshift-startup-check-failed"&gt;Troubleshooting Minishift&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;As you could see from the output you got an url to the &lt;a href="https://192.168.99.100:8443/console/"&gt;Web Console: https://192.168.99.100:8443/&lt;/a&gt; that was shown in Fig 1.&lt;br&gt;
Fig 7. Log in to Minishift web console with user &lt;code&gt;developer&lt;/code&gt; and &lt;code&gt;&amp;lt;any key&amp;gt;&lt;/code&gt; as psw.
&lt;img alt="Log in to Minishift Web Console" src="img/2018/2018-04-15-OpenShift3.PNG"&gt;  &lt;/p&gt;
&lt;p&gt;Fig 8. MiniShift Web Console
&lt;img alt="MiniShift Web Console" src="img/2018/2018-04-15-OpenShift4.PNG"&gt;&lt;/p&gt;
&lt;p&gt;OK, we're in. How about turning off?&lt;/p&gt;
&lt;p&gt;VirtualBox has following options:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Action&lt;/th&gt;
&lt;th&gt;Keybord shortcut&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Pause&lt;/td&gt;
&lt;td&gt;Ctrl-P&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Reset&lt;/td&gt;
&lt;td&gt;Ctrl-T&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Close - save state&lt;/td&gt;
&lt;td&gt;Ctrl-V&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ACPI Shutdown&lt;/td&gt;
&lt;td&gt;Ctrl-H&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Power Off&lt;/td&gt;
&lt;td&gt;Ctrl-F&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;You could accidently power off the VM. No worries - you can just start from scratch with minishift start ... - as before.
But MiniShift has a corresponding command for stopping:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;minishift stop
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Did you notice during stop - the image is a &lt;a href="https://github.com/boot2docker/boot2docker"&gt;boot2docker&lt;/a&gt; - which apparently is what b2d is short for. On their githup page they recommend that on Windows one should rather use &lt;a href="https://www.docker.com/docker-windows"&gt;Docker For Windows&lt;/a&gt;. I wonder if that will be the default image, if you choose hyper-v as hyperviser...&lt;/p&gt;
&lt;h3&gt;The oc CLI&lt;/h3&gt;
&lt;p&gt;In Fig 1. you saw three clients for MiniShift: Dev CLI, Adm CLI and Web Console.&lt;br&gt;
I think the Dev and Adm CLI is one and same - just having different roles using it. At least I know that for CLI we have the &lt;code&gt;oc&lt;/code&gt; command.&lt;br&gt;
But where is it?&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Start again&lt;/span&gt;
minishift start --vm-driver&lt;span class="o"&gt;=&lt;/span&gt;virtualbox
&lt;span class="c1"&gt;# What does status print?&lt;/span&gt;
minishift status
&lt;span class="c1"&gt;# Output:&lt;/span&gt;
&lt;span class="c1"&gt;# Minishift:  Running&lt;/span&gt;
&lt;span class="c1"&gt;# Profile:    minishift&lt;/span&gt;
&lt;span class="c1"&gt;# OpenShift:  Running (openshift v3.7.2+5eda3fa-5)&lt;/span&gt;
&lt;span class="c1"&gt;# DiskUsage:  8% of 17.9G&lt;/span&gt;

&lt;span class="c1"&gt;# Print what to exec to add oc to your %path%&lt;/span&gt;
minishift oc-env
&lt;span class="c1"&gt;# Output&lt;/span&gt;
&lt;span class="c1"&gt;# export PATH=&amp;quot;C:\Users\youruserid\.minishift\cache\oc\v3.7.2\windows:$PATH&amp;quot;&lt;/span&gt;
&lt;span class="c1"&gt;# Run this command to configure your shell:&lt;/span&gt;
&lt;span class="c1"&gt;# eval $(minishift oc-env)&lt;/span&gt;

&lt;span class="c1"&gt;# Nice - then let&amp;#39;s do what it tells us to do. This works at least from the Git bash shell:&lt;/span&gt;
&lt;span class="nb"&gt;eval&lt;/span&gt; &lt;span class="k"&gt;$(&lt;/span&gt;minishift oc-env&lt;span class="k"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Did it work?&lt;/span&gt;
oc --help
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Output: &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;OpenShift Client

This client helps you develop, build, deploy, and run your applications on any OpenShift or Kubernetes compatible platform. It also includes the administrative commands for managing a cluster under the &amp;#39;adm&amp;#39; subcommand.

Basic Commands:
  types           An introduction to concepts and types
  login           Log in to a server
  new-project     Request a new project
  new-app         Create a new application
  status          Show an overview of the current project
  project         Switch to another project
  projects        Display existing projects
  explain         Documentation of resources
  cluster         Start and stop OpenShift cluster

Build and Deploy Commands:
  rollout         Manage a Kubernetes deployment or OpenShift deployment config
  rollback        Revert part of an application back to a previous deployment
  new-build       Create a new build configuration
  start-build     Start a new build
  cancel-build    Cancel running, pending, or new builds
  import-image    Imports images from a Docker registry
  tag             Tag existing images into image streams

Application Management Commands:
  get             Display one or many resources
  describe        Show details of a specific resource or group of resources
  edit            Edit a resource on the server
  set             Commands that help set specific features on objects
  label           Update the labels on a resource
  annotate        Update the annotations on a resource
  expose          Expose a replicated application as a service or route
  delete          Delete one or more resources
  scale           Change the number of pods in a deployment
  autoscale       Autoscale a deployment config, deployment, replication controller, or replica set
  secrets         Manage secrets
  serviceaccounts Manage service accounts in your project

Troubleshooting and Debugging Commands:
  logs            Print the logs for a resource
  rsh             Start a shell session in a pod
  rsync           Copy files between local filesystem and a pod
  port-forward    Forward one or more local ports to a pod
  debug           Launch a new instance of a pod for debugging
  exec            Execute a command in a container
  proxy           Run a proxy to the Kubernetes API server
  attach          Attach to a running container
  run             Run a particular image on the cluster
  cp              Copy files and directories to and from containers.

Advanced Commands:
  adm             Tools for managing a cluster
  create          Create a resource by filename or stdin
  replace         Replace a resource by filename or stdin
  apply           Apply a configuration to a resource by filename or stdin
  patch           Update field(s) of a resource using strategic merge patch
  process         Process a template into list of resources
  export          Export resources so they can be used elsewhere
  extract         Extract secrets or config maps to disk
  idle            Idle scalable resources
  observe         Observe changes to resources and react to them (experimental)
  policy          Manage authorization policy
  auth            Inspect authorization
  convert         Convert config files between different API versions
  import          Commands that import applications
  image           Useful commands for managing images

Settings Commands:
  logout          End the current server session
  config          Change configuration files for the client
  whoami          Return information about the current session
  completion      Output shell completion code for the specified shell (bash or zsh)

Other Commands:
  help            Help about any command
  plugin          Runs a command-line plugin
  version         Display client and server versions

Use &amp;quot;oc &amp;lt;command&amp;gt; --help&amp;quot; for more information about a given command.
Use &amp;quot;oc options&amp;quot; for a list of global command-line options (applies to all commands).
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If you save (&lt;a href="https://gist.github.com/rasor/2060037307731d2c2bb740e503c951bb"&gt;or download&lt;/a&gt;) the following to &lt;code&gt;C:\Program Files\minishift-1.15.1-windows-amd64\shiftcli.sh&lt;/code&gt;, then you can start your minishift from Git Bash with &lt;code&gt;shiftcli.sh&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/bin/bash&lt;/span&gt;
&lt;span class="c1"&gt;#shiftcli.sh&lt;/span&gt;
&lt;span class="c1"&gt;# Start a VM and start an OpenShift Cluster inside the VM&lt;/span&gt;
minishift start --vm-driver&lt;span class="o"&gt;=&lt;/span&gt;virtualbox
minishift status
&lt;span class="c1"&gt;# Enable oc - the CLI&lt;/span&gt;
&lt;span class="nb"&gt;eval&lt;/span&gt; &lt;span class="k"&gt;$(&lt;/span&gt;minishift oc-env&lt;span class="k"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# print oc cmds, if you prefer CLI to the Web Console&lt;/span&gt;
oc --help
&lt;span class="c1"&gt;# optionally start Web Console if you like that better than the CLI&lt;/span&gt;
start chrome https://192.168.99.100:8443/ 

&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;minishift stop #when done&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Next: Deploying to MiniShift&lt;br&gt;
... to be continued in Part 2&lt;/p&gt;
&lt;h1&gt;Links&lt;/h1&gt;
&lt;h2&gt;References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.openshift.org/latest/minishift/command-ref/minishift.html"&gt;MiniShift - Command Reference&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.openshift.org/latest/cli_reference/index.html"&gt;oc CLI Reference&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.openshift.org/latest/apb_devel/index.html"&gt;apb CLI - Ansible Playbook Bundle Development Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developers.redhat.com/downloads/"&gt;Downloads | Red Hat Developer Program&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Getting Started&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.openshift.com/"&gt;OpenShift Blog&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.openshift.com/announcing-net-core-2-0-support-openshift/"&gt;Announcing .NET Core 2.0 Support for OpenShift&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.openshift.com/asp-net-on-openshift-getting-started-in-asp-net/"&gt;ASP.NET on OpenShift: Getting started in ASP.NET&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developers.redhat.com/blog/2017/10/11/running-nuget-server-openshift/"&gt;Running a NuGet server on OpenShift&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developers.redhat.com/products/dotnet/overview/"&gt;.NET Core 2.0 Overview&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developers.redhat.com/topics/dotnet/"&gt;.NET Core 2.0 Topics&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://commons.openshift.org/"&gt;OpenShift Commons&lt;/a&gt; - a community&lt;ul&gt;
&lt;li&gt;&lt;a href="https://commons.openshift.org/sig/Openshift.NET.html"&gt;OpenShift .NET Special Interest Group&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://commons.openshift.org/events.html"&gt;OpenShift Events&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Free eBook 1: &lt;a href="https://www.openshift.com/promotions/for-developers.html"&gt;OpenShift for Developers&lt;/a&gt; (2016)&lt;/li&gt;
&lt;li&gt;Free eBook 2: &lt;a href="https://www.openshift.com/promotions/devops-with-openshift.html"&gt;DevOps with OpenShift&lt;/a&gt; (2017)&lt;ul&gt;
&lt;li&gt;&lt;a href="https://12factor.net/"&gt;The Twelve-Factor App &lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Free eBook 3: &lt;a href="https://www.openshift.com/promotions/deploying-to-openshift.html"&gt;Deploying to OpenShift&lt;/a&gt; (2018)&lt;/li&gt;
&lt;li&gt;Free eBook 4: &lt;a href="https://developers.redhat.com/promotions/dot-net-core/"&gt;Transitioning to .NET Core on Red Hat Enterprise Linux&lt;/a&gt; (2016)&lt;/li&gt;
&lt;li&gt;More eBooks: &lt;a href="https://developers.redhat.com/search/?f=type~book&amp;amp;s=most-recent"&gt;Search Results Red Hat Developers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Cheat Sheet: &lt;a href="https://developers.redhat.com/cheat-sheets/red-hat-openshift-container-platform/"&gt;Red Hat OpenShift Container Platform&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Cheat Sheet: &lt;a href="https://developers.redhat.com/cheat-sheets/net-core-red-hat-enterprise-linux/"&gt;.NET Core 2.0 on Red Hat Enterprise Linux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;More Cheat Sheets: &lt;a href="https://developers.redhat.com/search/?f=type~cheatsheet&amp;amp;s=most-recent"&gt;Search Results Red Hat Developers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://learn.openshift.com/"&gt;OpenShift: Interactive Learning Portal&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;Above is based on &lt;a href="https://katacoda.com/"&gt;Katacoda - Interactive Learning Platform&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Old &lt;a href="https://rasor.wordpress.com/2013/11/26/cloud-services/"&gt;Cloud&lt;/a&gt; landscape anno 2013 - from my old blog.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The End&lt;/p&gt;</content><category term="#openshift"></category><category term="#docker"></category><category term="#kubernetes"></category><category term="#redhat"></category><category term="#paas"></category><category term="#virtualbox"></category><category term="#ansible"></category></entry><entry><title>Dependency management in Angular CLI - Lib: A-Frame</title><link href="https://rasor.github.io/dependency-management-in-angular-cli-lib-a-frame.html" rel="alternate"></link><published>2018-03-29T22:00:00+02:00</published><updated>2018-05-12T03:00:00+02:00</updated><author><name>rasor</name></author><id>tag:rasor.github.io,2018-03-29:/dependency-management-in-angular-cli-lib-a-frame.html</id><summary type="html">&lt;p&gt;Using 3rd party libraries in Angular 2+ takes a while to become friends with.
In this blog the Virtual Reality library &lt;a href="https://aframe.io/"&gt;A-Frame&lt;/a&gt; is what I want to use together with Angular CLI (Currently using Ng core: 5.2.0, Ng cli: 1.7.3).&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Code from the post can be …&lt;/em&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;Using 3rd party libraries in Angular 2+ takes a while to become friends with.
In this blog the Virtual Reality library &lt;a href="https://aframe.io/"&gt;A-Frame&lt;/a&gt; is what I want to use together with Angular CLI (Currently using Ng core: 5.2.0, Ng cli: 1.7.3).&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Code from the post can be found &lt;a href="https://github.com/rasor/ng-maze-vr-blank"&gt;here&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;h2&gt;Problem #1 - Angular by default expects to know all html elements&lt;/h2&gt;
&lt;p&gt;Given some A-Frame html (in this case separated in its own ng component) - aframe-vr.component.html having selector: 'aframe-vr' in class AframeVrComponent&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c"&gt;&amp;lt;!-- src/app/components/aframe-vr.component.html --&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;a-scene&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;a-box&lt;/span&gt; &lt;span class="na"&gt;position&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;-1 0.5 -4&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;scale&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;0.25 0.5 1&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;rotation&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;-45 0 0&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;#4CC3D9&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;a-box&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;a-plane&lt;/span&gt; &lt;span class="na"&gt;position&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;0 -1 -4&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;rotation&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;-45 0 0&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;width&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;15&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;height&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;80&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;#7BC8A4&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;a-plane&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;a-sky&lt;/span&gt; &lt;span class="na"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;#ECECEC&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;a-sky&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;a-scene&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Angular will complain:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gd"&gt;--- console ---&lt;/span&gt;
Uncaught Error: Template parse errors:
&amp;#39;a-box&amp;#39; is not a known element:
1. If &amp;#39;a-box&amp;#39; is an Angular component, then verify that it is part of this module.
2. If &amp;#39;a-box&amp;#39; is a Web Component then add &amp;#39;CUSTOM_ELEMENTS_SCHEMA&amp;#39; to the &amp;#39;@NgModule.schemas&amp;#39; of this component to suppress this message. (&amp;quot;&amp;lt;a-scene&amp;gt;
  [ERROR -&amp;gt;]&amp;lt;a-box position=&amp;quot;-1 0.5 -4&amp;quot; scale=&amp;quot;0.25 0.5 1&amp;quot; rotation=&amp;quot;-45 0 0&amp;quot; color=&amp;quot;#4CC3D9&amp;quot;&amp;gt;&amp;lt;/a-box&amp;gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Solution #1.1&lt;/h3&gt;
&lt;p&gt;And as it says there is an easy fix:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;// --- app.module.ts ---&lt;/span&gt;
&lt;span class="kr"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;CUSTOM_ELEMENTS_SCHEMA&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="nx"&gt;from&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;@angular/core&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;@NgModule&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="c1"&gt;// Allow elements not to be compiled by Angular &lt;/span&gt;
  &lt;span class="nx"&gt;schemas&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;CUSTOM_ELEMENTS_SCHEMA&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Problem #2 - You cannot load A-Frame in the main bundle&lt;/h2&gt;
&lt;p&gt;I want to load A-Frame just before the component from above.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;// --- app.module.ts ---&lt;/span&gt;
&lt;span class="c1"&gt;// Require aframe in main bundle before an aframe component is loaded&lt;/span&gt;
&lt;span class="kr"&gt;import&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;aframe&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kr"&gt;import&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;aframe-extras&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kr"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;AframeVrComponent&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="nx"&gt;from&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;./components/aframe-vr/aframe-vr.component&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;In other words - I want to load A-Frame in the main bundle.  &lt;/p&gt;
&lt;h3&gt;Result #2&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gd"&gt;--- console ---&lt;/span&gt;
zone.js:2803 Uncaught TypeError: Cannot assign to read only property &amp;#39;attributeChangedCallback&amp;#39; of object &amp;#39;[object HTMLElement]&amp;#39;
    at eval (zone.js:2803)
    at Array.forEach (&amp;lt;anonymous&amp;gt;)
    at HTMLDocument.document.registerElement (`zone.js`:2789)
    at module.exports.registerElement (`aframe-master.js`:74843)
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Sample &lt;a href="https://github.com/rasor/ng-maze-vr-blank/tree/69b38f4b340fe14d1676e2749f78061e24254ac8"&gt;ng-maze-vr-blank/commit 4&lt;/a&gt; demonstrates the problem.  &lt;/p&gt;
&lt;p&gt;If you view-page-source of the page you will see&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c"&gt;&amp;lt;!-- index.html --&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;body&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;app-root&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;app-root&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;inline.bundle.js&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;polyfills.bundle.js&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;styles.bundle.js&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;vendor.bundle.js&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;main.bundle.js&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;body&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;zone.js&lt;/code&gt; is stored in &lt;code&gt;polyfills.bundle.js&lt;/code&gt;,&lt;br&gt;
&lt;code&gt;aframe-master.js&lt;/code&gt; (and all other node_modules from package.json) is stored in &lt;code&gt;vendor.bundle.js&lt;/code&gt; and in&lt;br&gt;
&lt;code&gt;main.bundle.js&lt;/code&gt; the error is thrown when we try to load A-Frame with &lt;code&gt;import 'aframe';&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Tip: Do also install aframe types (so you can use it in TypeScript) by adding  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;// --- package.json ---&lt;/span&gt; 
  &lt;span class="l l-Scalar l-Scalar-Plain"&gt;&amp;quot;devDependencies&amp;quot;&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt; &lt;span class="p p-Indicator"&gt;{&lt;/span&gt;
    &lt;span class="s"&gt;&amp;quot;@types/aframe&amp;quot;&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;^0.7.0&amp;quot;&lt;/span&gt;&lt;span class="p p-Indicator"&gt;,&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;em&gt;More details on @types: &lt;a href="https://github.com/angular/angular-cli/wiki/stories-third-party-lib"&gt;3rd Party Library Installation&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;The blog ´&lt;a href="https://medium.com/@pitipon/a-frame-with-angular-setup-project-5797b2f2a03b"&gt;A-frame with Angular&lt;/a&gt;´ will tell you that you need to load A-Frame earlier - before zone.js. It suggests polyfills.js.  &lt;/p&gt;
&lt;h3&gt;Solution attempt #2.1&lt;/h3&gt;
&lt;p&gt;Angular CLI has a way to load libraries globally, as if they were in script tags.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Remove the aframe import from app.module.ts&lt;/li&gt;
&lt;li&gt;Add the A-Frame library to Angular Cli config&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;// --- .angular-cli.json ---&lt;/span&gt; 
  &lt;span class="l l-Scalar l-Scalar-Plain"&gt;&amp;quot;apps&amp;quot;&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt; &lt;span class="p p-Indicator"&gt;[&lt;/span&gt;
    &lt;span class="p p-Indicator"&gt;{&lt;/span&gt;
      &lt;span class="s"&gt;&amp;quot;scripts&amp;quot;&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt; &lt;span class="p p-Indicator"&gt;[&lt;/span&gt;
        &lt;span class="s"&gt;&amp;quot;../node_modules/aframe/dist/aframe-master.js&amp;quot;&lt;/span&gt;&lt;span class="p p-Indicator"&gt;,&lt;/span&gt;
        &lt;span class="s"&gt;&amp;quot;../node_modules/aframe-extras/dist/aframe-extras.min.js&amp;quot;&lt;/span&gt;
      &lt;span class="p p-Indicator"&gt;],&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Result #2.1&lt;/h3&gt;
&lt;p&gt;If you view-page-source of the page you will see&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c"&gt;&amp;lt;!-- index.html --&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;body&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;app-root&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;app-root&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;inline.bundle.js&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;polyfills.bundle.js&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;styles.bundle.js&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;scripts.bundle.js&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;vendor.bundle.js&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;main.bundle.js&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;body&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;New is ´scripts.bundle.js´. &lt;/p&gt;
&lt;p&gt;But still we have an error:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gd"&gt;--- console ---&lt;/span&gt;
zone.js:2803 Uncaught TypeError: Cannot assign to read only property &amp;#39;attributeChangedCallback&amp;#39; of object &amp;#39;[object HTMLElement]&amp;#39;
    at eval (zone.js:2803)
    at Array.forEach (&amp;lt;anonymous&amp;gt;)
    at HTMLDocument.document.registerElement (zone.js:2789)
    at module.exports.registerElement (scripts.bundle.js:74843)
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;zone.js&lt;/code&gt; is stored in &lt;code&gt;polyfills.bundle.js&lt;/code&gt;,&lt;br&gt;
&lt;code&gt;aframe-master.js&lt;/code&gt; is stored and loaded in &lt;code&gt;scripts.bundle.js&lt;/code&gt; and&lt;br&gt;
all other node_modules from package.json is stored in &lt;code&gt;vendor.bundle.js&lt;/code&gt;.&lt;br&gt;
The error is thrown when we try to auto-load A-Frame inside &lt;code&gt;scripts.bundle.js&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The common pattern is again that A-Frame is loaded after zone.js.&lt;/p&gt;
&lt;p&gt;Sample &lt;a href="https://github.com/rasor/ng-maze-vr-blank/tree/cd0fd787cb4aa9dcc287925e2ddd9310e7b837ab"&gt;ng-maze-vr-blank/commit 5&lt;/a&gt; demonstrates the error.  &lt;/p&gt;
&lt;h3&gt;Solution attempt #2.2&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;scripts.bundle.js&lt;/code&gt; is loaded after &lt;code&gt;polyfills.bundle.js&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;As the blog ´&lt;a href="https://medium.com/@pitipon/a-frame-with-angular-setup-project-5797b2f2a03b"&gt;A-frame with Angular&lt;/a&gt;´ told you, you needed to load A-Frame before zone.js.  &lt;/p&gt;
&lt;p&gt;So this time we go one more level up to polyfills.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Remove the scripts in &lt;code&gt;.angular-cli.json&lt;/code&gt; (or just rename the scripts property)&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;// --- .angular-cli.json ---&lt;/span&gt; 
  &lt;span class="l l-Scalar l-Scalar-Plain"&gt;&amp;quot;apps&amp;quot;&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt; &lt;span class="p p-Indicator"&gt;[&lt;/span&gt;
    &lt;span class="p p-Indicator"&gt;{&lt;/span&gt;
      &lt;span class="s"&gt;&amp;quot;someUnusedScripts&amp;quot;&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt; &lt;span class="p p-Indicator"&gt;[&lt;/span&gt;
        &lt;span class="s"&gt;&amp;quot;../node_modules/aframe/dist/aframe-master.js&amp;quot;&lt;/span&gt;&lt;span class="p p-Indicator"&gt;,&lt;/span&gt;
        &lt;span class="s"&gt;&amp;quot;../node_modules/aframe-extras/dist/aframe-extras.min.js&amp;quot;&lt;/span&gt;
      &lt;span class="p p-Indicator"&gt;],&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Add aframe to polyfills before zone.js&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;// --- src/polyfills.ts ---&lt;/span&gt;
&lt;span class="c1"&gt;// Load aframe before zone.js&lt;/span&gt;
&lt;span class="kr"&gt;import&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;aframe&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kr"&gt;import&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;aframe-extras&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kr"&gt;import&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;zone.js/dist/zone&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  &lt;span class="c1"&gt;// Included with Angular CLI.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Result #2.2&lt;/h3&gt;
&lt;p&gt;Now A-Frame is loaded in &lt;code&gt;polyfills.bundle.js&lt;/code&gt; before zone.js and A-Frame content is rendered  &lt;/p&gt;
&lt;p&gt;&lt;img alt="Aframe loaded from polyfills.bundle.js" src="img/2018/2018-03-29-Ng-cli.PNG"&gt;&lt;/p&gt;
&lt;p&gt;Sample &lt;a href="https://github.com/rasor/ng-maze-vr-blank/tree/d15d7271277ba6b8bc5c16fc35bd06d8497569f2"&gt;ng-maze-vr-blank/commit 6&lt;/a&gt; shows the result.  &lt;/p&gt;
&lt;h2&gt;Problem #3 - Some A-Frame extras doesn't render&lt;/h2&gt;
&lt;p&gt;If you want to replace the floor &lt;code&gt;&amp;lt;a-plane&amp;gt;&lt;/code&gt; with the floor from A-Frame extras &lt;code&gt;&amp;lt;a-grid&amp;gt;&lt;/code&gt; you can't see it. This happens with following change:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c"&gt;&amp;lt;!-- src/app/components/aframe-vr.component.html --&amp;gt;&lt;/span&gt;
  &lt;span class="c"&gt;&amp;lt;!-- &amp;lt;a-plane position=&amp;quot;0 -1 -4&amp;quot; rotation=&amp;quot;-45 0 0&amp;quot; width=&amp;quot;15&amp;quot; height=&amp;quot;80&amp;quot; color=&amp;quot;#7BC8A4&amp;quot;&amp;gt;&amp;lt;/a-plane&amp;gt; --&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;a-grid&lt;/span&gt; &lt;span class="na"&gt;position&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;0 -1 -4&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;rotation&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;-90 0 0&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;static-body&lt;/span&gt; &lt;span class="na"&gt;width&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;15&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;height&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;80&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;#7BC8A4&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;a-grid&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Solution #3&lt;/h3&gt;
&lt;p&gt;Now we will move loading of A-Frame even further up from polyfills to the &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt;  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Remove A-Frame from polyfills&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;// --- src/polyfills.ts ---&lt;/span&gt;
&lt;span class="c1"&gt;// Load aframe before zone.js&lt;/span&gt;
&lt;span class="c1"&gt;//import &amp;#39;aframe&amp;#39;;&lt;/span&gt;
&lt;span class="c1"&gt;//import &amp;#39;aframe-extras&amp;#39;;&lt;/span&gt;
&lt;span class="kr"&gt;import&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;zone.js/dist/zone&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  &lt;span class="c1"&gt;// Included with Angular CLI.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;In Ng Cli config copy A-Frame dist to assets  &lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;// --- .angular-cli.json ---&lt;/span&gt; 
  &lt;span class="l l-Scalar l-Scalar-Plain"&gt;&amp;quot;apps&amp;quot;&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt; &lt;span class="p p-Indicator"&gt;[&lt;/span&gt;
    &lt;span class="p p-Indicator"&gt;{&lt;/span&gt;
      &lt;span class="s"&gt;&amp;quot;assets&amp;quot;&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt; &lt;span class="p p-Indicator"&gt;[&lt;/span&gt;
        &lt;span class="p p-Indicator"&gt;{&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;glob&amp;quot;&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;**/*&amp;quot;&lt;/span&gt;&lt;span class="p p-Indicator"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;input&amp;quot;&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;../node_modules/aframe/dist&amp;quot;&lt;/span&gt;&lt;span class="p p-Indicator"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;output&amp;quot;&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;./assets/lib/aframe/dist/&amp;quot;&lt;/span&gt; &lt;span class="p p-Indicator"&gt;},&lt;/span&gt;
        &lt;span class="p p-Indicator"&gt;{&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;glob&amp;quot;&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;**/*&amp;quot;&lt;/span&gt;&lt;span class="p p-Indicator"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;input&amp;quot;&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;../node_modules/aframe-extras/dist&amp;quot;&lt;/span&gt;&lt;span class="p p-Indicator"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;output&amp;quot;&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;./assets/lib/aframe-extras/dist/&amp;quot;&lt;/span&gt; &lt;span class="p p-Indicator"&gt;}&lt;/span&gt;
      &lt;span class="p p-Indicator"&gt;],&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;em&gt;Link: Copy assets via &lt;a href="https://github.com/angular/angular-cli/wiki/stories-asset-configuration"&gt;angular-cli&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;In index.html head load A-Frame + extras  &lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c"&gt;&amp;lt;!-- src/index.html --&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;head&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt; &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;assets/lib/aframe/dist/aframe-master.js&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt; &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;assets/lib/aframe-extras/dist/aframe-extras.min.js&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;head&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Result #3 - Commit 7&lt;/h3&gt;
&lt;p&gt;Now A-Frame is loaded already in the &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; before &lt;code&gt;polyfills.bundle.js&lt;/code&gt; and also &lt;code&gt;&amp;lt;a-grid&amp;gt;&lt;/code&gt; is rendered  &lt;/p&gt;
&lt;p&gt;&lt;img alt="Aframe loaded from head" src="img/2018/2018-03-29-Ng-cli2.PNG"&gt;&lt;/p&gt;
&lt;p&gt;Sample &lt;a href="https://github.com/rasor/ng-maze-vr-blank/tree/4f666ce66cf74e211ee06df0f019b528723c2398"&gt;ng-maze-vr-blank/commit 7&lt;/a&gt; shows the result.  &lt;/p&gt;
&lt;h2&gt;Problem #4 - When using &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; for loading, then @types are not loaded and you cannot use the types in code&lt;/h2&gt;
&lt;p&gt;Having the libraries loaded now I want to use them in code. Example:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kr"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;VrBox&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;position&lt;/span&gt;: &lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="kr"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;pos&lt;/span&gt;: &lt;span class="kt"&gt;AFrame.Coordinate&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;position&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;AFRAME&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;utils&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;coordinates&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stringify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;pos&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;WebPack complains:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;error TS2552: Cannot find name &amp;#39;AFRAME&amp;#39;. Did you mean &amp;#39;frames&amp;#39;
error TS2503: Cannot find namespace &amp;#39;AFrame&amp;#39;.
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Solution #4a&lt;/h3&gt;
&lt;p&gt;If you did not have the @types/aframe you could define the types yourself&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kr"&gt;declare&lt;/span&gt; &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;AFRAME&lt;/span&gt;: &lt;span class="kt"&gt;any&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
&lt;span class="kr"&gt;declare&lt;/span&gt; &lt;span class="nx"&gt;namespace&lt;/span&gt; &lt;span class="nx"&gt;AFrame&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kr"&gt;interface&lt;/span&gt; &lt;span class="nx"&gt;Coordinate&lt;/span&gt;&lt;span class="p"&gt;{}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; 
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Solution #4b&lt;/h3&gt;
&lt;p&gt;But since you have the @types/aframe you instead just can import them&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;// src/app/components/aframe-vr.component.ts&lt;/span&gt;
&lt;span class="c1"&gt;/// &amp;lt;reference types=&amp;quot;aframe&amp;quot; /&amp;gt;&lt;/span&gt;
&lt;span class="c1"&gt;// Above ref is needed when aframe is loaded from &amp;lt;script&amp;gt; instead of&lt;/span&gt;
&lt;span class="c1"&gt;// import &amp;#39;aframe&amp;#39;;&lt;/span&gt;
&lt;span class="c1"&gt;// It will use the types from @types/aframe&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Result #4 - Commit 10&lt;/h3&gt;
&lt;p&gt;Now we can use A-Frame library in our code.&lt;/p&gt;
&lt;p&gt;Sample &lt;a href="https://github.com/rasor/ng-maze-vr-blank/tree/7535b3cca27f3354b061deff21005c863907b06e"&gt;ng-maze-vr-blank/commit 10&lt;/a&gt; shows the result.  &lt;/p&gt;
&lt;h2&gt;Problem #5 - A-Frame doen't work with Angular binding&lt;/h2&gt;
&lt;p&gt;Next up is to use Angular binding. In this case I want to create &lt;code&gt;&amp;lt;a-box&amp;gt;&lt;/code&gt;'s from a list of data.&lt;br&gt;
Looping through the list with &lt;code&gt;*ngFor&lt;/code&gt; is not a problem, but setting the position proporty does not work.  &lt;/p&gt;
&lt;p&gt;In the view a &lt;code&gt;div&lt;/code&gt; on top of A-Frame demonstrates how &lt;code&gt;*ngFor&lt;/code&gt; sets a property.&lt;br&gt;
But in the &lt;code&gt;a-scene&lt;/code&gt; the same way of binding does not work. The created &lt;code&gt;&amp;lt;a-box&amp;gt;&lt;/code&gt; is put in position "0 0 0". You have to go backwards to see the box. It is behind you.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c"&gt;&amp;lt;!-- src/app/components/aframe-vr.component.html --&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;box&amp;quot;&lt;/span&gt; &lt;span class="err"&gt;*&lt;/span&gt;&lt;span class="na"&gt;ngFor&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;let b of vrBoxes&amp;quot;&lt;/span&gt; &lt;span class="err"&gt;[&lt;/span&gt;&lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="err"&gt;]=&amp;quot;&lt;/span&gt;&lt;span class="na"&gt;b&lt;/span&gt;&lt;span class="err"&gt;.&lt;/span&gt;&lt;span class="na"&gt;position&lt;/span&gt;&lt;span class="err"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;I am a div {{b.position}}&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;a-scene&lt;/span&gt; &lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="na"&gt;scene&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="c"&gt;&amp;lt;!-- &amp;lt;a-box position=&amp;quot;-1 0.5 -4&amp;quot; scale=&amp;quot;0.25 0.5 1&amp;quot; rotation=&amp;quot;-45 0 0&amp;quot; color=&amp;quot;#4CC3D9&amp;quot;&amp;gt;&amp;lt;/a-box&amp;gt; --&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;a-box&lt;/span&gt; &lt;span class="err"&gt;*&lt;/span&gt;&lt;span class="na"&gt;ngFor&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;let b of vrBoxes&amp;quot;&lt;/span&gt; &lt;span class="err"&gt;[&lt;/span&gt;&lt;span class="na"&gt;position&lt;/span&gt;&lt;span class="err"&gt;]=&amp;quot;&lt;/span&gt;&lt;span class="na"&gt;b&lt;/span&gt;&lt;span class="err"&gt;.&lt;/span&gt;&lt;span class="na"&gt;position&lt;/span&gt;&lt;span class="err"&gt;&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;scale&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;0.25 0.5 1&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;rotation&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;-45 0 0&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;#4CC3D9&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;a-box&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;a-scene&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="Angular binding not working with Aframe" src="img/2018/2018-03-29-Ng-cli3.PNG"&gt;  &lt;/p&gt;
&lt;p&gt;Sample &lt;a href="https://github.com/rasor/ng-maze-vr-blank/tree/f2933d4d324036c99df2739fb266c7cf5af21dea"&gt;ng-maze-vr-blank/commit 11&lt;/a&gt; demonstrates this situation.  &lt;/p&gt;
&lt;h3&gt;So what are the options?&lt;/h3&gt;
&lt;p&gt;Initially I picked options like these:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Create an Angular wrapper component.&lt;br&gt;
&lt;a href="https://github.com/zefoy/ngx-ace-wrapper"&gt;zefoy/ngx-ace-wrapper&lt;/a&gt; is an example of a wrapper.&lt;br&gt;
ZEF has a handfull of &lt;a href="https://github.com/zefoy?utf8=%E2%9C%93&amp;amp;q=wrapper&amp;amp;type=&amp;amp;language="&gt;other wrappers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Publish to npm: &lt;a href="https://medium.com/@nikolasleblanc/building-an-angular-4-component-library-with-the-angular-cli-and-ng-packagr-53b2ade0701e"&gt;Building an Angular 4 Component Library with the Angular CLI and ng-packagr&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Create a Web Component wrapper component&lt;br&gt;
&lt;a href="https://www.joshmorony.com/publishing-a-web-component-using-stencil-and-using-it-anywhere/"&gt;Publishing a Web Component Using Stencil (And Using It Anywhere)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Build and use a Web Component from Angular: &lt;a href="https://github.com/seveves/angular-stencil"&gt;seveves/angular-stencil&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The first attempt I did was to look at the &lt;a href="https://github.com/seveves/angular-stencil"&gt;seveves/angular-stencil&lt;/a&gt; repo and tried to see if I could bind A-Frame in a Stencil web component.
That attempt failed. Repo is here: &lt;a href="https://github.com/rasor/stencil-aframe"&gt;rasor/stencil-aframe&lt;/a&gt;.&lt;br&gt;
Notice: In that repo I am using the latest version of A-Frame: 0.8.0.&lt;/p&gt;
&lt;p&gt;Angular components builds on the web components-way of doing things - e.g. using ShaowDom. So I think, when binding with web components does not work, then I should not expect to getting it to work in Angular either. &lt;/p&gt;
&lt;h3&gt;So what are the options, when ShadowDom does not play well with A-Frame?&lt;/h3&gt;
&lt;p&gt;Well &lt;a href="https://github.com/trusktr"&gt;trusktr&lt;/a&gt; actually found a way &lt;a href="https://github.com/aframevr/aframe/issues/1492#issuecomment-324124434"&gt;to deal with Shadow DOM&lt;/a&gt;, which he find easy, but to me is protocol workaround - a low level protocol change, which should not be necessary to twist as library a user.  &lt;/p&gt;
&lt;h3&gt;So when I don't want to make ShadowDOM workaround, then what are the options?&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Use &lt;a href="https://github.com/trusktr"&gt;trusktr&lt;/a&gt;s &lt;a href="https://infamous.io/docs/index.html"&gt;Infamous&lt;/a&gt; library (&lt;a href="https://github.com/trusktr/infamous"&gt;repo here&lt;/a&gt;) instead of A-Frame. Infamous supports Web Components (and Angular).&lt;/li&gt;
&lt;li&gt;A-Frames creator &lt;a href="https://github.com/ngokevin"&gt;ngokevin&lt;/a&gt; recommends using NunJucks/Static Templating:&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;I currently recommend using vanilla A-Frame and &lt;a href="https://www.npmjs.com/package/aframe-state-component"&gt;aframe-state-component&lt;/a&gt; with &lt;a href="https://mozilla.github.io/nunjucks/"&gt;static templating&lt;/a&gt; over &lt;a href="https://github.com/ngokevin/aframe-react"&gt;aframe-react&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;To be continued...&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;Links&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Declare lib + plugin and load globally in &lt;a href="https://github.com/angular/angular-cli/wiki/stories-global-scripts"&gt;angular-cli&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;More on zone.js: &lt;a href="https://medium.com/@MertzAlertz/what-the-hell-is-zone-js-and-why-is-it-in-my-angular-2-6ff28bcf943e"&gt;What the hell is Zone.js and why is it in my Angular 2?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Lots of other &lt;a href="https://github.com/angular/angular-cli/wiki/stories"&gt;Angular CLI tricks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/angular/angular-cli/wiki/angular-cli"&gt;Angular CLI Config Schema&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.typescriptlang.org/docs/handbook/compiler-options.html"&gt;TypeScript Compiler Options&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The End&lt;/p&gt;</content><category term="#ng"></category><category term="#aframe"></category><category term="#webpack"></category><category term="#vr"></category></entry><entry><title>D'n'd development with RPA, hpaPaaS, mBaaS and ESB (iPaaS)</title><link href="https://rasor.github.io/dnd-development-with-rpa-hpapaas-mbaas-and-esb-ipaas.html" rel="alternate"></link><published>2018-01-11T20:00:00+01:00</published><updated>2018-02-04T15:30:00+01:00</updated><author><name>rasor</name></author><id>tag:rasor.github.io,2018-01-11:/dnd-development-with-rpa-hpapaas-mbaas-and-esb-ipaas.html</id><summary type="html">&lt;p&gt;Development using Drag'n'drop (&lt;a href="https://en.wikipedia.org/wiki/Low-code_development_platforms"&gt;Low-code development platforms - LCDP&lt;/a&gt;)
 is also taking a share in development pipelines with test/prod environments and version control.&lt;/p&gt;
&lt;p&gt;Some of the areas are&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Automated Business UI Process development - &lt;a href="https://en.wikipedia.org/wiki/Robotic_process_automation"&gt;RPA&lt;/a&gt;. Automated frontend using existing UI as data transfer channel are created in this category. &lt;/li&gt;
&lt;li&gt;Application development - &lt;a href="https://en.wikipedia.org/wiki/Platform_as_a_service"&gt;hpaPaaS …&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;p&gt;Development using Drag'n'drop (&lt;a href="https://en.wikipedia.org/wiki/Low-code_development_platforms"&gt;Low-code development platforms - LCDP&lt;/a&gt;)
 is also taking a share in development pipelines with test/prod environments and version control.&lt;/p&gt;
&lt;p&gt;Some of the areas are&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Automated Business UI Process development - &lt;a href="https://en.wikipedia.org/wiki/Robotic_process_automation"&gt;RPA&lt;/a&gt;. Automated frontend using existing UI as data transfer channel are created in this category. &lt;/li&gt;
&lt;li&gt;Application development - &lt;a href="https://en.wikipedia.org/wiki/Platform_as_a_service"&gt;hpaPaaS&lt;/a&gt;. Apps, Webapps (frontends) and APIs (backends) are created in this category.&lt;/li&gt;
&lt;li&gt;Application APIs - &lt;a href="https://en.wikipedia.org/wiki/Mobile_backend_as_a_service"&gt;mBaaS&lt;/a&gt;. This is backend exposing APIs to receive/produce data.&lt;/li&gt;
&lt;li&gt;Application integration - &lt;a href="https://en.wikipedia.org/wiki/Enterprise_service_bus"&gt;ESB / iPaaS&lt;/a&gt;. This is middleware/backend using and exposing APIs to transfer data (B2B).&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;1. RPA&lt;/h2&gt;
&lt;p&gt;Top RPA players are&lt;br&gt;
&lt;a href="https://forum.uipath.com/t/uipath-vs-other-rpa-vendor/1748/9"&gt;&lt;img alt="Forrester RPA" src="https://discourse-cdn-sjc1.com/business2/uploads/uipath/optimized/2X/6/640e7c77d0e13254150952ee7d6ed66959201abf_1_577x500.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.automationanywhere.com/"&gt;Automation Anywhere&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.blueprism.com/"&gt;Blue Prism&lt;/a&gt; - C#&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.uipath.com/"&gt;UiPath&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;2. hpaPaaS&lt;/h2&gt;
&lt;p&gt;In 2017 Microsoft Access RAD tools are called &lt;strong&gt;High Productivity Application Platform as a Service&lt;/strong&gt; (hpaPaaS)&lt;br&gt;
&lt;a href="https://www.mendix.com/resources/gartner-high-productivity-apaas/"&gt;&lt;img alt="gartner hpaPaaS tools" src="https://images.mendix.com/wp-content/uploads/Gartner-High-Productivity-aPaaS-Magic-Quadrant.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;In the top quadrant there are only 3 players&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.salesforce.com/"&gt;Salesforce&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.mendix.com/"&gt;Mendix&lt;/a&gt; - C# + Java&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.outsystems.com/"&gt;OutSystems&lt;/a&gt; - C#&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=hFwiZYxQboQ"&gt;Microsoft Azure Mobile Apps or Power Apps (+ Flow + Logic Apps) + Functions&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Download the &lt;a href="https://www.mendix.com/resources/gartner-high-productivity-apaas/"&gt;Gartner Quadrant&lt;/a&gt; to learn more.&lt;br&gt;
&lt;em&gt;According to Gartner, by 2020, at least 50 percent of all new business applications will be created with high-productivity toolsets&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;And compare features and integrations&lt;br&gt;
&lt;a href="https://www.getapp.com/it-management-software/a/mendix-business-agility-suite/compare/mule-esb-vs-outsystems-platform-vs-salesforce/"&gt;&lt;img alt="compare features and integrations" src="img/2018/2018-01-11-hpaPaaS1.PNG"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;3. API&lt;/h2&gt;
&lt;p&gt;To create IOT or mobile backends there are API tools&lt;br&gt;
&lt;a href="https://www.mulesoft.com/ty/report/gartner-magic-quadrant-api"&gt;&lt;img alt="gartner API tools" src="https://www.gartner.com/resources/277600/277632/277632_0001.png;wa4459b121dae44439?reprintKey=1-3KZGFI4"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.mulesoft.com/platform/api/anypoint-designer"&gt;MuleSoft Anypoint API Designer&lt;/a&gt; - Java&lt;/li&gt;
&lt;li&gt;&lt;a href="https://apigee.com/api-management/"&gt;Apigee&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.ca.com/us/products/ca-live-api-creator.html"&gt;CA Live API Creator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://azure.microsoft.com/en-us/services/functions/"&gt;Microsoft Azure Functions or API Apps or Mobile Services&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;4. ESB / iPaaS / MaaS&lt;/h2&gt;
&lt;p&gt;To tie applications together there are integration tools also called ESBs&lt;br&gt;
&lt;a href="http://info.jitterbit.com/Adwords-Gartner-Magic-Quadrant-iPaaS-2017-Report.html"&gt;&lt;img alt="gartner iPaaS tools" src="https://www.gartner.com/resources/304000/304070/304070_0001.png?reprintKey=1-3ZKX04V"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.informatica.com"&gt;Informatica&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://boomi.com"&gt;Dell Boomi&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.mulesoft.com/platform/soa/mule-esb-open-source-esb"&gt;MuleSoft ESB&lt;/a&gt; - Java&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=hFwiZYxQboQ"&gt;Microsoft Flow + Azure Logic Apps + Azure Service Bus&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.neuronesb.com/#"&gt;Neuron ESB&lt;/a&gt; - C#&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;Links&lt;/h1&gt;
&lt;h2&gt;Microsoft Links&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=f6ysuQUZ2wQ"&gt;Microsoft Flow: Multi-Step Approvals&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Microsoft Flow resources&lt;br&gt;
&lt;a href="https://youtu.be/hFwiZYxQboQ?t=34m43s"&gt;&lt;img alt="Microsoft Flow resources" src="img/2018/2018-01-11-hpaPaaS2.PNG"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Microsoft Messaging&lt;br&gt;
&lt;a href="https://www.servicebus360.com/blogs/azure-service-bus-event-hub-event-grid-one-choose/"&gt;&lt;img alt="Microsoft Messaging" src="https://www.servicebus360.com/wp-content/uploads/2017/08/azure-service-bus-event-hub-event-grid.jpg"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Other Links&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Microservices, SOA, and APIs: Friends or enemies?&lt;br&gt;
&lt;a href="https://www.ibm.com/developerworks/websphere/library/techarticles/1601_clark-trs/1601_clark.html"&gt;&lt;img alt="Microservices, SOA, and APIs" src="https://www.ibm.com/developerworks/websphere/library/techarticles/1601_clark-trs/images/figure8.jpg"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The End&lt;/p&gt;</content><category term="#hpapaas"></category><category term="#rpa"></category><category term="mbaas"></category><category term="ipaas"></category><category term="#esb"></category></entry><entry><title>Moveslink 2 crash</title><link href="https://rasor.github.io/moveslink-2-crash.html" rel="alternate"></link><published>2018-01-11T19:00:00+01:00</published><updated>2018-01-11T19:00:00+01:00</updated><author><name>rasor</name></author><id>tag:rasor.github.io,2018-01-11:/moveslink-2-crash.html</id><summary type="html">&lt;p&gt;A few days ago I &lt;a href="https://support.microsoft.com/ml-in/help/12415/windows-10-recovery-options"&gt;resat my Windows 10&lt;/a&gt;, so I could start from scratch.&lt;/p&gt;
&lt;h2&gt;Problem&lt;/h2&gt;
&lt;p&gt;The USB driver for my GPS watch, Suunto Ambit 2 misbehaved.&lt;/p&gt;
&lt;p&gt;I just connected the watch with USB cable.&lt;br&gt;
Then I installed &lt;a href="http://www.movescount.com/connect/moveslink"&gt;Moveslink2&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I would see Moveslink in the taskbar and the taskmanager for …&lt;/p&gt;</summary><content type="html">&lt;p&gt;A few days ago I &lt;a href="https://support.microsoft.com/ml-in/help/12415/windows-10-recovery-options"&gt;resat my Windows 10&lt;/a&gt;, so I could start from scratch.&lt;/p&gt;
&lt;h2&gt;Problem&lt;/h2&gt;
&lt;p&gt;The USB driver for my GPS watch, Suunto Ambit 2 misbehaved.&lt;/p&gt;
&lt;p&gt;I just connected the watch with USB cable.&lt;br&gt;
Then I installed &lt;a href="http://www.movescount.com/connect/moveslink"&gt;Moveslink2&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I would see Moveslink in the taskbar and the taskmanager for a while and then it would disappear.&lt;/p&gt;
&lt;p&gt;I thought it was a problem that I had the watch connected while I installed Moveslink, but no.&lt;/p&gt;
&lt;h2&gt;Solution&lt;/h2&gt;
&lt;p&gt;It turned out that it is a &lt;a href="http://www.suunto.com/Support/faq-articles/features/what-should-i-do-if-moveslink2-does-not-start-after-installing-the-windows-10-fall-creators-update/"&gt;known error&lt;/a&gt; which appears with Windows 10 Fall Creators Update (1709).&lt;/p&gt;
&lt;p&gt;The problem causes moveslink2 to crash.&lt;/p&gt;
&lt;p&gt;What I had to do to make it disappear was:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Turn off Wifi&lt;/li&gt;
&lt;li&gt;Reconnect watch with USB wire&lt;br&gt;
=&amp;gt; Now moveslink would show&lt;/li&gt;
&lt;li&gt;Turn on Wifi&lt;/li&gt;
&lt;li&gt;Sign in to movescount.com&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All back to normal - Me happy&lt;/p&gt;
&lt;h2&gt;How you can troubleshoot&lt;/h2&gt;
&lt;p&gt;In System Information I could see&lt;br&gt;
&lt;img alt="Error in System Information" src="img/2018/2018-01-11-Ambit4.PNG"&gt;&lt;/p&gt;
&lt;p&gt;In Event Viewer I could see&lt;br&gt;
&lt;img alt="Error in Event Viewer" src="img/2018/2018-01-11-Ambit5.PNG"&gt;&lt;/p&gt;
&lt;p&gt;In Devices and Printers I could see Ambit (after all was back to normal)&lt;br&gt;
&lt;img alt="Ambit in Devices and Printers" src="img/2018/2018-01-11-Ambit1.PNG"&gt;&lt;/p&gt;
&lt;p&gt;Ambit has two drivers&lt;br&gt;
&lt;img alt="Ambit has to drivers" src="img/2018/2018-01-11-Ambit2.PNG"&gt;&lt;/p&gt;
&lt;p&gt;In Devices Manager I could not see Ambit, but now I knew which drivers it used&lt;br&gt;
&lt;img alt="Ambit in Devices Manager" src="img/2018/2018-01-11-Ambit3.PNG"&gt;&lt;/p&gt;
&lt;h2&gt;My related articles&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://rasor.wordpress.com/2012/11/09/garmin-305-display-misbehaving/"&gt;Garmin 305 display misbehaving&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rasordk.wordpress.com/2015/01/08/suunto-ruter/"&gt;Suunto Ruter (in danish)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The End&lt;/p&gt;</content><category term="#ambit"></category><category term="#moveslink"></category><category term="#drivers"></category><category term="#windows"></category></entry><entry><title>NAS in the cloud</title><link href="https://rasor.github.io/nas-in-the-cloud.html" rel="alternate"></link><published>2018-01-01T12:00:00+01:00</published><updated>2018-01-01T12:00:00+01:00</updated><author><name>rasor</name></author><id>tag:rasor.github.io,2018-01-01:/nas-in-the-cloud.html</id><summary type="html">&lt;p&gt;For the last many years I've been warming up to buy a NAS solution for my home with mirroved disks and at least 1 TB.&lt;/p&gt;
&lt;p&gt;I have I-drives at several providers, since the free veersion does not give much space compared to what you often wants to backup.
One of …&lt;/p&gt;</summary><content type="html">&lt;p&gt;For the last many years I've been warming up to buy a NAS solution for my home with mirroved disks and at least 1 TB.&lt;/p&gt;
&lt;p&gt;I have I-drives at several providers, since the free veersion does not give much space compared to what you often wants to backup.
One of those providers being pCloud.
They have for long been sending me notices about my free space (10 GB) running out.
This time I acted on one such notice and was sent to&lt;br&gt;
&lt;a href="https://www.pcloud.com/cloud-storage-pricing-plans.html"&gt;&lt;img alt="Cloud Storage Pricing" src="img/2018/2017-12-31-pCloud.PNG"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Now it was possible to get 2 TB storage for a onetime payment for a lifetime period for a price probably lower than I could get a mirrowed disk solution at home for.&lt;br&gt;
Price: EUR 250,-&lt;/p&gt;
&lt;h3&gt;Pros&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Storage is striped or mirrowed on 5 disks - not only 2&lt;/li&gt;
&lt;li&gt;If one disk dies, I won't have to replace it - that's managed and included&lt;/li&gt;
&lt;li&gt;30 days backup - if wannacry hits my PC and encrypts my drives, I can just restore that cloud drive with a click&lt;/li&gt;
&lt;li&gt;I can share folders with other people without affecting adding cost for them&lt;/li&gt;
&lt;li&gt;Apps for IOS and Android&lt;/li&gt;
&lt;li&gt;Two phase authentication using my facebook account&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Cons&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Bandwitdh much lower than local wifi or USB&lt;/li&gt;
&lt;li&gt;The could drive takes up some space for caching on your local drive, which it uses for sync, so you won't have 2 TB locally, only whatever you assing for your cache&lt;/li&gt;
&lt;li&gt;Seems to not the best integration with uppload photos from IOS, but neither would a local NAS be, probably&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So finally I won't have to worry about loosing photos and other content.&lt;/p&gt;
&lt;p&gt;The End&lt;/p&gt;</content><category term="#nas"></category><category term="#storage"></category><category term="#cloud"></category></entry><entry><title>cUrl CLI on Windows</title><link href="https://rasor.github.io/curl-cli-on-windows.html" rel="alternate"></link><published>2017-12-11T21:00:00+01:00</published><updated>2018-01-05T23:00:00+01:00</updated><author><name>rasor</name></author><id>tag:rasor.github.io,2017-12-11:/curl-cli-on-windows.html</id><summary type="html">&lt;p&gt;cUrl on Windows is not trouble-free to get working, when posting to SSL domains.&lt;/p&gt;
&lt;p&gt;Here is howto:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Download latest &lt;a href="https://curl.haxx.se/dlwiz/?type=bin&amp;amp;os=Win64&amp;amp;flav=-&amp;amp;ver=*&amp;amp;cpu=x86_64"&gt;windows version of cUrl&lt;/a&gt;. I used &lt;a href="https://dl.uxnr.de/build/curl/curl_winssl_msys2_mingw64_stc/curl-7.57.0/curl-7.57.0.zip"&gt;curl-7.57.0&lt;/a&gt;, which is SSL and SSH enabled.&lt;/li&gt;
&lt;li&gt;Extract the files from the zip file to &lt;code&gt;C:\Program Files\curl-7.57.0\&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Add to …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;cUrl on Windows is not trouble-free to get working, when posting to SSL domains.&lt;/p&gt;
&lt;p&gt;Here is howto:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Download latest &lt;a href="https://curl.haxx.se/dlwiz/?type=bin&amp;amp;os=Win64&amp;amp;flav=-&amp;amp;ver=*&amp;amp;cpu=x86_64"&gt;windows version of cUrl&lt;/a&gt;. I used &lt;a href="https://dl.uxnr.de/build/curl/curl_winssl_msys2_mingw64_stc/curl-7.57.0/curl-7.57.0.zip"&gt;curl-7.57.0&lt;/a&gt;, which is SSL and SSH enabled.&lt;/li&gt;
&lt;li&gt;Extract the files from the zip file to &lt;code&gt;C:\Program Files\curl-7.57.0\&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Add to enviroment PATH (running as admin): &lt;code&gt;C:\Program Files\curl-7.57.0\src&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So now you can call the CLI from a prompt&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;curl --version

&lt;span class="c1"&gt;# Response:&lt;/span&gt;
&lt;span class="c1"&gt;# curl 7.57.0 (x86_64-w64-mingw32) libcurl/7.57.0 OpenSSL/1.0.2h (WinSSL) zlib/1.2.8 WinIDN libssh2/1.7.0_DEV&lt;/span&gt;
&lt;span class="c1"&gt;# Release-Date: 2017-11-30&lt;/span&gt;
&lt;span class="c1"&gt;# Protocols: dict file ftp ftps gopher http https imap imaps ldap ldaps pop3 pop3s rtsp scp sftp smtp smtps telnet tftp&lt;/span&gt;
&lt;span class="c1"&gt;#Features: AsynchDNS IDN IPv6 Largefile SSPI Kerberos SPNEGO NTLM SSL libz TLS-SRP HTTPS-proxy MultiSSL&lt;/span&gt;

&lt;span class="c1"&gt;# Call an API:&lt;/span&gt;
curl -X GET &lt;span class="s2"&gt;&amp;quot;http://petstore.swagger.io/v2/pet/1&amp;quot;&lt;/span&gt; -H &lt;span class="s2"&gt;&amp;quot;accept: application/json&amp;quot;&lt;/span&gt;

&lt;span class="c1"&gt;# Response:&lt;/span&gt;
&lt;span class="c1"&gt;# {&amp;quot;id&amp;quot;:1,&amp;quot;category&amp;quot;:{&amp;quot;id&amp;quot;:1,&amp;quot;name&amp;quot;:&amp;quot;string&amp;quot;},&amp;quot;name&amp;quot;:&amp;quot;1&amp;quot;,&amp;quot;photoUrls&amp;quot;:[&amp;quot;string&amp;quot;],&amp;quot;tags&amp;quot;:[{&amp;quot;id&amp;quot;:1,&amp;quot;name&amp;quot;:&amp;quot;string&amp;quot;}],&amp;quot;status&amp;quot;:&amp;quot;1&amp;quot;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;But if you try an SSL endpoint you get an error&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;curl -X GET &lt;span class="s2"&gt;&amp;quot;https://hacker-news.firebaseio.com/v0/item/8863.json?print=pretty&amp;quot;&lt;/span&gt;

&lt;span class="c1"&gt;# Response:&lt;/span&gt;
&lt;span class="c1"&gt;# curl: (60) SSL certificate problem: unable to get local issuer certificate&lt;/span&gt;
&lt;span class="c1"&gt;# More details here: https://curl.haxx.se/docs/sslcerts.html&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The reason seems to be that &lt;a href="https://laracasts.com/discuss/channels/general-discussion/curl-error-60-ssl-certificate-problem-unable-to-get-local-issuer-certificate/replies/95548"&gt;cUrl can't access Windows's certificate store&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;HowTo fix curl: (60) SSL certificate problem:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Let curl read allowed SSL providers from file &lt;a href="https://curl.haxx.se/docs/caextract.html"&gt;cacert.pem&lt;/a&gt;. Put the file in the &lt;code&gt;\src\&lt;/code&gt; folder.&lt;/li&gt;
&lt;li&gt;Create &lt;a href="https://curl.haxx.se/docs/sslcerts.html"&gt;new enviroment variable&lt;/a&gt; (running as admin) &lt;code&gt;set CURL_CA_BUNDLE=C:\Program Files\curl-7.57.0\src\cacert.pem&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Refresh environment: &lt;code&gt;refreshenv&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;curl -X GET &lt;span class="s2"&gt;&amp;quot;https://hacker-news.firebaseio.com/v0/item/8863.json?print=pretty&amp;quot;&lt;/span&gt;

&lt;span class="c1"&gt;# Response:&lt;/span&gt;
&lt;span class="c1"&gt;# {&lt;/span&gt;
&lt;span class="c1"&gt;#    &amp;quot;by&amp;quot; : &amp;quot;dhouston&amp;quot;,&lt;/span&gt;
&lt;span class="c1"&gt;#    &amp;quot;descendants&amp;quot; : 71,&lt;/span&gt;
&lt;span class="c1"&gt;#    &amp;quot;id&amp;quot; : 8863,...&lt;/span&gt;
&lt;span class="c1"&gt;# }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;SSL with GIT&lt;/h2&gt;
&lt;p&gt;Just like cUrl Git-for-windows also checks the SSL path.&lt;br&gt;
By default ca-bundle.crt file from OpenSSL&lt;br&gt;
&lt;img alt="GitInstall-SSL" src="img/2017/2017-12-11-GitInstall1.PNG"&gt;&lt;/p&gt;
&lt;p&gt;If you during installation change to use Windows Certificate Store, then Windows will keep the ca-list updated for you, I assume.&lt;/p&gt;
&lt;p&gt;The End&lt;/p&gt;</content><category term="#curl"></category><category term="#windows"></category><category term="#shell"></category><category term="#ssl"></category><category term="#git"></category><category term="#openssl"></category></entry><entry><title>Expand your WCF service with REST</title><link href="https://rasor.github.io/expand-your-wcf-service-with-rest.html" rel="alternate"></link><published>2017-11-19T13:00:00+01:00</published><updated>2017-12-16T10:00:00+01:00</updated><author><name>rasor</name></author><id>tag:rasor.github.io,2017-11-19:/expand-your-wcf-service-with-rest.html</id><summary type="html">&lt;p&gt;If you are working with .NET you probably have WCF services.&lt;br&gt;
You might have thought of expanding those WCF services to REST allowing you to make mobile or SPA frontends.&lt;br&gt;
Instead of using ServiceStack or WebApi+Swashbuckle, you can stay in WCF. This have the advantage of a smaller learning …&lt;/p&gt;</summary><content type="html">&lt;p&gt;If you are working with .NET you probably have WCF services.&lt;br&gt;
You might have thought of expanding those WCF services to REST allowing you to make mobile or SPA frontends.&lt;br&gt;
Instead of using ServiceStack or WebApi+Swashbuckle, you can stay in WCF. This have the advantage of a smaller learning curve for other developers.&lt;/p&gt;
&lt;p&gt;After this walk-through you have a REST service and swagger.yaml that you can use for creating client code via &lt;a href="https://editor.swagger.io/"&gt;https://editor.swagger.io/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="IBookService.yaml" src="img/2017/2017-11-18-IBookService.yaml.PNG" title="IBookService.yaml"&gt;&lt;/p&gt;
&lt;p&gt;You can find &lt;a href="https://github.com/rasor/wcf-rest"&gt;code for this guide on github&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;HowTo create a REST service (including Swagger.yaml) from a WCF service&lt;/h1&gt;
&lt;p&gt;If you have an existing service you create yet an endpoint allowing you to keep the existing service.&lt;/p&gt;
&lt;p&gt;In most cases the best thing is to create yet a WCF service using the same contract as your original WCF service. Just start from bullet 2 then.&lt;/p&gt;
&lt;h2&gt;1. The templates&lt;/h2&gt;
&lt;p&gt;This guide is based on Visusal Studio 2017.4&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Create an empty web&lt;ul&gt;
&lt;li&gt;File - New - Project - ASP.NET Web Application - Empty  &lt;/li&gt;
&lt;li&gt;=&amp;gt; This gives you a project without Global.Ajax and startup files&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Add Ajax-enabled WCF service&lt;ul&gt;
&lt;li&gt;Solution - RightClick project - Add - New Item (Ctrl-Shft-A) - WCF Service (Ajax-enabled) - You could call it &lt;code&gt;RestService1&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;=&amp;gt; This gives you a WCF service with webHttpBinding and a ref to System.ServiceModel.Web&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;2. The first response&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Change from SOAP to REST response&lt;ul&gt;
&lt;li&gt;In &lt;code&gt;RestService1.svc.cs&lt;/code&gt; add below &lt;code&gt;[OperationContract]&lt;/code&gt;:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="na"&gt;    [WebGet(RequestFormat = WebMessageFormat.Json, ResponseFormat = WebMessageFormat.Json)]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;Set a breakpoint in DoWork() and debug project (F5)&lt;/li&gt;
&lt;li&gt;Open &lt;a href="http://localhost:15563/RestService1.svc/DoWork"&gt;http://localhost:15563/RestService1.svc/DoWork&lt;/a&gt; in Chrome&lt;/li&gt;
&lt;li&gt;=&amp;gt; Breakpoint is hit. Response: {"d":null}&lt;/li&gt;
&lt;li&gt;GET &lt;a href="http://localhost:15563/RestService1.svc/DoWork"&gt;http://localhost:15563/RestService1.svc/DoWork&lt;/a&gt; in Postman&lt;/li&gt;
&lt;li&gt;=&amp;gt; Response: {"d":null}&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;3. Change response to &lt;code&gt;&amp;lt;empty&amp;gt;&lt;/code&gt; for void functions&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Change from Ajax to REST client&lt;ul&gt;
&lt;li&gt;In web.config &lt;code&gt;&amp;lt;behavior&amp;gt;&lt;/code&gt;: Replace &lt;code&gt;&amp;lt;enableWebScript /&amp;gt;&lt;/code&gt; with &lt;code&gt;&amp;lt;webHttp /&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Debug project (F5)&lt;/li&gt;
&lt;li&gt;GET &lt;a href="http://localhost:15563/RestService1.svc/DoWork"&gt;http://localhost:15563/RestService1.svc/DoWork&lt;/a&gt; in Postman&lt;/li&gt;
&lt;li&gt;=&amp;gt; Response: &lt;code&gt;&amp;lt;empty&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;4. Add Sample Interface&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Add a sample interface&lt;ul&gt;
&lt;li&gt;Paste &lt;code&gt;\models\Book.cs&lt;/code&gt; from &lt;a href="https://www.codeproject.com/Tips/1190441/How-to-generate-basic-swagger-yaml-description-for"&gt;https://www.codeproject.com/Tips/1190441/How-to-generate-basic-swagger-yaml-description-for&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Paste &lt;code&gt;\interfaces\IBookService.cs&lt;/code&gt; from &lt;a href="https://www.codeproject.com/Tips/1190441/How-to-generate-basic-swagger-yaml-description-for"&gt;https://www.codeproject.com/Tips/1190441/How-to-generate-basic-swagger-yaml-description-for&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Notice the code in &lt;code&gt;IBookService&lt;/code&gt; in this project is changed a bit to allow to POST and PUT a &lt;code&gt;Book&lt;/code&gt; object using JSON in the body of the request.&lt;/li&gt;
&lt;li&gt;In &lt;code&gt;RestService1.svc.cs&lt;/code&gt; inherit from interface:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;RestService1&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;IBookService&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;Click on LigthBulp - Implement Interface&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Change contract. In &lt;code&gt;web.config&lt;/code&gt; change 
    from &lt;code&gt;&amp;lt;service contract="WebApplicationWcfRest1.RestService1&lt;/code&gt;&lt;br&gt;
    to &lt;code&gt;&amp;lt;service contract="WebApplicationWcfRest1.interfaces.IBookService&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Implement &lt;code&gt;GetBookById()&lt;/code&gt;. Add line:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;Book&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;Id&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Name&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;The incredible stamp&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Debug project (F5)&lt;ul&gt;
&lt;li&gt;GET &lt;a href="http://localhost:15563/RestService1.svc/Book/1"&gt;http://localhost:15563/RestService1.svc/Book/1&lt;/a&gt; in Postman&lt;/li&gt;
&lt;li&gt;=&amp;gt; Response: &lt;code&gt;{"Id": 1, "Name": "The incredible stamp"}&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;POST &lt;a href="http://localhost:15563/RestService1.svc/Book"&gt;http://localhost:15563/RestService1.svc/Book&lt;/a&gt; in Postman - Set Body to &lt;code&gt;raw&lt;/code&gt; and write &lt;code&gt;{"Id": 2, "Name": "The invincible stamp"}&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;=&amp;gt; Notice - you receive the object as a &lt;code&gt;Book&lt;/code&gt; in C#&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;5. Create Swagger Yaml&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Create Swagger.yaml - this is the wsdl for REST&lt;ul&gt;
&lt;li&gt;In Project Properties (Alt-Enter) - Build - Select &lt;code&gt;XML Documentation file&lt;/code&gt; - Clear the path&lt;/li&gt;
&lt;li&gt;Install &lt;a href="https://www.nuget.org/packages/Swagger4WCF"&gt;https://www.nuget.org/packages/Swagger4WCF&lt;/a&gt; into the project containing the interfaces&lt;/li&gt;
&lt;li&gt;Build project&lt;/li&gt;
&lt;li&gt;=&amp;gt; The yaml file is in &lt;code&gt;\bin\WebApplicationWcfRest1.IBookService.yaml&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Edit yaml file&lt;ul&gt;
&lt;li&gt;Replace &lt;code&gt;host&lt;/code&gt; from &lt;code&gt;localhost&lt;/code&gt; to &lt;code&gt;localhost:15563&lt;/code&gt; (or to the test- or prod server host)&lt;/li&gt;
&lt;li&gt;Replace &lt;code&gt;basePath&lt;/code&gt; from  &lt;code&gt;/IBookService&lt;/code&gt; to &lt;code&gt;/RestService1.svc&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Replace all &lt;code&gt;path&lt;/code&gt;s from e.g. &lt;code&gt;/GetBooksList:&lt;/code&gt; to &lt;code&gt;/Book:&lt;/code&gt; (as you wrote in UriTemplate)&lt;/li&gt;
&lt;li&gt;Group operations with same &lt;code&gt;path&lt;/code&gt; together and delete the duplicate paths&lt;/li&gt;
&lt;li&gt;Those paths having path parameters e.g. &lt;code&gt;/{id}&lt;/code&gt; change parameters from &lt;code&gt;in: query&lt;/code&gt; to &lt;code&gt;in: path&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Save the yaml file into &lt;code&gt;\interfaces\&lt;/code&gt; - update version number each time you send a new version to the client&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Test the yaml file&lt;ul&gt;
&lt;li&gt;Goto &lt;a href="http://editor.swagger.io/"&gt;http://editor.swagger.io/&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;Replace left pane with the content of the yaml file (if you use chrome, you can paste)&lt;/li&gt;
&lt;li&gt;=&amp;gt; In top of right pane: The should be no errors&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;6. Move contracts to new library&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Swagger4WCF does not work well with Unity.WCF, so we move the contracts to a new library&lt;ul&gt;
&lt;li&gt;File - New - Project (Ctrl-Shft-N) - Class Library - Name: Contracts&lt;/li&gt;
&lt;li&gt;Drag'n'drop folder interfaces to Contracts&lt;/li&gt;
&lt;li&gt;Drag'n'drop folder models to Contracts&lt;/li&gt;
&lt;li&gt;Add Refs to project Contracts:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;System.ServiceModel&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;System.ServiceModel.Web&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;System.Runtime.Serialization&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Create Swagger.yaml - this is the wsdl for REST&lt;ul&gt;
&lt;li&gt;In Project Properties (Alt-Enter) - Build - Selt "XML Documentation file" - Clear the path&lt;/li&gt;
&lt;li&gt;Install &lt;a href="https://www.nuget.org/packages/Swagger4WCF"&gt;https://www.nuget.org/packages/Swagger4WCF&lt;/a&gt; into the project containing the interfaces (Contracts)&lt;/li&gt;
&lt;li&gt;Build project&lt;/li&gt;
&lt;li&gt;=&amp;gt; The yaml file is in &lt;code&gt;\bin\WebApplicationWcfRest1.IBookService.yaml&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Remove &lt;code&gt;Swagger4WCF&lt;/code&gt; from project &lt;code&gt;WebApplicationWcfRest1&lt;/code&gt;&lt;ul&gt;
&lt;li&gt;In project &lt;code&gt;WebApplicationWcfRest1&lt;/code&gt; add ref to project &lt;code&gt;Contracts&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;In &lt;code&gt;packages.config&lt;/code&gt; remove line having &lt;code&gt;Swagger4WCF&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Rebuild Solution&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;7. Add dependency injection with Unity&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Remove &lt;code&gt;Swagger4WCF&lt;/code&gt; from service project&lt;ul&gt;
&lt;li&gt;Unload project &lt;code&gt;WebApplicationWcfRest1&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Remove two lines containing &lt;code&gt;Swagger4WCF&lt;/code&gt; near bottom&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Add dependency injection&lt;ul&gt;
&lt;li&gt;Install &lt;a href="https://www.nuget.org/packages/Unity.Wcf"&gt;https://www.nuget.org/packages/Unity.Wcf&lt;/a&gt; into the project containing the services (&lt;code&gt;WebApplicationWcfRest1&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;=&amp;gt; This created file &lt;code&gt;WcfServiceFactory.cs&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;View Markup of &lt;code&gt;RestService1.svc&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Replace: &lt;code&gt;CodeBehind="RestService1.svc.cs"&lt;/code&gt;&lt;ul&gt;
&lt;li&gt;with: &lt;code&gt;Factory="WebApplicationWcfRest1.WcfServiceFactory"&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;In &lt;code&gt;WcfServiceFactory.cs&lt;/code&gt; register the service:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;               &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;RegisterType&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;IBookService&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;RestService1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;();&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;Build the solution&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Debug project (F5)&lt;ul&gt;
&lt;li&gt;GET &lt;a href="http://localhost:15563/RestService1.svc/Book/1"&gt;http://localhost:15563/RestService1.svc/Book/1&lt;/a&gt; in Postman&lt;/li&gt;
&lt;li&gt;=&amp;gt; Response: &lt;code&gt;{"Id": 1, "Name": "The incredible stamp"}&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;8. Use HTTP Status Codes&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Add HTTP Status Codes to your service&lt;ul&gt;
&lt;li&gt;In your service &lt;code&gt;RestService1.svc.cs&lt;/code&gt; - method &lt;code&gt;AddBook()&lt;/code&gt; add content&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;            &lt;span class="n"&gt;WebOperationContext&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Current&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;OutgoingResponse&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;StatusCode&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Net&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;HttpStatusCode&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Created&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// 201&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;book&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Name&lt;/span&gt; &lt;span class="p"&gt;==&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;The incredible stamp&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;   &lt;span class="c1"&gt;// Book exist&lt;/span&gt;
                &lt;span class="n"&gt;WebOperationContext&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Current&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;OutgoingResponse&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;StatusCode&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Net&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;HttpStatusCode&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Conflict&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// 409&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;In method &lt;code&gt;UpdateBook()&lt;/code&gt; add content&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;book&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Id&lt;/span&gt; &lt;span class="p"&gt;==&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="c1"&gt;// Book does not exist - 404&lt;/span&gt;
                &lt;span class="n"&gt;WebOperationContext&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Current&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;OutgoingResponse&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SetStatusAsNotFound&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Resource not found&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;book&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Name&lt;/span&gt; &lt;span class="p"&gt;==&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="c1"&gt;// Invalid request&lt;/span&gt;
                &lt;span class="n"&gt;WebOperationContext&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Current&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;OutgoingResponse&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;StatusCode&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Net&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;HttpStatusCode&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;MethodNotAllowed&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// 405&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;In method &lt;code&gt;GetBookById()&lt;/code&gt; add content&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="p"&gt;==&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;2&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="c1"&gt;// Book does not exist - 404&lt;/span&gt;
                &lt;span class="n"&gt;WebOperationContext&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Current&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;OutgoingResponse&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SetStatusAsNotFound&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Resource not found&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;Book&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;Id&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Name&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;The incredible stamp&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;Follow the guidance for HTTP Status Codes in &lt;a href="https://developers.redhat.com/blog/2017/01/19/applying-api-best-practices-in-fuse/"&gt;https://developers.redhat.com/blog/2017/01/19/applying-api-best-practices-in-fuse/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;=&amp;gt; Test the change using Postman&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Update your yaml with the Status Codes&lt;ul&gt;
&lt;li&gt;In &lt;code&gt;IBookService.yaml&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    &lt;span class="l l-Scalar l-Scalar-Plain"&gt;put&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt;
      &lt;span class="l l-Scalar l-Scalar-Plain"&gt;responses&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt;
        &lt;span class="l l-Scalar l-Scalar-Plain"&gt;201&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt;
          &lt;span class="l l-Scalar l-Scalar-Plain"&gt;description&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Book&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;created&amp;quot;&lt;/span&gt;
        &lt;span class="l l-Scalar l-Scalar-Plain"&gt;409&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt;
          &lt;span class="l l-Scalar l-Scalar-Plain"&gt;description&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Book&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;exist&amp;quot;&lt;/span&gt;
    &lt;span class="l l-Scalar l-Scalar-Plain"&gt;post&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt;
      &lt;span class="l l-Scalar l-Scalar-Plain"&gt;responses&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt;
        &lt;span class="l l-Scalar l-Scalar-Plain"&gt;404&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt;
          &lt;span class="l l-Scalar l-Scalar-Plain"&gt;description&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Book&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;not&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;found&amp;quot;&lt;/span&gt;
        &lt;span class="l l-Scalar l-Scalar-Plain"&gt;405&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt;
          &lt;span class="l l-Scalar l-Scalar-Plain"&gt;description&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Validation&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;exception&amp;quot;&lt;/span&gt;
    &lt;span class="l l-Scalar l-Scalar-Plain"&gt;get&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt;
      &lt;span class="l l-Scalar l-Scalar-Plain"&gt;responses&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt;
        &lt;span class="l l-Scalar l-Scalar-Plain"&gt;404&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt;
          &lt;span class="l l-Scalar l-Scalar-Plain"&gt;description&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Book&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;not&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;found&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;9. CORS&lt;/h2&gt;
&lt;p&gt;To be able to call the API you need to allow clients to call it. You can do that already in global.asax&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;protected&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;Application_BeginRequest&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;object&lt;/span&gt; &lt;span class="n"&gt;sender&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;EventArgs&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;HttpContext&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Current&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AddHeader&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Access-Control-Allow-Origin&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;http://localhost&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;HttpContext&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Current&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;HttpMethod&lt;/span&gt; &lt;span class="p"&gt;==&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;OPTIONS&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;HttpContext&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Current&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AddHeader&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Access-Control-Allow-Methods&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;POST, PUT, DELETE&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="n"&gt;HttpContext&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Current&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AddHeader&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Access-Control-Allow-Headers&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Content-Type, Accept&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;HttpContext&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Current&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AddHeader&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Access-Control-Max-Age&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;1728000&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;HttpContext&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Current&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;End&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;10. Security&lt;/h2&gt;
&lt;p&gt;Towards a SPA or mobile you could use OAuth as demonstrated in &lt;a href="https://www.codeproject.com/Tips/372422/Secure-WCF-RESTful-service-using-OAUTH"&gt;Secure WCF RESTful service using OAUTH&lt;/a&gt;&lt;br&gt;
Towards a partner you could use certificates as demonstrated in &lt;a href="http://hiteshkesharia.blogspot.dk/2014/01/secure-wcf-rest-service-with-x509.html"&gt;Secure a WCF REST Service with an X509 Certificate, hosted on IIS&lt;/a&gt;  &lt;/p&gt;
&lt;h2&gt;11. Adding Swagger examples&lt;/h2&gt;
&lt;p&gt;To make your API clearer to understand you can add &lt;a href="https://swagger.io/docs/specification/2-0/adding-examples/"&gt;Swagger examples&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Refs / Credits&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Postman: &lt;a href="https://www.getpostman.com/"&gt;https://www.getpostman.com/&lt;/a&gt; or &lt;a href="https://chrome.google.com/webstore/detail/postman/fhbjgbiflinjbdggehcddcbncdddomop?hl=en"&gt;https://chrome.google.com/webstore/detail/postman/fhbjgbiflinjbdggehcddcbncdddomop?hl=en&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Swagger4WCF: &lt;a href="https://www.codeproject.com/Tips/1190441/How-to-generate-basic-swagger-yaml-description-for"&gt;https://www.codeproject.com/Tips/1190441/How-to-generate-basic-swagger-yaml-description-for&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;NuGet Swagger4WCF: &lt;a href="https://www.nuget.org/packages/Swagger4WCF"&gt;https://www.nuget.org/packages/Swagger4WCF&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Unity.WCF: &lt;a href="https://www.devtrends.co.uk/blog/introducing-unity.wcf-providing-easy-ioc-integration-for-your-wcf-services"&gt;https://www.devtrends.co.uk/blog/introducing-unity.wcf-providing-easy-ioc-integration-for-your-wcf-services&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Set StatusCode: &lt;a href="https://codeblitz.wordpress.com/2009/04/27/how-to-host-and-consume-wcf-restful-services/"&gt;https://codeblitz.wordpress.com/2009/04/27/how-to-host-and-consume-wcf-restful-services/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;API Best Practices: &lt;a href="https://developers.redhat.com/blog/2017/01/19/applying-api-best-practices-in-fuse/#"&gt;https://developers.redhat.com/blog/2017/01/19/applying-api-best-practices-in-fuse/#&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Enabling CORS in WCF: &lt;a href="https://www.codeproject.com/Articles/845474/Enabling-CORS-in-WCF"&gt;https://www.codeproject.com/Articles/845474/Enabling-CORS-in-WCF&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Official WCF REST Docs: &lt;a href="https://docs.microsoft.com/en-us/dotnet/framework/wcf/samples/web"&gt;https://docs.microsoft.com/en-us/dotnet/framework/wcf/samples/web&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;WCF REST with ASP.NET routing: &lt;a href="https://docs.microsoft.com/en-us/dotnet/framework/wcf/samples/aspnetrouteintegration"&gt;https://docs.microsoft.com/en-us/dotnet/framework/wcf/samples/aspnetrouteintegration&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The End&lt;/p&gt;</content><category term="#wcf"></category><category term="#rest"></category><category term="#swagger"></category><category term="#depencyinjection"></category><category term="#dotnet"></category><category term="#visualstudio"></category><category term="#cors"></category></entry><entry><title>Deploying Express REST API to Azure</title><link href="https://rasor.github.io/deploying-express-rest-api-to-azure.html" rel="alternate"></link><published>2017-10-29T21:00:00+01:00</published><updated>2017-10-30T17:00:00+01:00</updated><author><name>rasor</name></author><id>tag:rasor.github.io,2017-10-29:/deploying-express-rest-api-to-azure.html</id><summary type="html">&lt;p&gt;This blog is part of a series.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="https://rasor.github.io/deploying-ionic-to-azure.html"&gt;Deploying Ionic to Azure&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rasor.github.io/deploying-express-rest-api-to-azure.html"&gt;Deploying Express REST API to Azure&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Add Facebook Authentication to your Express REST API - Planned&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;In this blog I will deploy an Express REST API to Azure Mobile Apps.&lt;/p&gt;
&lt;p&gt;The exercise is almost identical to Part 1 - Deploy Ionic …&lt;/p&gt;</summary><content type="html">&lt;p&gt;This blog is part of a series.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="https://rasor.github.io/deploying-ionic-to-azure.html"&gt;Deploying Ionic to Azure&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rasor.github.io/deploying-express-rest-api-to-azure.html"&gt;Deploying Express REST API to Azure&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Add Facebook Authentication to your Express REST API - Planned&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;In this blog I will deploy an Express REST API to Azure Mobile Apps.&lt;/p&gt;
&lt;p&gt;The exercise is almost identical to Part 1 - Deploy Ionic to Azure, so in this blog I'll leave out the pictures.&lt;/p&gt;
&lt;h1&gt;Here is how to do&lt;/h1&gt;
&lt;h2&gt;The Build server (VSTS)&lt;/h2&gt;
&lt;p&gt;Currently the build server (VSTS) is running&lt;br&gt;
&lt;code&gt;user-agent = "npm/3.10.10 node/v6.10.0 win32 x64"&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;So you should also build your API with &lt;code&gt;node v6&lt;/code&gt; or perhaps a bit lower. It is a bit like in .NET you would also want to build with a framework e.g. &lt;code&gt;.NET 4.5.2&lt;/code&gt; when the build server has &lt;code&gt;.NET 4.7&lt;/code&gt; - at least you don't get too big surprises when your code is build on the build server.&lt;/p&gt;
&lt;p&gt;It should be possible to specify another node version with &lt;code&gt;WEBSITE_NODE_DEFAULT_VERSION&lt;/code&gt;, though I haven't tried. Look for more info &lt;a href="http://blog.stevensanderson.com/2016/10/04/angular2-template-for-visual-studio/"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Your local repo&lt;/h2&gt;
&lt;p&gt;So before you start deploy you should verify that your code can build for prod on &lt;code&gt;node v6&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# If you got nvm switch to v6&lt;/span&gt;
nvm list
nvm use &lt;span class="m"&gt;6&lt;/span&gt;.11.4
&lt;span class="c1"&gt;# or just check that you have v6&lt;/span&gt;
node -v
&lt;span class="c1"&gt;# If you don&amp;#39;t have v6 you might get surprises when you build in VSTS, but purhaps you won&amp;#39;t.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If no errors then we can continue.&lt;/p&gt;
&lt;h2&gt;Your remote origin&lt;/h2&gt;
&lt;p&gt;I have forked &lt;a href="https://github.com/dreamhouseapp/dreamhouse-rest-services"&gt;dreamhouseapp/dreamhouse-rest-services&lt;/a&gt; by &lt;a href="https://twitter.com/ccoenraets"&gt;Christophe Coenraets (@ccoenraets)&lt;/a&gt; to &lt;a href="https://github.com/rasor/dreamhouse-rest-services"&gt;rasor/dreamhouse-rest-services&lt;/a&gt;.&lt;br&gt;
Why? Because I need to give VSTS access to my GitHub account. I can't give it access to @ccoenraets's repo.&lt;br&gt;
You can fork &lt;a href="https://github.com/rasor/dreamhouse-rest-services"&gt;mine&lt;/a&gt;, since it is modified a bit with web.config, making it runable in Azure.&lt;br&gt;
BTW - You can read about @ccoenraets's code here: &lt;a href="http://coenraets.org/blog/2017/04/dreamhouse-sample-application-ionic3-angular4/"&gt;DreamHouse: Sample Application with Ionic 3 and Angular 4&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;web.config&lt;/code&gt; file you need for node.js projects running in IIS looks like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;utf-8&amp;quot;?&amp;gt;&lt;/span&gt;
&lt;span class="c"&gt;&amp;lt;!--&lt;/span&gt;
&lt;span class="c"&gt;     This configuration file is required if iisnode is used to run node processes behind&lt;/span&gt;
&lt;span class="c"&gt;     IIS or IIS Express.  For more information, visit:&lt;/span&gt;
&lt;span class="c"&gt;     https://github.com/tjanczuk/iisnode/blob/master/src/samples/configuration/web.config&lt;/span&gt;
&lt;span class="c"&gt;--&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;configuration&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;system.webServer&amp;gt;&lt;/span&gt;
    &lt;span class="c"&gt;&amp;lt;!-- Visit http://blogs.msdn.com/b/windowsazure/archive/2013/11/14/introduction-to-websockets-on-windows-azure-web-sites.aspx for more information on WebSocket support --&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;webSocket&lt;/span&gt; &lt;span class="na"&gt;enabled=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;false&amp;quot;&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;handlers&amp;gt;&lt;/span&gt;
      &lt;span class="c"&gt;&amp;lt;!-- Indicates that the server.js file is a node.js site to be handled by the iisnode module --&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;add&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;iisnode&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;path=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;server.js&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;verb=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;*&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;modules=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;iisnode&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/handlers&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;rewrite&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;rules&amp;gt;&lt;/span&gt;
        &lt;span class="c"&gt;&amp;lt;!-- Do not interfere with requests for node-inspector debugging --&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;rule&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;NodeInspector&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;patternSyntax=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;ECMAScript&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;stopProcessing=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;true&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;match&lt;/span&gt; &lt;span class="na"&gt;url=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;^server.js\/debug[\/]?&amp;quot;&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/rule&amp;gt;&lt;/span&gt;

        &lt;span class="c"&gt;&amp;lt;!-- First we consider whether the incoming URL matches a physical file in the /public folder --&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;rule&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;StaticContent&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;action&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Rewrite&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;url=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;public{REQUEST_URI}&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/rule&amp;gt;&lt;/span&gt;

        &lt;span class="c"&gt;&amp;lt;!-- All other URLs are mapped to the node.js site entry point --&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;rule&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;DynamicContent&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;conditions&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;add&lt;/span&gt; &lt;span class="na"&gt;input=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;{REQUEST_FILENAME}&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;matchType=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;IsFile&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;negate=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;True&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;/conditions&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;action&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Rewrite&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;url=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;server.js&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/rule&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;/rules&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/rewrite&amp;gt;&lt;/span&gt;

    &lt;span class="c"&gt;&amp;lt;!-- &amp;#39;bin&amp;#39; directory has no special meaning in node.js and apps can be placed in it --&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;security&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;requestFiltering&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;hiddenSegments&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;remove&lt;/span&gt; &lt;span class="na"&gt;segment=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;bin&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/hiddenSegments&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;/requestFiltering&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/security&amp;gt;&lt;/span&gt;

    &lt;span class="c"&gt;&amp;lt;!-- Make sure error responses are left untouched --&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;httpErrors&lt;/span&gt; &lt;span class="na"&gt;existingResponse=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;PassThrough&amp;quot;&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;

    &lt;span class="c"&gt;&amp;lt;!--&lt;/span&gt;
&lt;span class="c"&gt;      You can control how Node is hosted within IIS using the following options:&lt;/span&gt;
&lt;span class="c"&gt;        * watchedFiles: semi-colon separated list of files that will be watched for changes to restart the server&lt;/span&gt;
&lt;span class="c"&gt;        * node_env: will be propagated to node as NODE_ENV environment variable&lt;/span&gt;
&lt;span class="c"&gt;        * debuggingEnabled - controls whether the built-in debugger is enabled&lt;/span&gt;

&lt;span class="c"&gt;      See https://github.com/tjanczuk/iisnode/blob/master/src/samples/configuration/web.config for a full list of options&lt;/span&gt;
&lt;span class="c"&gt;    --&amp;gt;&lt;/span&gt;
    &lt;span class="c"&gt;&amp;lt;!--&amp;lt;iisnode watchedFiles=&amp;quot;web.config;*.js&amp;quot;/&amp;gt;--&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/system.webServer&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/configuration&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;It seems like the web.confog is generated for you, when you choose Node.js as target environment during Release Definition in VSTS.&lt;/p&gt;
&lt;h2&gt;Your local repo&lt;/h2&gt;
&lt;p&gt;When you have forked a repo do:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git clone https://github.com/yourgithubusername/dreamhouse-rest-services
&lt;span class="nb"&gt;cd&lt;/span&gt; dreamhouse-rest-services
npm install &lt;span class="c1"&gt;# download node_modules&lt;/span&gt;
start &lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;http://localhost:5000/properties&amp;quot;&lt;/span&gt; &lt;span class="c1"&gt;#start browser - this work in windows&lt;/span&gt;
node server &lt;span class="c1"&gt;# start webserver&lt;/span&gt;
&lt;span class="c1"&gt;# refresh browser (F5) if it timed out before the server was started&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Build to drop folder in VSTS&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;When you have created a VSTS account via &lt;a href="https://www.visualstudio.com/"&gt;Visual Studio VSTS&lt;/a&gt; browse to &lt;a href="https://yourvstsusername.visualstudio.com/_projects"&gt;https://yourvstsusername.visualstudio.com/_projects&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Since you already have a build project from part 1, you can reuse that project and just create yet a build definion on:
&lt;a href="https://yourvstsusername.visualstudio.com/dreamhouse-mobile-ionic/_build?path=%5C&amp;amp;_a=allDefinitions"&gt;https://yourvstsusername.visualstudio.com/dreamhouse-mobile-ionic/_build?path=%5C&amp;amp;_a=allDefinitions&lt;/a&gt;&lt;br&gt;
or you can browse to there: Press &lt;code&gt;Build and Release&lt;/code&gt; then  &lt;code&gt;All Definitions&lt;/code&gt;. There you see your Build Definition for building your Ionic project.&lt;/li&gt;
&lt;li&gt;press &lt;code&gt;+ New&lt;/code&gt; to add a new Build Definition - more or less as you might be used to from TFS.  &lt;/li&gt;
&lt;li&gt;Choose an Empty process - meaning there are no build steps to start out with  &lt;/li&gt;
&lt;li&gt;Now you need to connect to GitHub. Select &lt;code&gt;Get sources&lt;/code&gt; in left pane and select &lt;code&gt;Remote repo&lt;/code&gt; in right pane. You need to authenticate towards GitHub - go through that process.&lt;br&gt;
Name: &lt;code&gt;yourgithubusername_dreamhouse-rest-services&lt;/code&gt;
Repo: &lt;code&gt;https://github.com/yourgithubusername/dreamhouse-rest-services&lt;/code&gt;
Set Clean to &lt;code&gt;true&lt;/code&gt;, so the source files from the Ionic build will be removed - Set clean options to &lt;code&gt;Sources&lt;/code&gt;&lt;br&gt;
Notice - this is like when you did git clone locally&lt;/li&gt;
&lt;li&gt;Just above &lt;code&gt;Get Sources&lt;/code&gt; there is &lt;code&gt;Process&lt;/code&gt; - select it.&lt;br&gt;
Name: dreamhouse-rest-services-Build&lt;br&gt;
Agent Queue: Hosted VS2017&lt;/li&gt;
&lt;li&gt;So what did you do after git clone? &lt;code&gt;npm install&lt;/code&gt;. In Phase 1 press &lt;code&gt;+&lt;/code&gt; and select npm task.
&lt;img alt="Select npm task" src="img/2017/2017-10-09-VSTS5.PNG" title="Select npm task"&gt;&lt;/li&gt;
&lt;li&gt;Configure npm task by pressing the dropdown list and select &lt;code&gt;install&lt;/code&gt;&lt;br&gt;
&lt;img alt="Configure npm install" src="img/2017/2017-10-09-VSTS6.PNG" title="Configure npm install"&gt;&lt;/li&gt;
&lt;li&gt;After install you started the browser and did &lt;code&gt;node server&lt;/code&gt;. But that was a development task - not a build task  &lt;/li&gt;
&lt;li&gt;So we ran out of steps locally, but on the build server we still need to package the build output and send it to Azure&lt;br&gt;
Next task is a zip-task. Press &lt;code&gt;+&lt;/code&gt; and select &lt;code&gt;Archive Files&lt;/code&gt;&lt;br&gt;
&lt;img alt="Select zip task" src="img/2017/2017-10-09-VSTS8.PNG" title="Select zip task"&gt;&lt;/li&gt;
&lt;li&gt;Root folder is the build code you want to deploy. It is located in the &lt;code&gt;.\&lt;/code&gt; folder - just as when you work locally.&lt;br&gt;
Unselect "Prefix root folder ..."&lt;br&gt;
The name of the zipped package should be &lt;code&gt;$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;Final build step to do is to put the package in a drop folder&lt;br&gt;
Next task is a publish task. Press &lt;code&gt;+&lt;/code&gt; and select &lt;code&gt;Publish Build Artifacts&lt;/code&gt;&lt;br&gt;
Notice - you can create PowerShell, Shell Script and Batch Script tasks. So if you npm installed a nice utility, you could then do anything with it in a script which could be in your code e.g. `.\scripts\runkarmaandprotractortests.cmd
&lt;img alt="Select publish task" src="img/2017/2017-10-09-VSTS10.PNG" title="Select publish task"&gt;&lt;/li&gt;
&lt;li&gt;Path to publish is the zip file you created in last step&lt;br&gt;
Artifact Name is the name of the drop folder. Call it &lt;code&gt;drop-rest&lt;/code&gt;, so it can't be confused with the Ionic drop.&lt;br&gt;
And location must be &lt;code&gt;TFS&lt;/code&gt; (opposed to File Share)  &lt;/li&gt;
&lt;li&gt;Press &lt;code&gt;Save &amp;amp; queue&lt;/code&gt;. In top of the screen you'll see &lt;code&gt;Build #&amp;lt;some-number&amp;gt; has been queued.&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Click on &lt;code&gt;#&amp;lt;some-number&amp;gt;&lt;/code&gt;. Now you can see the progress of the build.&lt;br&gt;
When the build has finished you'll see &lt;code&gt;Build Succeeded&lt;/code&gt; and above that &lt;code&gt;dreamhouse-rest-services-Build / Build &amp;lt;some-number&amp;gt; / Phase 1&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;Click on &lt;code&gt;Build &amp;lt;some-number&amp;gt;&lt;/code&gt;. Now you get 5 tabs for that build: &lt;code&gt;Summary - Timeline - Artifacts - Code coverage* - Tests&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;Click on &lt;code&gt;Artifacts&lt;/code&gt;. Now you see the dropfolder. Check it out and see if it contains what you expected.  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Have you noticed that these Build Tasks correspond to the features in &lt;a href="https://www.jetbrains.com/teamcity/"&gt;TeamCity&lt;/a&gt;? &lt;/p&gt;
&lt;p&gt;Next up is to deploy the package to Azure.&lt;/p&gt;
&lt;h2&gt;Setup WebApp in Azure&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;When you have created a free Azure account via &lt;a href="https://azure.microsoft.com/en-in/free/"&gt;Microsoft Azure&lt;/a&gt; browse to &lt;a href="https://portal.azure.com/"&gt;Azure Portal&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;In Part 1 you created a Resource Group e.g. &lt;code&gt;ResGroupNorthEurope&lt;/code&gt;. This is where all your stuff in Azure lives.
&lt;img alt="Configure Resource Group" src="img/2017/2017-10-09-Azure2.PNG" title="Configure Resource Group"&gt;&lt;/li&gt;
&lt;li&gt;This time you could also have chosen  webapp as before, but Azure has another option called Mobile App. This has the option of offering Notifications and other MBaaS (Mobile Backend) services.&lt;br&gt;
You find that under &lt;code&gt;App Services&lt;/code&gt;. Click &lt;code&gt;+ Add&lt;/code&gt; then &lt;code&gt;Filter&lt;/code&gt;&lt;br&gt;
Enter &lt;code&gt;Mobile Apps&lt;/code&gt;&lt;br&gt;
Then you see a small selection of mobile apps  &lt;/li&gt;
&lt;li&gt;Select &lt;code&gt;Mobile App&lt;/code&gt;&lt;br&gt;
Since I have already taken subdomain dreamhouse-rest-services you have to choose another one - e.g.  &lt;code&gt;yourvstsusername-dreamhouse-rest-services&lt;/code&gt;&lt;br&gt;
Resourse Group: Use the one you created before: &lt;code&gt;`Use Existing&lt;/code&gt;&lt;br&gt;
App Service Plan is the Dyno in Heroku or EC2 in AWS - the size of your PaaS.&lt;br&gt;
Resuse the one you created in Part 1 e.g. &lt;code&gt;AppSvcPlanNorthEuropeWindows (Standard: 1 Small)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You're done in Azure. Next up is to release to Azure from VSTS.&lt;/p&gt;
&lt;h2&gt;Release to Azure from VSTS&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Go back to &lt;a href="https://yourvstsusername.visualstudio.com/dreamhouse-mobile-ionic/_build"&gt;https://yourvstsusername.visualstudio.com/dreamhouse-mobile-ionic/_build&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;You can deploy to many environments and services. This time we want to deploy to our Mobile App.&lt;br&gt;
First step is to select that target environment in a Release&lt;br&gt;
Click tab &lt;code&gt;Releases&lt;/code&gt; then &lt;code&gt;+&lt;/code&gt; - &lt;code&gt;Create Release Definition&lt;/code&gt; - Select &lt;code&gt;Deploy Node.js App to App Service&lt;/code&gt; and click Apply &lt;br&gt;
&lt;img alt="Add Release Definition" src="img/2017/2017-10-29-VSTSRelease1.PNG" title="Add Release Definition"&gt;&lt;/li&gt;
&lt;li&gt;Notice the ´!´ - something needs attention - click either of them&lt;br&gt;
&lt;img alt="Tasks needs attention" src="img/2017/2017-10-09-VSTSRelease2.PNG" title="Tasks needs attention"&gt;&lt;/li&gt;
&lt;li&gt;Hey - that looks familiar - a list of steps in a task list - just as under tab &lt;code&gt;Build&lt;/code&gt;&lt;br&gt;
Yes, but heading is &lt;code&gt;Environment 1&lt;/code&gt; - not &lt;code&gt;Phase 1&lt;/code&gt;. And for the environmet you have to connect to Azure.
Azure subscription click on the drop down list to select the one you connected to in Part 1.&lt;br&gt;
When connected you can click the dropdown list to select your mobile app &lt;code&gt;yourvstsusername-dreamhouse-rest-services&lt;/code&gt;&lt;br&gt;
&lt;img alt="Connect to Azure" src="img/2017/2017-10-29-VSTSRelease3.PNG" title="Connect to Azure"&gt;&lt;/li&gt;
&lt;li&gt;Head back to tab &lt;code&gt;Pipeline&lt;/code&gt; - we need to fetch a source to deploy&lt;br&gt;
Select &lt;code&gt;Add Artifact&lt;/code&gt; and select source type: &lt;code&gt;Build&lt;/code&gt;, so we can fetch the zip file from drop.&lt;br&gt;
Notice: Source type can also be: &lt;code&gt;Git, GitHub, Jenkins and Team Foundation Version Control&lt;/code&gt;.&lt;br&gt;
Project: Select &lt;code&gt;dreamhouse-mobile-ionic&lt;/code&gt;&lt;br&gt;
Build Definition: Select &lt;code&gt;dreamhouse-rest-services-Build&lt;/code&gt;.&lt;br&gt;
Notice that since you did a build before VSTS knows it created &lt;code&gt;drop-rest&lt;/code&gt;
Accept default values and press Add.&lt;br&gt;
&lt;img alt="Add Artifact" src="img/2017/2017-10-29-VSTSRelease4.PNG" title="Add Artifact"&gt;&lt;/li&gt;
&lt;li&gt;Press the lightning icon on the Artifact. &lt;/li&gt;
&lt;li&gt;Enable Continous deployment. Notice the trigger is whenever a new drop has been made.&lt;br&gt;
&lt;img alt="Release Trigger" src="img/2017/2017-10-09-VSTSRelease5.PNG" title="Release Trigger"&gt;&lt;/li&gt;
&lt;li&gt;Now that we have a source we can head back to &lt;code&gt;Tasks&lt;/code&gt;, select &lt;code&gt;Deploy Azure App Service&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;App Service name: &lt;code&gt;yourvstsusername-dreamhouse-mobile-rest&lt;/code&gt;&lt;br&gt;
Package: &lt;code&gt;$(System.DefaultWorkingDirectory)\**\*.zip&lt;/code&gt;. You can browse to it by pressing &lt;code&gt;...&lt;/code&gt;&lt;br&gt;
&lt;img alt="Pick zip file" src="img/2017/2017-10-09-VSTSRelease6.PNG" title="Pick zip file"&gt;&lt;/li&gt;
&lt;li&gt;Before we save the Release Definition head to &lt;code&gt;Pipeline&lt;/code&gt; - and select the Lightning in the Environment&lt;br&gt;
Notice you have a possibility to select persons to approve deployment. This can be tester that approves one environment before a build is rolled out for the next environment.&lt;br&gt;
&lt;img alt="Approvers" src="img/2017/2017-10-09-VSTSRelease7.PNG" title="Approvers"&gt;
We don't want approvers - so go on and save as &lt;code&gt;dreamhouse-rest-Release&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Have you noticed that these Release workflow correspond to the features in &lt;a href="https://octopus.com/"&gt;Octopus Deploy&lt;/a&gt;? &lt;/p&gt;
&lt;h2&gt;Trig a build and a release to Azure&lt;/h2&gt;
&lt;p&gt;Now we are ready for the big show - deploy to Azure
(Notice - all the images are reused from Part 1)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Head back to &lt;code&gt;Builds&lt;/code&gt; - tab &lt;code&gt;All Definitions&lt;/code&gt; - click on the &lt;code&gt;dreamhouse-rest-services-Build&lt;/code&gt;&lt;br&gt;
&lt;img alt="Prepare to build" src="img/2017/2017-10-09-VSTSQueue1.PNG" title="Prepare to build"&gt;&lt;/li&gt;
&lt;li&gt;Click &lt;code&gt;Queue New Build...&lt;/code&gt; - then click &lt;code&gt;Queue&lt;/code&gt; &lt;br&gt;
&lt;img alt="Queue build" src="img/2017/2017-10-09-VSTSQueue2.PNG" title="Queue build"&gt;&lt;/li&gt;
&lt;li&gt;If the Build succeded head to &lt;code&gt;Releases&lt;/code&gt; tab and verify that the build triggered a release&lt;br&gt;
&lt;img alt="Triggered release" src="img/2017/2017-10-09-VSTSQueue4.PNG" title="Triggered release"&gt;&lt;/li&gt;
&lt;li&gt;If the release succeeded, too head to &lt;code&gt;Azure App Services&lt;/code&gt; in &lt;a href="https://portal.azure.com"&gt;Azure&lt;/a&gt;&lt;br&gt;
Select your service and scroll down to &lt;code&gt;Continous Delivery&lt;/code&gt;&lt;br&gt;
You should see the Release has been Deployed Successfully&lt;br&gt;
&lt;img alt="Succeeded release" src="img/2017/2017-10-09-VSTSQueue5.PNG" title="Succeeded release"&gt;
In my case the relese ended with this warning:&lt;br&gt;
&lt;code&gt;2017-10-29T19:44:36.5445296Z ##[warning]Failed to update App Service configuration details. Error: Error: connect ETIMEDOUT 157.56.31.170:443&lt;/code&gt; That meant that the above image did not show a succeeded release. 
Instead I could browse in the App Service Console and the files were alse viewable from App Service Editor.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So to verify that browse to you service on&lt;br&gt;
&lt;a href="http://yourvstsusername-dreamhouse-mobile-rest.azurewebsites.net/properties"&gt;http://yourvstsusername-dreamhouse-mobile-rest.azurewebsites.net/properties&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If you are just reading along you can also find my site &lt;a href="http://dreamhouse-mobile-rest.azurewebsites.net/properties"&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The End.&lt;/p&gt;</content><category term="#npm"></category><category term="#git"></category><category term="#express"></category><category term="#nodejs"></category><category term="#azure"></category></entry><entry><title>Contributing to Open Source</title><link href="https://rasor.github.io/contributing-to-open-source.html" rel="alternate"></link><published>2017-10-14T23:00:00+02:00</published><updated>2017-10-27T21:00:00+02:00</updated><author><name>rasor</name></author><id>tag:rasor.github.io,2017-10-14:/contributing-to-open-source.html</id><summary type="html">&lt;p&gt;What is needed to contribute to Open Source hosted in Git?&lt;br&gt;
It is quite a bit - read all about it &lt;a href="https://opensource.guide/how-to-contribute/"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This blog post assumes you contribute by doing changes to a git repo.&lt;br&gt;
So In short you need to&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Choose a project you will do changes into&lt;/li&gt;
&lt;li&gt;Follow below …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;What is needed to contribute to Open Source hosted in Git?&lt;br&gt;
It is quite a bit - read all about it &lt;a href="https://opensource.guide/how-to-contribute/"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This blog post assumes you contribute by doing changes to a git repo.&lt;br&gt;
So In short you need to&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Choose a project you will do changes into&lt;/li&gt;
&lt;li&gt;Follow below Git Workflow&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Abbreviations&lt;/h2&gt;
&lt;p&gt;Before start you need to get a little list of vocabulary&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Abbr&lt;/th&gt;
&lt;th&gt;Full&lt;/th&gt;
&lt;th&gt;Meaning&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;PR&lt;/td&gt;
&lt;td&gt;Pull Request&lt;/td&gt;
&lt;td&gt;Your code submitted for review before merge into Upstream&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Repo&lt;/td&gt;
&lt;td&gt;Repository&lt;/td&gt;
&lt;td&gt;A project folder under source control having a \.git\ subfolder&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;WIP&lt;/td&gt;
&lt;td&gt;Work In Progress&lt;/td&gt;
&lt;td&gt;Comment in PR for unfinished code - indication feedback wanted before going too far on a wrong tangent&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;#&lt;/td&gt;
&lt;td&gt;“Closes #37.”&lt;/td&gt;
&lt;td&gt;Comment with reference to an issue&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Git Contributer&lt;/td&gt;
&lt;td&gt;Person, who sends a Pull Request&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Git Maintainer&lt;/td&gt;
&lt;td&gt;Person, who merges a Pull Request&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Fork and Pull model&lt;/td&gt;
&lt;td&gt;One out of two &lt;a href="https://help.github.com/articles/about-collaborative-development-models/"&gt;development models&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Shared Repository model&lt;/td&gt;
&lt;td&gt;One out of two &lt;a href="https://help.github.com/articles/about-collaborative-development-models/"&gt;development models&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Upstream&lt;/td&gt;
&lt;td&gt;A repo where you want to merge PR's into&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Next thing you need to know is that the &lt;code&gt;master&lt;/code&gt; branch is always production - meaning - you do your work in a feature branch and you ask the owner of the repo if he wants your changes. Often a discussion will follow and possible more changes you will have to do - including deploy to test - before it perhaps is accepted by being merged into the master.
In more details &lt;a href="https://guides.github.com/introduction/flow/"&gt;here is a visual flow&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Since you are just starting you are probably not member of a team, that has access to a shared repo.&lt;br&gt;
Thus you need to contribute with the &lt;a href="https://help.github.com/articles/about-collaborative-development-models/"&gt;Fork and Pull model&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Fork and Pull model" src="img/2017/2017-10-14-Fork-and-Pull.png" title="Fork and Pull model"&gt;&lt;/p&gt;
&lt;p&gt;I use two phases&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A. Prepare&lt;/li&gt;
&lt;li&gt;B. Do the work, PR and cleanup&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In that way you can do A. Prepare only once and repeat phase B.&lt;/p&gt;
&lt;h3&gt;A. Prepare&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# 1. Create a Fork of the repo you will contribute to&lt;/span&gt;
&lt;span class="c1"&gt;# 2. Download your Fork (origin)&lt;/span&gt;
git clone https://github.com/your_userid/ORIGINAL_REPOSITORY.git
&lt;span class="nb"&gt;cd&lt;/span&gt; ORIGINAL_REPOSITORY
&lt;span class="c1"&gt;# 3. Add Upstream as a remote&lt;/span&gt;
git remote add upstream https://github.com/ORIGINAL_OWNER/ORIGINAL_REPOSITORY.git
git remote -v
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;B. Do the work, PR and cleanup&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# 4. Download latest changes from upstream&lt;/span&gt;
git pull upstream master &lt;span class="c1"&gt;# or rebase&lt;/span&gt;
&lt;span class="c1"&gt;# handle possible conflicts: https://help.github.com/articles/addressing-merge-conflicts/&lt;/span&gt;
git status
git commit -a -m &lt;span class="s2"&gt;&amp;quot;upstream changes added&amp;quot;&lt;/span&gt;
&lt;span class="c1"&gt;# 5. Create a feature branch&lt;/span&gt;
git checkout -b mynewfeaturebranch
&lt;span class="c1"&gt;# 6. Do some work and save&lt;/span&gt;
git commit -a -m &lt;span class="s2"&gt;&amp;quot;made a nice feature&amp;quot;&lt;/span&gt;
&lt;span class="c1"&gt;# 7. Push branch to fork&lt;/span&gt;
git push -u origin mynewfeaturebranch
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;a href="https://help.github.com/articles/creating-a-pull-request-from-a-fork/"&gt;8a. Pull Request to upstream - from Fork&lt;/a&gt;  &lt;/p&gt;
&lt;p&gt;You are then rewarded with this image for the first PR, if it was GitHub you contributed to&lt;br&gt;
&lt;img alt="The first Pull Request" src="img/2017/2017-10-14-profile-first-pr.png" title="The first Pull Request"&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;8b. Listen for feedback&lt;br&gt;
You can see your PR's &lt;a href="https://github.com/pulls"&gt;here&lt;/a&gt;. Maintainers will make comments in there.&lt;/li&gt;
&lt;li&gt;8c. Maintainer merges feature branch to upstream&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Remember - Always be polite. Maintainers are in their good right to not care about your contribution.&lt;br&gt;
If you don't like that you can just keep working on your perfect fork.&lt;/p&gt;
&lt;p&gt;But if you only have your fork for PR's, then it is time to do clean-up, so you can do another cycle.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# 9. Delete mynewfeaturebranch&lt;/span&gt;
git checkout mynewfeaturebranch
git branch -d
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Find a project&lt;/h3&gt;
&lt;p&gt;Knowing how to create a PR, you can now go out and look for a project to contribute to&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Read CONTRIBUTING, CODE_OF_CONDUCT and/or README&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/MunGell/awesome-for-beginners"&gt;https://github.com/MunGell/awesome-for-beginners&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/showcases/great-for-new-contributors"&gt;https://github.com/showcases/great-for-new-contributors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://hacktoberfest.digitalocean.com/?utm_source=local&amp;amp;utm_medium=email&amp;amp;utm_campaign=Hacktoberfest2017#projects"&gt;Hacktoberfest - DigitalOcean&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/search?q=state%3Aopen+label%3Ahacktoberfest+is%3Aissue&amp;amp;type=Issues&amp;amp;utf8=%E2%9C%93&amp;amp;utm_source=DigitalOcean_Hacktoberfest2017"&gt;#Hacktoberfest&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Next steps&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://opensource.guide/"&gt;https://opensource.guide/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;See bottom of &lt;a href="http://jlord.us/patchwork/"&gt;Patchwork&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;@osteele's GIT commands&lt;/h2&gt;
&lt;p&gt;&lt;img alt="@osteele's GIT commands" src="http://images.osteele.com/2008/git-transport.png" title="@osteele's GIT commands"&gt;&lt;/p&gt;
&lt;h2&gt;Links&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.digitalocean.com/community/tutorials/how-to-rebase-and-update-a-pull-request"&gt;How To Rebase and Update a PR&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://opensource.guide/how-to-contribute/#orienting-yourself-to-a-new-project"&gt;https://opensource.guide/how-to-contribute/#orienting-yourself-to-a-new-project&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.freecodecamp.org/a-beginners-very-bumpy-journey-through-the-world-of-open-source-4d108d540b39"&gt;https://medium.freecodecamp.org/a-beginners-very-bumpy-journey-through-the-world-of-open-source-4d108d540b39&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.firsttimersonly.com/"&gt;http://www.firsttimersonly.com/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://help.github.com/articles/github-flow/"&gt;https://help.github.com/articles/github-flow/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://help.github.com/articles/working-with-forks/"&gt;https://help.github.com/articles/working-with-forks/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://help.github.com/categories/collaborating-with-issues-and-pull-requests/"&gt;Content - When Asking for Pull Requests&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://help.github.com/articles/merging-an-upstream-repository-into-your-fork/"&gt;Merge local from upstream - when using Fork and pull&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://help.github.com/articles/allowing-changes-to-a-pull-request-branch-created-from-a-fork/"&gt;Allow maintainers to make changes to your branch&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Get started links&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://* [Git-it (Desktop App)](https://github.com/jlord/git-it-electron)"&gt;Git-it - a git exercise&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://blog.osteele.com/2008/05/my-git-workflow/"&gt;@osteele's GIT Workflow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://slides.com/acanimal/git#/"&gt;Git - by slides by @acanimal&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://ndpsoftware.com/git-cheatsheet.html#loc=remote_repo;"&gt;Git Cheatsheet&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://guides.github.com/introduction/flow/"&gt;the GitHub Flow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://guides.github.com/activities/hello-world/"&gt;GitHub hello-world&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.microsoft.com/en-us/vsts/git/gitquickstart?tabs=visual-studio"&gt;Git and VS2017&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://nvie.com/posts/a-successful-git-branching-model/"&gt;A Git branching model&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The End&lt;/p&gt;</content><category term="#git"></category></entry><entry><title>Deploying Ionic to Azure</title><link href="https://rasor.github.io/deploying-ionic-to-azure.html" rel="alternate"></link><published>2017-10-10T21:00:00+02:00</published><updated>2018-05-10T12:00:00+02:00</updated><author><name>rasor</name></author><id>tag:rasor.github.io,2017-10-10:/deploying-ionic-to-azure.html</id><summary type="html">&lt;p&gt;This blog is part of a series.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="https://rasor.github.io/deploying-ionic-to-azure.html"&gt;Deploying Ionic to Azure&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rasor.github.io/deploying-express-rest-api-to-azure.html"&gt;Deploying Express REST API to Azure&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The blog is based on &lt;a href="https://twitter.com/sethreidnz"&gt;@sethreidnz&lt;/a&gt;'s 
article &lt;a href="https://sethreid.co.nz/deploying-angular-cli-project-using-vsts-build-release/"&gt;Deploying an Angular CLI project using VSTS Build and Release&lt;/a&gt;.&lt;br&gt;
This blog deploys a Ionic 3 / Angular 4 app to Azure.&lt;/p&gt;
&lt;h1&gt;The final workflow&lt;/h1&gt;
&lt;p&gt;After …&lt;/p&gt;</summary><content type="html">&lt;p&gt;This blog is part of a series.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="https://rasor.github.io/deploying-ionic-to-azure.html"&gt;Deploying Ionic to Azure&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rasor.github.io/deploying-express-rest-api-to-azure.html"&gt;Deploying Express REST API to Azure&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The blog is based on &lt;a href="https://twitter.com/sethreidnz"&gt;@sethreidnz&lt;/a&gt;'s 
article &lt;a href="https://sethreid.co.nz/deploying-angular-cli-project-using-vsts-build-release/"&gt;Deploying an Angular CLI project using VSTS Build and Release&lt;/a&gt;.&lt;br&gt;
This blog deploys a Ionic 3 / Angular 4 app to Azure.&lt;/p&gt;
&lt;h1&gt;The final workflow&lt;/h1&gt;
&lt;p&gt;After your Ionic project has been connected with Azure through VSTS then you have this workflow:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;From you editor: Add feature to you project and git push to origin&lt;/li&gt;
&lt;li&gt;From VSTS: Queue a new build&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;That's it. Done. You have deployed your Ionic project to Azure as a webapp.&lt;/p&gt;
&lt;p&gt;So why doesn't the pipeline just hook a webhook into your git origin and queue a build by itself (as you are used to from e.g. Heroku)?&lt;br&gt;
Well - if you use VSTS as Version Control, then it will work - I have used "Remote repo" option - apparently it is not ready yet.&lt;/p&gt;
&lt;p&gt;And why would you want to deploy a Ionic app as a webapp, when it is supposed to be installed on phones?&lt;br&gt;
Ionic is born as PWA - you might want to use those features.&lt;br&gt;
Also you just might want to demo the app as webapp before sending it to the app store.&lt;br&gt;
So with Ionic you have only one codebase to maintain - checkout &lt;a href="https://www.millioneyez.com"&gt;MillionEyez&lt;/a&gt; on the web and download their app. Same code.  &lt;/p&gt;
&lt;p&gt;BTW - In the coming Ionic 4 Ionic will have moved to WebComponents, which enables layout components to be loaded before the content components giving a much better experience.&lt;br&gt;
You will also be able to use Ionic from any other webframework - e.g. React or VueJs.&lt;/p&gt;
&lt;h1&gt;Here is how to do&lt;/h1&gt;
&lt;h2&gt;The Build server (VSTS)&lt;/h2&gt;
&lt;p&gt;Currently the build server (VSTS) is running&lt;br&gt;
&lt;code&gt;user-agent = "npm/3.10.10 node/v6.10.0 win32 x64"&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;So you should also build your app with &lt;code&gt;node v6&lt;/code&gt; or perhaps a bit lower. It is a bit like in .NET you would also want to build with a framework e.g. &lt;code&gt;.NET 4.5.2&lt;/code&gt; when the build server has &lt;code&gt;.NET 4.7&lt;/code&gt; - at least you don't get too big surprises when your code is build on the build server.&lt;/p&gt;
&lt;p&gt;It should be possible to specify another node version with &lt;code&gt;WEBSITE_NODE_DEFAULT_VERSION&lt;/code&gt;, though I haven't tried. Look for more info &lt;a href="http://blog.stevensanderson.com/2016/10/04/angular2-template-for-visual-studio/"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Your local repo&lt;/h2&gt;
&lt;p&gt;So before you start deploy you should verify that your code can build for prod on &lt;code&gt;node v6&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# If you got nvm switch to v6&lt;/span&gt;
nvm list
nvm use &lt;span class="m"&gt;6&lt;/span&gt;.11.4
&lt;span class="c1"&gt;# or just check that you have v6&lt;/span&gt;
node -v
&lt;span class="c1"&gt;# If you don&amp;#39;t have v6 you might get surprises when you build in VSTS, but purhaps you won&amp;#39;t.&lt;/span&gt;

&lt;span class="c1"&gt;# Build for prod&lt;/span&gt;
npm run build --prod --aot
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If no errors then we can continue.&lt;/p&gt;
&lt;h2&gt;Your remote origin&lt;/h2&gt;
&lt;p&gt;I have forked &lt;a href="https://github.com/dreamhouseapp/dreamhouse-mobile-ionic"&gt;dreamhouseapp/dreamhouse-mobile-ionic&lt;/a&gt; by &lt;a href="https://twitter.com/ccoenraets"&gt;Christophe Coenraets (@ccoenraets)&lt;/a&gt; to &lt;a href="https://github.com/rasor/dreamhouse-mobile-ionic"&gt;rasor/dreamhouse-mobile-ionic&lt;/a&gt;.&lt;br&gt;
Why? Because I need to give VSTS access to my GitHub account. I can't give it access to @ccoenraets's repo.&lt;br&gt;
You can fork &lt;a href="https://github.com/rasor/dreamhouse-mobile-ionic"&gt;mine&lt;/a&gt;, since it is modified a bit with web.config, making it runable in Azure.&lt;br&gt;
BTW - You can read about @ccoenraets's code here: &lt;a href="http://coenraets.org/blog/2017/04/dreamhouse-sample-application-ionic3-angular4/"&gt;DreamHouse: Sample Application with Ionic 3 and Angular 4&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;\src\web.config&lt;/code&gt; file you need (again - thanks to @sethreidnz) for Angular projects running in IIS looks like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;utf-8&amp;quot;?&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;configuration&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;system.webServer&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;rewrite&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;rules&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;rule&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;AngularJS Routes&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;stopProcessing=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;true&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;match&lt;/span&gt; &lt;span class="na"&gt;url=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;.*&amp;quot;&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;conditions&lt;/span&gt; &lt;span class="na"&gt;logicalGrouping=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;MatchAll&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;add&lt;/span&gt; &lt;span class="na"&gt;input=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;{REQUEST_FILENAME}&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;matchType=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;IsFile&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;negate=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;true&amp;quot;&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;add&lt;/span&gt; &lt;span class="na"&gt;input=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;{REQUEST_FILENAME}&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;matchType=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;IsDirectory&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;negate=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;true&amp;quot;&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;/conditions&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;action&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Rewrite&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;url=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;/&amp;quot;&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/rule&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;/rules&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/rewrite&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/system.webServer&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/configuration&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;It accepts Angular roouting.&lt;/p&gt;
&lt;p&gt;To be able to include the web.config in the build you could do like this:&lt;/p&gt;
&lt;p&gt;package.json&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;  &lt;span class="s2"&gt;&amp;quot;config&amp;quot;&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;ionic_copy&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;./config/copy.config.js&amp;quot;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="err"&gt;,&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The ionic-app-scripts will then pick up the file, when it comes to its copy step.&lt;/p&gt;
&lt;p&gt;\config\copy.config.json&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;// Copy extra files from /src/ to /www/&lt;/span&gt;
&lt;span class="c1"&gt;// https://forum.ionicframework.com/t/rc0-injecting-custom-scripts/65281/20&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;@ionic/app-scripts/config/copy.config.js&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;exports&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;copyIndexContent&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;src&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;{{SRC}}/web.config&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Your local repo&lt;/h2&gt;
&lt;p&gt;If you forked my repo do:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;npm install -g cordova@7.0.1 ionic@3.12.0 &lt;span class="c1"&gt;# just in case you have not installed Ionic&lt;/span&gt;
git clone https://github.com/yourgithubusername/dreamhouse-mobile-ionic
&lt;span class="nb"&gt;cd&lt;/span&gt; dreamhouse-mobile-ionic
npm install &lt;span class="c1"&gt;# download node_modules&lt;/span&gt;
ionic serve &lt;span class="c1"&gt;# does code run without build?&lt;/span&gt;
npm run build --prod --aot &lt;span class="c1"&gt;# can you build?&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Build to drop folder in VSTS&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;When you have created a VSTS account via &lt;a href="https://www.visualstudio.com/"&gt;Visual Studio VSTS&lt;/a&gt; browse to &lt;a href="https://yourvstsusername.visualstudio.com/_projects"&gt;https://yourvstsusername.visualstudio.com/_projects&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Create a project for dreamhouse-mobile-ionic - Press &lt;code&gt;New Project&lt;/code&gt; and enter name &lt;code&gt;dreamhouse-mobile-ionic&lt;/code&gt;.&lt;br&gt;
&lt;img alt="New VSTS project" src="img/2017/2017-10-09-VSTS1.PNG" title="New VSTS project"&gt;&lt;/li&gt;
&lt;li&gt;Since your code is in GitHub, you don't need to have it in VSTS, too. So no need to look in tab &lt;code&gt;Code&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Instead goto tab &lt;code&gt;Build and Release&lt;/code&gt; and press &lt;code&gt;+ New&lt;/code&gt; to add a new Build Definition - more or less as you might be used to from TFS.&lt;br&gt;
&lt;img alt="New Build definition" src="img/2017/2017-10-09-VSTS2.PNG" title="New Build definition"&gt;&lt;/li&gt;
&lt;li&gt;Choose an Empty template - meaning there are no build steps to start out with&lt;br&gt;
&lt;img alt="Select Empty template" src="img/2017/2017-10-09-VSTS3.PNG" title="Select Empty template"&gt;&lt;/li&gt;
&lt;li&gt;Now you need to connect to GitHub. Select &lt;code&gt;Get sources&lt;/code&gt; in left pane and select &lt;code&gt;Remote repo&lt;/code&gt; in right pane. You need to authenticate towards GitHub - go through that process. In the image below I have already connected&lt;br&gt;
Name: &lt;code&gt;yourgithubusername_dreamhouse-mobile-ionic&lt;/code&gt;
Repo: &lt;code&gt;https://github.com/yourgithubusername/dreamhouse-mobile-ionic&lt;/code&gt;
Set Clean to &lt;code&gt;true&lt;/code&gt; - Set clean options to &lt;code&gt;Sources&lt;/code&gt;&lt;br&gt;
Notice - this is like when you did git clone locally
&lt;img alt="Connect to GitHub" src="img/2017/2017-10-09-VSTS4.PNG" title="Connect to GitHub"&gt;&lt;/li&gt;
&lt;li&gt;Just above &lt;code&gt;Get Sources&lt;/code&gt; there is &lt;code&gt;Process&lt;/code&gt; - select it.&lt;br&gt;
Name: dreamhouse-mobile-ionic-Build&lt;br&gt;
Agent Queue: Hosted VS2017&lt;/li&gt;
&lt;li&gt;So what did you do after git clone? &lt;code&gt;npm install&lt;/code&gt;. In Phase 1 press &lt;code&gt;+&lt;/code&gt; and select npm task.
&lt;img alt="Select npm task" src="img/2017/2017-10-09-VSTS5.PNG" title="Select npm task"&gt;&lt;/li&gt;
&lt;li&gt;Configure npm task by pressing the dropdown list and select &lt;code&gt;install&lt;/code&gt;&lt;br&gt;
&lt;img alt="Configure npm install" src="img/2017/2017-10-09-VSTS6.PNG" title="Configure npm install"&gt;&lt;/li&gt;
&lt;li&gt;After install you did &lt;code&gt;Ionic serve&lt;/code&gt;. But that was a development task - not a build task&lt;br&gt;
Next build task is &lt;code&gt;npm run build --prod --aot&lt;/code&gt;. Go on - add yet a npm task as you did before&lt;/li&gt;
&lt;li&gt;Configure npm task by pressing the dropdown list and select &lt;code&gt;custom&lt;/code&gt;, since you can't select run&lt;br&gt;
Add &lt;code&gt;run build --prod --aot&lt;/code&gt; as Command and arguments&lt;br&gt;
You probably recognize &lt;code&gt;--aot&lt;/code&gt; - &lt;a href="https://angular.io/guide/aot-compiler"&gt;Ahead-of-Time&lt;/a&gt; from Angular 4. It gives faster load time, so it is quite important&lt;br&gt;
&lt;img alt="Configure npm run" src="img/2017/2017-10-09-VSTS7.PNG" title="Configure npm run"&gt;&lt;/li&gt;
&lt;li&gt;So we ran out of steps locally, but on the build server we still need to package the build output and send it to Azure&lt;br&gt;
Next task is a zip-task. Press &lt;code&gt;+&lt;/code&gt; and select &lt;code&gt;Archive Files&lt;/code&gt;&lt;br&gt;
&lt;img alt="Select zip task" src="img/2017/2017-10-09-VSTS8.PNG" title="Select zip task"&gt;&lt;/li&gt;
&lt;li&gt;Root folder is the build code you want to deploy. It is located in the &lt;code&gt;www&lt;/code&gt; folder - just as when you work locally&lt;br&gt;
Unselect "Prefix root folder ..."&lt;br&gt;
The name of the zipped package should be &lt;code&gt;$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip&lt;/code&gt;&lt;br&gt;
&lt;img alt="Configure zip" src="img/2017/2017-10-09-VSTS9.PNG" title="Configure zip"&gt;&lt;/li&gt;
&lt;li&gt;Final build step to do is to put the package in a drop folder&lt;br&gt;
Next task is a publish task. Press &lt;code&gt;+&lt;/code&gt; and select &lt;code&gt;Publish Build Artifacts&lt;/code&gt;&lt;br&gt;
Notice - you can create PowerShell, Shell Script and Batch Script tasks. So if you npm installed a nice utility, you could then do anything with it in a script which could be in your code e.g. `.\scripts\runkarmaandprotractortests.cmd
&lt;img alt="Select publish task" src="img/2017/2017-10-09-VSTS10.PNG" title="Select publish task"&gt;&lt;/li&gt;
&lt;li&gt;Path to publish is the zip file you created in last step&lt;br&gt;
Artifact Name is the name of the drop folder. It must be called &lt;code&gt;drop&lt;/code&gt;&lt;br&gt;
And Location must be &lt;code&gt;TFS&lt;/code&gt; - that used to be called Type: &lt;code&gt;Server&lt;/code&gt; (opposed to File Share)&lt;br&gt;
&lt;img alt="Configure publish" src="img/2017/2017-10-09-VSTS11.PNG" title="Configure publish"&gt;&lt;/li&gt;
&lt;li&gt;Press &lt;code&gt;Save &amp;amp; queue&lt;/code&gt;. In top of the screen you'll see &lt;code&gt;Build #&amp;lt;some-number&amp;gt; has been queued.&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Click on &lt;code&gt;#&amp;lt;some-number&amp;gt;&lt;/code&gt;. Now you can see the progress of the build.&lt;br&gt;
When the build has finished you'll see &lt;code&gt;Build Succeeded&lt;/code&gt; and above that &lt;code&gt;dreamhouse-mobile-ionic-Build / Build &amp;lt;some-number&amp;gt; / Phase 1&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;Click on &lt;code&gt;Build &amp;lt;some-number&amp;gt;&lt;/code&gt;. Now you get 5 tabs for that build: &lt;code&gt;Summary - Timeline - Artifacts - Code coverage* - Tests&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;Click on &lt;code&gt;Artifacts&lt;/code&gt;. Now you see the dropfolder. Check it out and see if it contains what you expected.  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Have you noticed that these Build Tasks correspond to the features in &lt;a href="https://www.jetbrains.com/teamcity/"&gt;TeamCity&lt;/a&gt;? &lt;/p&gt;
&lt;p&gt;Next up is to deploy the package to Azure.&lt;/p&gt;
&lt;h2&gt;Setup WebApp in Azure&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;When you have created a free Azure account via &lt;a href="https://azure.microsoft.com/en-in/free/"&gt;Microsoft Azure&lt;/a&gt; browse to &lt;a href="https://portal.azure.com/"&gt;Azure Portal&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;The first thing you need is a place for all your stuff at Azure to live. That is called a &lt;code&gt;Resource Group&lt;/code&gt;&lt;br&gt;
Click &lt;code&gt;Resource Groups&lt;/code&gt; then &lt;code&gt;+ Add&lt;/code&gt;&lt;br&gt;
&lt;img alt="Add Resource Group" src="img/2017/2017-10-09-Azure1.PNG" title="Add Resource Group"&gt;&lt;/li&gt;
&lt;li&gt;Name - I have called mine &lt;code&gt;ResGroupNorthEurope&lt;/code&gt;&lt;br&gt;
Location - I live in area &lt;code&gt;North Europe&lt;/code&gt;&lt;br&gt;
&lt;img alt="Configure Resource Group" src="img/2017/2017-10-09-Azure2.PNG" title="Configure Resource Group"&gt;&lt;/li&gt;
&lt;li&gt;So what do you want there? A webapp. You find that under &lt;code&gt;App Services&lt;/code&gt;. Click &lt;code&gt;+ Add&lt;/code&gt; then &lt;code&gt;Filter&lt;/code&gt;&lt;br&gt;
Then you see a variaty of categories of webapps
&lt;img alt="Add WebApp" src="img/2017/2017-10-09-Azure3.PNG" title="Add WebApp"&gt;&lt;/li&gt;
&lt;li&gt;Select &lt;code&gt;Web App&lt;/code&gt; 
Since I have already taken subdomain dreamhouse-mobile-ionic you have to choose another one - e.g.  &lt;code&gt;yourvstsusername-dreamhouse-mobile-ionic&lt;/code&gt;&lt;br&gt;
Resourse Group: Use the one you created before: &lt;code&gt;`Use Existing&lt;/code&gt;&lt;br&gt;
App Service Plan is the Dyno in Heroku or EC2 in AWS - the size of your PaaS. I have chosen the smallest: S1&lt;br&gt;
Tip: You can reuse the Resource Group and the App Service Plan for several resources e.g. webapps.
&lt;img alt="Configure WebApp" src="img/2017/2017-10-09-Azure4.PNG" title="Configure WebApp"&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You're done in Azure. Next up is to release to Azure from VSTS.&lt;/p&gt;
&lt;h2&gt;Release to Azure from VSTS&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Go back to &lt;a href="https://yourvstsusername.visualstudio.com/dreamhouse-mobile-ionic/_build"&gt;https://yourvstsusername.visualstudio.com/dreamhouse-mobile-ionic/_build&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;You can deploy to many environments and services. We just want to deploy to our App Service.&lt;br&gt;
First step is to select that target environment in a Release&lt;br&gt;
Click tab &lt;code&gt;Releases&lt;/code&gt; then &lt;code&gt;+&lt;/code&gt; - &lt;code&gt;Create Release Definition&lt;/code&gt; - Select &lt;code&gt;Azure App Service Deployment&lt;/code&gt; and click Apply &lt;br&gt;
&lt;img alt="Add Release Definition" src="img/2017/2017-10-09-VSTSRelease1.PNG" title="Add Release Definition"&gt;&lt;/li&gt;
&lt;li&gt;Notice the ´!´ - something needs attention - click either of them&lt;br&gt;
&lt;img alt="Tasks needs attention" src="img/2017/2017-10-09-VSTSRelease2.PNG" title="Tasks needs attention"&gt;&lt;/li&gt;
&lt;li&gt;Hey - that looks familiar - a list of steps in a task list - just as under tab &lt;code&gt;Build&lt;/code&gt;&lt;br&gt;
Yes, but heading is &lt;code&gt;Environment 1&lt;/code&gt; - not &lt;code&gt;Phase 1&lt;/code&gt;. And for the environmet you have to connect to Azure.
Click on &lt;code&gt;Manage&lt;/code&gt; subscribtion and go through an authentication process&lt;br&gt;
When connected you can click the dropdown list to select your website&lt;br&gt;
&lt;img alt="Connect to Azure" src="img/2017/2017-10-09-VSTSRelease3.PNG" title="Connect to Azure"&gt;&lt;/li&gt;
&lt;li&gt;Head back to tab &lt;code&gt;Pipeline&lt;/code&gt; - we need to fetch a source to deploy&lt;br&gt;
Select &lt;code&gt;Add Artifact&lt;/code&gt; and select source type: &lt;code&gt;Build&lt;/code&gt;, so we can fetch the zip file from drop.&lt;br&gt;
Notice: Source type can also be: &lt;code&gt;Git, GitHub, Jenkins and Team Foundation Version Control&lt;/code&gt;.&lt;br&gt;
Build Definition: Select the only one from the list.&lt;br&gt;
Accept default values and press Add.&lt;br&gt;
&lt;img alt="Add Artifact" src="img/2017/2017-10-09-VSTSRelease4.PNG" title="Add Artifact"&gt;&lt;/li&gt;
&lt;li&gt;Press the lightning icon on the Artifact. Notice the trigger is whenever a new drop has been made.&lt;br&gt;
&lt;img alt="Release Trigger" src="img/2017/2017-10-09-VSTSRelease5.PNG" title="Release Trigger"&gt;&lt;/li&gt;
&lt;li&gt;Now that we have a source we can head back to &lt;code&gt;Tasks&lt;/code&gt;, select &lt;code&gt;Deploy Azure App Service&lt;/code&gt; and enter the missing zipfile: &lt;code&gt;$(System.DefaultWorkingDirectory)\**\*.zip&lt;/code&gt;. You can browse to it by pressing &lt;code&gt;...&lt;/code&gt;&lt;br&gt;
&lt;img alt="Pick zip file" src="img/2017/2017-10-09-VSTSRelease6.PNG" title="Pick zip file"&gt;&lt;/li&gt;
&lt;li&gt;Before we save the Release Definition head to &lt;code&gt;Pipeline&lt;/code&gt; - and select the Lightning in the Environment&lt;br&gt;
Notice you have a possibility to select persons to approve deployment. This can be tester that approves one environment before a build is rolled out for the next environment.&lt;br&gt;
&lt;img alt="Approvers" src="img/2017/2017-10-09-VSTSRelease7.PNG" title="Approvers"&gt;
We don't want approvers - so go on and save as &lt;code&gt;dreamhouse-Release&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Have you noticed that these Release workflow correspond to the features in &lt;a href="https://octopus.com/"&gt;Octopus Deploy&lt;/a&gt;? &lt;/p&gt;
&lt;h2&gt;Trig a build and a release to Azure&lt;/h2&gt;
&lt;p&gt;Now we are ready for the big show - deploy to Azure&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Head back to &lt;code&gt;Builds&lt;/code&gt; - tab &lt;code&gt;All Definitions&lt;/code&gt; - click on the only one &lt;code&gt;dreamhouse-mobile-ionic-Build&lt;/code&gt;&lt;br&gt;
&lt;img alt="Prepare to build" src="img/2017/2017-10-09-VSTSQueue1.PNG" title="Prepare to build"&gt;&lt;/li&gt;
&lt;li&gt;Click &lt;code&gt;Queue New Build...&lt;/code&gt;&lt;br&gt;
&lt;img alt="Queue build" src="img/2017/2017-10-09-VSTSQueue2.PNG" title="Queue build"&gt;&lt;/li&gt;
&lt;li&gt;Click &lt;code&gt;Queue&lt;/code&gt;
&lt;img alt="npm run build" src="img/2017/2017-10-09-VSTSQueue3.PNG" title="npm run build"&gt;&lt;/li&gt;
&lt;li&gt;If the Build succeded head to &lt;code&gt;Releases&lt;/code&gt; tab and verify that the build triggered a release&lt;br&gt;
&lt;img alt="Triggered release" src="img/2017/2017-10-09-VSTSQueue4.PNG" title="Triggered release"&gt;&lt;/li&gt;
&lt;li&gt;If the release succeeded, too head to &lt;code&gt;Azure App Services&lt;/code&gt; in &lt;a href="https://portal.azure.com"&gt;Azure&lt;/a&gt;&lt;br&gt;
Select your service and scroll down to &lt;code&gt;Continous Delivery&lt;/code&gt;&lt;br&gt;
You should see the Release has been Deployed Successfully&lt;br&gt;
&lt;img alt="Succeeded release" src="img/2017/2017-10-09-VSTSQueue5.PNG" title="Succeeded release"&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If that is true then you site should be live on&lt;br&gt;
&lt;a href="http://yourvstsusername-dreamhouse-mobile-ionic.azurewebsites.net"&gt;http://yourvstsusername-dreamhouse-mobile-ionic.azurewebsites.net&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If you are just reading along you can also find my site &lt;a href="http://dreamhouse-mobile-ionic.azurewebsites.net/"&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h1&gt;Alternative deployments tp Azure&lt;/h1&gt;
&lt;p&gt;There are also alternative options for hosting SPA's in Azure.  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://code.visualstudio.com/tutorials/functions-extension/getting-started"&gt;Azure Functions&lt;/a&gt;. I assume this is the best pick for SPA's or API's with low load.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://code.visualstudio.com/tutorials/static-website/getting-started"&gt;Azure Storage&lt;/a&gt;.&lt;br&gt;
I don't think Azure Storage can handle SSR. Instead it is a great place for static websites like this blog.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://code.visualstudio.com/tutorials/docker-extension/getting-started"&gt;Docker images&lt;/a&gt; - good for porting entire environments from dev to prod in Azure or any other cloud.&lt;/li&gt;
&lt;li&gt;And finally a tutorial like this blog deploying to &lt;a href="https://code.visualstudio.com/tutorials/app-service-extension/getting-started"&gt;App Services&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;Links&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://rasor.wordpress.com/2017/06/29/deploying-ionic1-as-a-webapp-to-heroku/"&gt;Deploying Ionic1 to Heroku&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.microsoft.com/en-us/vsts/build-release/apps/cd/azure/aspnet-core-to-azure-webapp?tabs=vsts"&gt;Deploy your .NET core app to an Azure web app&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://my.visualstudio.com"&gt;MSDN&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://yarnpkg.com/en/docs/install-ci#travis-tab"&gt;Yarn with Travis CI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.microsoft.com/en-us/azure/app-service/app-service-authentication-overview"&gt;Authentication and authorization in Azure App Service&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.microsoft.com/en-us/azure/app-service-mobile/app-service-mobile-cordova-get-started-users"&gt;Add authentication on Cordova with Mobile Apps&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.microsoft.com/en-us/aspnet/core/client-side/spa-services"&gt;SSR with .NET Core&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.microsoft.com/en-us/azure/app-service-mobile/app-service-mobile-dotnet-backend-how-to-use-server-sdk"&gt;Azure Mobile Apps - MBaaS - C#&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.microsoft.com/en-us/azure/app-service-mobile/app-service-mobile-node-backend-how-to-use-server-sdk"&gt;Azure Mobile Apps - MBaaS - NodeJs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.microsoft.com/en-us/cli/azure/overview?view=azure-cli-latest"&gt;Azure CLI 2.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.microsoft.com/en-us/azure/app-service/app-service-cli-samples"&gt;Azure CLI Samples - App Service&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The End&lt;/p&gt;</content><category term="#npm"></category><category term="#git"></category><category term="#ionic"></category><category term="#ngx"></category><category term="#azure"></category><category term="#pwa"></category></entry><entry><title>Using NVM for Windows and Yarn</title><link href="https://rasor.github.io/using-nvm-for-windows-and-yarn.html" rel="alternate"></link><published>2017-10-08T11:00:00+02:00</published><updated>2017-10-08T15:00:00+02:00</updated><author><name>rasor</name></author><id>tag:rasor.github.io,2017-10-08:/using-nvm-for-windows-and-yarn.html</id><summary type="html">&lt;p&gt;Microsoft created Taco (Tools for Apache Cordova) - a set of Node.js tools with specific versions. It was to be used from within Visual Studio, so they knew what was global in their Cordova apps.
I blogged about it &lt;a href="https://rasor.wordpress.com/2017/03/13/ionic-in-visual-studio-2017/" target="_blank"&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;With Nvm For Windows you can stay in the shell …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Microsoft created Taco (Tools for Apache Cordova) - a set of Node.js tools with specific versions. It was to be used from within Visual Studio, so they knew what was global in their Cordova apps.
I blogged about it &lt;a href="https://rasor.wordpress.com/2017/03/13/ionic-in-visual-studio-2017/" target="_blank"&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;With Nvm For Windows you can stay in the shell and select yourself what you want to include in your set.&lt;/p&gt;
&lt;p&gt;I need it to be able to switch between Node v6 and Node v8.
In my usecase there is v6 installed on a host (Azure), so I also need v6 locally for debugging.
And when not debugging for prod I can use newest v8.&lt;/p&gt;
&lt;h2&gt;Using &lt;a href="https://github.com/coreybutler/nvm-windows" target="_blank"&gt;nvm4windows&lt;/a&gt;&lt;/h2&gt;
&lt;h3&gt;Before you install nvm4windows you need to&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;uninstall node&lt;/li&gt;
&lt;li&gt;Delete folder C:\Program Files\nodejs&lt;/li&gt;
&lt;li&gt;Delete folder C:\Users\username\AppData\Roaming\npm&lt;/li&gt;
&lt;li&gt;Delete folder C:\Users\username\AppData\Roaming\npm-cache&lt;/li&gt;
&lt;li&gt;Remove envir var %NODE_ENV%&lt;/li&gt;
&lt;li&gt;Remove part of %path% C:\Users\username\AppData\Roaming\npm&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Download, install and use &lt;a href="https://github.com/coreybutler/nvm-windows/releases" target="_blank"&gt;nvm4windows&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;nvm list&lt;/code&gt; # shows nothing installed&lt;/li&gt;
&lt;li&gt;goto &lt;a href="https://nodejs.org/en/download/" target="_blank"&gt;Node downloads&lt;/a&gt; and &lt;ul&gt;
&lt;li&gt;checkout LTS version - currently 6.11.4 (includes npm 3.10.10)&lt;/li&gt;
&lt;li&gt;checkout current version - currently 8.6.0 (includes npm 5.3.0)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Install the two versions:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;nvm install &lt;span class="m"&gt;6&lt;/span&gt;.11.4 &lt;span class="c1"&gt;# Installs into \nvm\v6.11.4&lt;/span&gt;
nvm install &lt;span class="m"&gt;8&lt;/span&gt;.6.0 &lt;span class="c1"&gt;# Installs into \nvm\v8.6.0&lt;/span&gt;
nvm list

&lt;span class="c1"&gt;#    8.6.0&lt;/span&gt;
&lt;span class="c1"&gt;#    6.11.4&lt;/span&gt;

nvm use &lt;span class="m"&gt;8&lt;/span&gt;.6.0 &lt;span class="c1"&gt;# Creates a shortcut \nodejs\ pointing to the above \vx.x.x\ folder&lt;/span&gt;
&lt;span class="c1"&gt;# Now using node v8.6.0 (64-bit)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The shortcut \nodejs\ is also saved as %NVM_SYMLINK% and saved to %path%&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;nvm list

&lt;span class="c1"&gt;#  * 8.6.0 (Currently using 64-bit executable)&lt;/span&gt;
&lt;span class="c1"&gt;#    6.11.4&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You need to &lt;code&gt;npm install -g&lt;/code&gt; (globally install js libs into each of the nodejs versions you are using) e.g. &lt;code&gt;npm install -g cordova&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Note&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Cli tools (e.g. cordova) are installed in &lt;code&gt;%ProgramFiles%\nodejs&lt;/code&gt;, which might not be the path you chose for node.&lt;br&gt;
If not you need to add &lt;code&gt;%ProgramFiles%\nodejs&lt;/code&gt; to &lt;code&gt;%path%&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;node_modules are scattered around the disk(s)&lt;ul&gt;
&lt;li&gt;&lt;code&gt;C:\Users\username\AppData\Roaming\npm-cache&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Nvm path &lt;code&gt;%NVM_HOME%\vx.x.x\node_modules\npm\node_modules&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Nvm Nodejs paths &lt;code&gt;%NVM_SYMLINK%\node_modules&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Normal Nodejs paths &lt;code&gt;%ProgramFiles%\nodejs\node_modules&lt;/code&gt; - CLI's installed with -g&lt;/li&gt;
&lt;li&gt;and locally in project subfolder &lt;code&gt;\node_modules&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Well it seems like installation of nvm must be done to the default paths, since in the setup on my PC -g installs still ends up in a common place. I'll have to test that on another occation.&lt;/p&gt;
&lt;p&gt;You might also need to set environment variable (for Express?):
&lt;code&gt;NODE_ENV=%NVM_SYMLINK%&lt;/code&gt; and &lt;code&gt;refreshenv&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;Using Yarn&lt;/h2&gt;
&lt;p&gt;The npm v5 coming with node v8 has a package.lock file - yes idea taken from Yarn. Meaning we don't need Yarn anymore - unless you need other features from Yarn.&lt;br&gt;
For npm v3 (node v6) we often need yarn.lock.&lt;/p&gt;
&lt;p&gt;We need the lock file to keep track of all exact versions of dependencies in a project.&lt;/p&gt;
&lt;h3&gt;Install Yarn&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://yarnpkg.com/en/docs/install" target="_blank"&gt;Download Yarn&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Install &lt;a href="https://chocolatey.org/install" target="_blank"&gt;Chokolatey&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Install Yarn &lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;nvm use &lt;span class="m"&gt;6&lt;/span&gt;.11.4 &lt;span class="c1"&gt;# yarn checks for npm&lt;/span&gt;
choco install yarn
yarn -v
&lt;span class="c1"&gt;#1.1.0&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Using Yarn&lt;/h3&gt;
&lt;h4&gt;When starting from empty project&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;yarn init &lt;span class="c1"&gt;# create the yarn.lock file and a package.json&lt;/span&gt;
yarn add &lt;span class="o"&gt;[&lt;/span&gt;package&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="c1"&gt;# same as npm -install -save [package]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;When starting from a working npm project&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;yarn import &lt;span class="c1"&gt;# create the yarn.lock file from node_modules folder&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If it fails with &lt;code&gt;error An unexpected error occurred: "should have a resolved reference"&lt;/code&gt;&lt;br&gt;
then it might work to just issue &lt;code&gt;yarn&lt;/code&gt;.&lt;/p&gt;
&lt;h4&gt;When starting from a cloned npm project having yarn.lock&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git clone &lt;span class="s2"&gt;&amp;quot;https://github.com/.....&amp;quot;&lt;/span&gt;
yarn install &lt;span class="c1"&gt;# same as npm install, but using yarn.lock: download modules&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;hr&gt;
&lt;h2&gt;Links&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://yarnpkg.com/en/docs/usage" target="_blank"&gt;Yarn usage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://yarnpkg.com/en/docs/migrating-from-npm" target="_blank"&gt;Npm vs. Yarn&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://yarnpkg.com/en/docs/cli/" target="_blank"&gt;Yarn commands&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The End&lt;/p&gt;</content><category term="#nvm"></category><category term="#nodejs"></category><category term="#npm"></category><category term="#yarn"></category></entry><entry><title>Using SSH keys - Connect to Ionic Pro</title><link href="https://rasor.github.io/using-ssh-keys-connect-to-ionic-pro.html" rel="alternate"></link><published>2017-10-03T20:30:00+02:00</published><updated>2017-10-03T20:30:00+02:00</updated><author><name>rasor</name></author><id>tag:rasor.github.io,2017-10-03:/using-ssh-keys-connect-to-ionic-pro.html</id><summary type="html">&lt;p&gt;HowTo connect to Ionic Pro, when &lt;code&gt;ionic link&lt;/code&gt; fails?&lt;br&gt;
&lt;em&gt;&lt;a href="https://ionicframework.com/docs/pro/" target="_blank"&gt;Ionic Pro&lt;/a&gt; is a new site taking over the features from Ionic Cloud - a hosted mobile build, test and deploy service&lt;/em&gt;&lt;/p&gt;
&lt;h1&gt;Intro&lt;/h1&gt;
&lt;h3&gt;The problem&lt;/h3&gt;
&lt;p&gt;I wanted to connect to Ionic Pro from Windows.&lt;br&gt;
But the attempt failed.&lt;/p&gt;
&lt;p&gt;It kept coming with …&lt;/p&gt;</summary><content type="html">&lt;p&gt;HowTo connect to Ionic Pro, when &lt;code&gt;ionic link&lt;/code&gt; fails?&lt;br&gt;
&lt;em&gt;&lt;a href="https://ionicframework.com/docs/pro/" target="_blank"&gt;Ionic Pro&lt;/a&gt; is a new site taking over the features from Ionic Cloud - a hosted mobile build, test and deploy service&lt;/em&gt;&lt;/p&gt;
&lt;h1&gt;Intro&lt;/h1&gt;
&lt;h3&gt;The problem&lt;/h3&gt;
&lt;p&gt;I wanted to connect to Ionic Pro from Windows.&lt;br&gt;
But the attempt failed.&lt;/p&gt;
&lt;p&gt;It kept coming with one error after the other. The latest I had difficulty to pass was:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;gt;ionic link
× Looking up your apps - failed!
Request: GET https://api.ionicjs.com/apps?page&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nv"&gt;page_size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;25&lt;/span&gt;
Response: &lt;span class="m"&gt;401&lt;/span&gt;
Body:
&lt;span class="o"&gt;{&lt;/span&gt; type: &lt;span class="s1"&gt;&amp;#39;Unauthorized&amp;#39;&lt;/span&gt;, link: null, message: &lt;span class="s1"&gt;&amp;#39;Invalid Token&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This blog has a &lt;strong&gt;workaround&lt;/strong&gt; for &lt;code&gt;ionic link&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;ionic link&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://ionicframework.com/docs/cli/link/" target="_blank"&gt;&lt;code&gt;ionic link&lt;/code&gt;&lt;/a&gt; CLI command connects your local git repo with a remote repo at Ionic Pro.
That remote repo was created when you manually created an app at &lt;a href="https://dashboard.ionicjs.com/apps" target="_blank"&gt;Ionic Pro&lt;/a&gt; site.&lt;/p&gt;
&lt;p&gt;It does that by doing probably all these tasks&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;creating a set of SSH keys, &lt;/li&gt;
&lt;li&gt;uploading the public key to Ionic Pro and&lt;/li&gt;
&lt;li&gt;adding the app id to project-root\ionic.config.json&lt;/li&gt;
&lt;li&gt;adding remote ionic repo to your local project&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;So when it won't we can do it ourselves.&lt;/p&gt;
&lt;h1&gt;The workaround&lt;/h1&gt;
&lt;h3&gt;Prerequisites&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Create a ionic app in &lt;a href="https://dashboard.ionicjs.com" target="_blank"&gt;Ionic Pro&lt;/a&gt;&lt;br&gt;
After creation the id of the app will be the last part of the url - e.g. as in https://apps.ionic.io/app/09faf85a&lt;/li&gt;
&lt;li&gt;Create a &lt;a href="http://ionicframework.com/getting-started/" target="_blank"&gt;ionic starter app&lt;/a&gt; on your PC&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;1. Create a set of SSH keys&lt;/h3&gt;
&lt;p&gt;You need &lt;code&gt;ssh-keygen.exe&lt;/code&gt; to generate a set of public/private SSH keys.
&lt;code&gt;ssh-keygen.exe&lt;/code&gt; is installed as part of &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Git (default installed into &lt;code&gt;C:\Program Files\Git\usr\bin&lt;/code&gt;) or&lt;/li&gt;
&lt;li&gt;OpenSSH (default installed into &lt;code&gt;C:\Program Files\OpenSSH-Win64&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;On my PC I also had HerokuToolkit installed with a path in &lt;code&gt;ssh-keygen.bat&lt;/code&gt; to &lt;code&gt;ssh-keygen.exe&lt;/code&gt;.&lt;br&gt;
But this path was wrong. It seemed to be part of some problems. Rename that file, so it is not called instead of one of the real .exe files.&lt;/p&gt;
&lt;p&gt;From Git bash:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# https://help.github.com/articles/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent/&lt;/span&gt;

&lt;span class="c1"&gt;# Generate key-pair into C:\Users\your_userid\.ssh\&lt;/span&gt;
c:
&lt;span class="nb"&gt;cd&lt;/span&gt; C:/Users/your_userid/.ssh
&lt;span class="c1"&gt;# http://docs.ionic.io/services/ssh-keys/&lt;/span&gt;
ssh-keygen.exe -t rsa -b &lt;span class="m"&gt;4096&lt;/span&gt; -C &lt;span class="s2"&gt;&amp;quot;your_email@example.com&amp;quot;&lt;/span&gt;

&lt;span class="c1"&gt;# Check if ssh agent is running&lt;/span&gt;
&lt;span class="nb"&gt;eval&lt;/span&gt; &lt;span class="k"&gt;$(&lt;/span&gt;ssh-agent -s&lt;span class="k"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# Agent pid 12345 - yes&lt;/span&gt;

&lt;span class="c1"&gt;# Add private key to agent - &lt;/span&gt;
ssh-add C:/Users/your_userid/.ssh/id_rsa
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;2. Upload the public key to Ionic Pro&lt;/h3&gt;
&lt;p&gt;Paste the content of file &lt;code&gt;id_rsa.pub&lt;/code&gt; to a new key in &lt;a href="https://dashboard.ionicjs.com/settings/ssh-keys" target="_blank"&gt;Ionic Pro's SSH store&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;3. Add the app id to your Ionic config in your local repo&lt;/h3&gt;
&lt;p&gt;Edit &lt;code&gt;project-root\ionic.config.json&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p p-Indicator"&gt;{&lt;/span&gt;
  &lt;span class="s"&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Your&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Magic&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;App&amp;quot;&lt;/span&gt;&lt;span class="p p-Indicator"&gt;,&lt;/span&gt;
  &lt;span class="s"&gt;&amp;quot;app_id&amp;quot;&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;09faf85a&amp;quot;&lt;/span&gt;&lt;span class="p p-Indicator"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;# replace with your id&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;4. Add remote ionic repo to your local project&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# https://dashboard.ionicjs.com/app/09faf85a/settings/git&lt;/span&gt;
&lt;span class="c1"&gt;# Add Ionic Pro as remote repo&lt;/span&gt;
git remote add ionic ssh://git@git.ionicjs.com:your_ionic_userid/your_ionic_appname.git
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;After the workaround&lt;/h1&gt;
&lt;h3&gt;5. Upload your app to Ionic Pro&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Upload to Ionic Pro&lt;/span&gt;
git push ionic master
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;6. Make Github your default remote repo&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Add github as remote repo&lt;/span&gt;
git remote add origin https://github.com/your_git_userid/your_git_appname.git
&lt;span class="c1"&gt;# Upload to github and set it default (for pull)&lt;/span&gt;
git push --set-upstream origin master
&lt;span class="c1"&gt;# Check your remotes&lt;/span&gt;
git remote -v
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;7. Continue to use Ionic Pro&lt;/h3&gt;
&lt;p&gt;On the url for your app - e.g. https://dashboard.ionicjs.com/app/09faf85a/code/builds/list you can continue to deploy, preview and more.&lt;/p&gt;
&lt;p&gt;You might also need to modify &lt;code&gt;src/app/app.module.ts&lt;/code&gt;. &lt;a href="http://docs.ionic.io/setup.html#configuration" target="_blank"&gt;Define a CloudSettings object&lt;/a&gt;. &lt;/p&gt;
&lt;hr&gt;
&lt;h1&gt;Tips&lt;/h1&gt;
&lt;h3&gt;Download an app as a starter app&lt;/h3&gt;
&lt;p&gt;If you have access to a Ionic Pro app, you can &lt;code&gt;git clone&lt;/code&gt; it with&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ionic start --pro-id 09faf85a
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;... if I am asuming correct.&lt;/p&gt;
&lt;h3&gt;If you want OpenSSH on Windows&lt;/h3&gt;
&lt;p&gt;.. then here is how you &lt;a href="https://github.com/PowerShell/Win32-OpenSSH/wiki/Win32-OpenSSH-Automated-Install-and-Upgrade-using-Chocolatey" target="_blank"&gt;install OpenSSH&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# do this from an admin prompt&lt;/span&gt;
choco install openssh &lt;span class="c1"&gt;# takes a while&lt;/span&gt;
&lt;span class="c1"&gt;# reload environment variables&lt;/span&gt;
refresh env
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;Links&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://ionicframework.com/docs/pro/basics/getting-started/" target="_blank"&gt;http://ionicframework.com/docs/pro/basics/getting-started/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/PowerShell/Win32-OpenSSH/wiki/ssh.exe-examples" target="_blank"&gt;https://github.com/PowerShell/Win32-OpenSSH/wiki/ssh.exe-examples&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The End&lt;/p&gt;</content><category term="#git"></category><category term="#ssh"></category><category term="#ionic"></category></entry><entry><title>Use Google Drive as your Desktop</title><link href="https://rasor.github.io/use-google-drive-as-your-desktop.html" rel="alternate"></link><published>2017-09-30T12:00:00+02:00</published><updated>2017-09-30T12:00:00+02:00</updated><author><name>rasor</name></author><id>tag:rasor.github.io,2017-09-30:/use-google-drive-as-your-desktop.html</id><summary type="html">&lt;p&gt;If you have had the thought of using Google Drive as the place where you store your links - just as when you have them on your desktop, then you will learn that you can't navigate to the URL by double-clicking on them.&lt;/p&gt;
&lt;p&gt;There are several plugins for Chrome.
The first …&lt;/p&gt;</summary><content type="html">&lt;p&gt;If you have had the thought of using Google Drive as the place where you store your links - just as when you have them on your desktop, then you will learn that you can't navigate to the URL by double-clicking on them.&lt;/p&gt;
&lt;p&gt;There are several plugins for Chrome.
The first one I found useful was &lt;a href="https://chrome.google.com/webstore/detail/linkto/goapcakmlfahhdehdkbejkcpoddbdikm" target="_blank"&gt;LinkTo&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;With LinkTo installed you can both right-click or double-click in Google Drive on a link to navigate to that URL.&lt;/p&gt;
&lt;p&gt;&lt;img alt="picture alt" src="img/2017/2017-09-30-GDriveLinkTo.PNG" title="A Link in Google Drive"&gt;&lt;/p&gt;
&lt;p&gt;It also has more features, but the double-click feature is the only one I need so far.&lt;/p&gt;
&lt;p&gt;Thanks a lot, &lt;a href="https://github.com/ntxcode" target="_blank"&gt;ntxDev&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The End&lt;/p&gt;</content><category term="#googledrive"></category><category term="#chrome"></category><category term="#desktop"></category></entry><entry><title>Using Pelican Themes</title><link href="https://rasor.github.io/using-pelican-themes.html" rel="alternate"></link><published>2017-09-30T11:00:00+02:00</published><updated>2017-09-30T15:00:00+02:00</updated><author><name>rasor</name></author><id>tag:rasor.github.io,2017-09-30:/using-pelican-themes.html</id><summary type="html">&lt;p&gt;This blog is part of a serie &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="https://rasor.github.io/using-pelican-blog-on-github-pages.html"&gt;Using Pelican blog on Github pages&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rasor.github.io/using-pelican-themes.html"&gt;Using Pelican Themes&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;Installation - Plugins and Themes&lt;/h2&gt;
&lt;p&gt;Plugins and Themes are two seperate repos being used by some themes.
To be able to reach them from &lt;code&gt;pelicanconf.py&lt;/code&gt; is best to clone them to place with an …&lt;/p&gt;</summary><content type="html">&lt;p&gt;This blog is part of a serie &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="https://rasor.github.io/using-pelican-blog-on-github-pages.html"&gt;Using Pelican blog on Github pages&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rasor.github.io/using-pelican-themes.html"&gt;Using Pelican Themes&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;Installation - Plugins and Themes&lt;/h2&gt;
&lt;p&gt;Plugins and Themes are two seperate repos being used by some themes.
To be able to reach them from &lt;code&gt;pelicanconf.py&lt;/code&gt; is best to clone them to place with an absolute path.&lt;/p&gt;
&lt;p&gt;Since preference will differ I will put part of the path in system-wide environment variables&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;SystemPropertiesAdvanced.exe&lt;/code&gt;&lt;ul&gt;
&lt;li&gt;Environment Variables – System vars – New&lt;/li&gt;
&lt;li&gt;Name: &lt;code&gt;PYTHON_HOME&lt;/code&gt;, Value: &lt;code&gt;C:\ProgramFilesExtra\Python\Python36-32&lt;/code&gt;(Use the path to Python installed in top of previous blog)&lt;/li&gt;
&lt;li&gt;Press OK until all dialogs are closed, so you are sure the variable is stored&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Start new cmd promt (this will load the new environment variable)&lt;/li&gt;
&lt;li&gt;Create a folder for the cloned repos:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;c:
&lt;span class="nb"&gt;cd&lt;/span&gt; %PYTHON_HOME%
md pelican-addon-clones
&lt;span class="nb"&gt;cd&lt;/span&gt; pelican-addon-clones
&lt;span class="c1"&gt;# Download plugins and themes&lt;/span&gt;
git clone --recursive https://github.com/getpelican/pelican-plugins
git clone --recursive https://github.com/getpelican/pelican-themes
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The above repo pelican-themes in some cases is not linked to the latest version of a theme.
So for those themes you can clone them into another folder called pelican-themes-extra.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;c:
&lt;span class="nb"&gt;cd&lt;/span&gt; %PYTHON_HOME%&lt;span class="se"&gt;\p&lt;/span&gt;elican-addon-clones
md pelican-themes-extra
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;Testing Themes&lt;/h1&gt;
&lt;h2&gt;View installed themes and themes you can install&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Which themes are ready to use by Pelican? - By default Pelican is running theme &amp;quot;notmyidea&amp;quot;&lt;/span&gt;
&amp;gt; pelican-themes -v -l
c:&lt;span class="se"&gt;\p&lt;/span&gt;rogramfilesextra&lt;span class="se"&gt;\p&lt;/span&gt;ython&lt;span class="se"&gt;\p&lt;/span&gt;ython36-32&lt;span class="se"&gt;\l&lt;/span&gt;ib&lt;span class="se"&gt;\s&lt;/span&gt;ite-packages&lt;span class="se"&gt;\p&lt;/span&gt;elican&lt;span class="se"&gt;\t&lt;/span&gt;hemes&lt;span class="se"&gt;\n&lt;/span&gt;otmyidea
c:&lt;span class="se"&gt;\p&lt;/span&gt;rogramfilesextra&lt;span class="se"&gt;\p&lt;/span&gt;ython&lt;span class="se"&gt;\p&lt;/span&gt;ython36-32&lt;span class="se"&gt;\l&lt;/span&gt;ib&lt;span class="se"&gt;\s&lt;/span&gt;ite-packages&lt;span class="se"&gt;\p&lt;/span&gt;elican&lt;span class="se"&gt;\t&lt;/span&gt;hemes&lt;span class="se"&gt;\s&lt;/span&gt;imple
&lt;span class="c1"&gt;# Which themes are downloaded and ready to install?&lt;/span&gt;
&amp;gt; start %PYTHON_HOME%&lt;span class="se"&gt;\p&lt;/span&gt;elican-addon-clones&lt;span class="se"&gt;\p&lt;/span&gt;elican-themes&lt;span class="se"&gt;\&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Command &lt;code&gt;start&lt;/code&gt; opens an explorer, so you can go into the folders and see if there are any images showing how the theme looks like.
Or you can checkout &lt;a href="http://www.pelicanthemes.com/" target="_blank"&gt;http://www.pelicanthemes.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I am at time of writing running with theme Flex.&lt;/p&gt;
&lt;p&gt;Ref: Command &lt;a href="http://docs.getpelican.com/en/stable/pelican-themes.html"&gt;pelican-themes&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Switch to Theme "Flex"&lt;/h2&gt;
&lt;h3&gt;Installation&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/alexandrevicenzi/Flex" target="_blank"&gt;Online Instruction&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Flex is one of the themes that is not latest in pelican-themes repo, so I want to download latest from its own repo.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;c:
&lt;span class="nb"&gt;cd&lt;/span&gt; %PYTHON_HOME%&lt;span class="se"&gt;\p&lt;/span&gt;elican-addon-clones&lt;span class="se"&gt;\p&lt;/span&gt;elican-themes-extra
&lt;span class="c1"&gt;# Download Flex&lt;/span&gt;
git clone https://github.com/alexandrevicenzi/Flex
&lt;span class="c1"&gt;# Install Flex into Pelican&lt;/span&gt;
pelican-themes --install C:&lt;span class="se"&gt;\P&lt;/span&gt;rogramFilesExtra&lt;span class="se"&gt;\P&lt;/span&gt;ython&lt;span class="se"&gt;\P&lt;/span&gt;ython36-32&lt;span class="se"&gt;\p&lt;/span&gt;elican-addon-clones&lt;span class="se"&gt;\p&lt;/span&gt;elican-themes-extra&lt;span class="se"&gt;\F&lt;/span&gt;lex --verbose
&lt;span class="c1"&gt;# pelican-themes --remove Flex&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Add to &lt;a href="https://github.com/rasor/rasor.github.io/blob/pelican/pelicanconf.py" target="_blank"&gt;&lt;code&gt;pelicanconf.py&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;THEME&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Flex&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;STATIC_PATHS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;img&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;static&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;FAVICON&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;img/favicon.ico&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;CUSTOM_CSS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;static/custom.css&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Notice: If you don't want to add extra CSS, then &lt;code&gt;THEME&lt;/code&gt; is all you have to set&lt;/li&gt;
&lt;li&gt;In the CUSTOM_CSS I am just adding a shadow to images&lt;/li&gt;
&lt;li&gt;In \content\static\ create a file called &lt;a href="https://github.com/rasor/rasor.github.io/blob/pelican/content/static/custom.css" target="_blank"&gt;&lt;code&gt;custom.css&lt;/code&gt;&lt;/a&gt; with the content:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nt"&gt;img&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;box-shadow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="kt"&gt;px&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="kt"&gt;px&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="kt"&gt;px&lt;/span&gt; &lt;span class="kc"&gt;grey&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;More configurations you can add: &lt;a href="https://github.com/alexandrevicenzi/Flex/wiki/Configuration-example" target="_blank"&gt;https://github.com/alexandrevicenzi/Flex/wiki/Configuration-example&lt;/a&gt;. You probably will want many of them.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Verdict&lt;/h3&gt;
&lt;h4&gt;Pros&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Nice looking&lt;/li&gt;
&lt;li&gt;Images are shown in its full width - and resized to screen width&lt;/li&gt;
&lt;li&gt;Syntax highligting is good&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Cons&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Modified/Updated date is not shown&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Switch to Theme "HTML5 Up striped"&lt;/h2&gt;
&lt;h3&gt;Installation&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/getpelican/pelican-themes/tree/master/pelican-striped-html5up" target="_blank"&gt;Online Instruction&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;c:
&lt;span class="c1"&gt;# Install striped-html5up into Pelican&lt;/span&gt;
pelican-themes --install C:&lt;span class="se"&gt;\P&lt;/span&gt;rogramFilesExtra&lt;span class="se"&gt;\P&lt;/span&gt;ython&lt;span class="se"&gt;\P&lt;/span&gt;ython36-32&lt;span class="se"&gt;\p&lt;/span&gt;elican-addon-clones&lt;span class="se"&gt;\p&lt;/span&gt;elican-themes&lt;span class="se"&gt;\p&lt;/span&gt;elican-striped-html5up --verbose
&lt;span class="c1"&gt;#pelican-themes --remove pelican-striped-html5up&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Plugin &lt;code&gt;neighbors&lt;/code&gt; is needed by the theme&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Add to &lt;code&gt;pythonconf.py&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;PLUGIN_PATHS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;C:\ProgramFilesExtra\Python\Python36-32\pelican-addon-clones\pelican-plugins&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;PLUGINS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;neighbors&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;THEME&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;pelican-striped-html5up&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Verdict&lt;/h3&gt;
&lt;h4&gt;Pros&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Nice looking&lt;/li&gt;
&lt;li&gt;Images are shown in its full width&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Cons&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;It does not have any syntax coding and block around code&lt;/li&gt;
&lt;li&gt;It is missing links to categories and tags links&lt;/li&gt;
&lt;li&gt;Links in the left black sidemenu are not hooked to content from publishconf or other&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;Extending Themes&lt;/h1&gt;
&lt;p&gt;I extended theme "Flex" so it shows Modified date.&lt;/p&gt;
&lt;p&gt;The workflow for updating a theme can be:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Edit the theme in its local repo&lt;/li&gt;
&lt;li&gt;Remove the theme from Pelican&lt;/li&gt;
&lt;li&gt;Re-intall the theme to Pelican&lt;/li&gt;
&lt;li&gt;Build your output and see the change&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;1. Edit Theme&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Goto the root of your theme folder and open the theme in your favorite editor. In this case I edit Flex in VS Code&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;c:
&lt;span class="nb"&gt;cd&lt;/span&gt; %PYHON_HOME%&lt;span class="se"&gt;\p&lt;/span&gt;elican-addon-clones&lt;span class="se"&gt;\p&lt;/span&gt;elican-themes-extra&lt;span class="se"&gt;\F&lt;/span&gt;lex
&lt;span class="c1"&gt;# start VS Code&lt;/span&gt;
code .
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;On each blog post I want to add the &lt;code&gt;Modified&lt;/code&gt; field below the publish date. Add to &lt;a href="https://github.com/alexandrevicenzi/Flex/blob/master/templates/article.html" target="_blank"&gt;&lt;code&gt;templates\article.html&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;      &lt;span class="c"&gt;&amp;lt;!-- Inside p-tag contining when=article.locale_date --&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;br&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      {% if article.modified %}
        Updated: {{ article.modified |strftime(DEFAULT_DATE_FORMAT) }}
      {% endif %}
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Before you re-install the theme you should also goto your Pelican project and make sure you have &lt;code&gt;DEFAULT_DATE_FORMAT&lt;/code&gt; set to the same format as &lt;code&gt;locale_date&lt;/code&gt;. In &lt;code&gt;pelicanconf.py&lt;/code&gt; you could do it like this&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;DEFAULT_LANG&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;en&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;DEFAULT_DATE_FORMAT&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;%B &lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s1"&gt;, %Y&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;DATE_FORMATS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;en&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;DEFAULT_DATE_FORMAT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;2. Remove Theme from Pelican&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Easiest way to remove a theme from Pelican is to delete the folder where it is installed into&lt;/span&gt;
start %PYTHON_HOME%&lt;span class="se"&gt;\l&lt;/span&gt;ib&lt;span class="se"&gt;\s&lt;/span&gt;ite-packages&lt;span class="se"&gt;\p&lt;/span&gt;elican&lt;span class="se"&gt;\t&lt;/span&gt;hemes
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;3. Install Theme to Pelican&lt;/h3&gt;
&lt;p&gt;See "Switch to Theme" above.&lt;/p&gt;
&lt;h3&gt;4. Build and see output&lt;/h3&gt;
&lt;p&gt;See "Day to day Workflow" in &lt;a href="https://rasor.github.io/using-pelican-blog-on-github-pages.html" target="_blank"&gt;previous&lt;/a&gt; blog.&lt;/p&gt;
&lt;h1&gt;Links&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.pelicanthemes.com/" target="_blank"&gt;http://www.pelicanthemes.com/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/getpelican/pelican-themes" target="_blank"&gt;https://github.com/getpelican/pelican-themes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://docs.getpelican.com/en/stable/pelican-themes.html" target="_blank"&gt;http://docs.getpelican.com/en/stable/pelican-themes.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://media.readthedocs.org/css/sphinx_rtd_theme.css" target="_blank"&gt;https://media.readthedocs.org/css/sphinx_rtd_theme.css&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://pygments.org/languages/" target="_blank"&gt;http://pygments.org/languages/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/getpelican/pelican-plugins" target="_blank"&gt;https://github.com/getpelican/pelican-plugins&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.fullstackpython.com/blog/generating-static-websites-pelican-jinja2-markdown.html" target="_blank"&gt;https://www.fullstackpython.com/blog/generating-static-websites-pelican-jinja2-markdown.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Some Pelican Themes I looked at&lt;ul&gt;
&lt;li&gt;Days &lt;a href="https://github.com/getpelican/pelican-themes/tree/master/pelican-bootstrap3" target="_blank"&gt;https://github.com/getpelican/pelican-themes/tree/master/pelican-bootstrap3&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;6M &lt;a href="https://github.com/getpelican/pelican-themes/tree/master/pelican-striped-html5up" target="_blank"&gt;https://github.com/getpelican/pelican-themes/tree/master/pelican-striped-html5up&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;10M &lt;a href="https://github.com/alexandrevicenzi/Flex/tree/5bc235cf579cb03bcc8f54b6029ff74493a0cb44" target="_blank"&gt;https://github.com/alexandrevicenzi/Flex/tree/5bc235cf579cb03bcc8f54b6029ff74493a0cb44&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2Y &lt;a href="https://github.com/Parbhat/pelican-blue/tree/1dda054242f9267f4bd49891b022ac41c9ecfbe8" target="_blank"&gt;https://github.com/Parbhat/pelican-blue/tree/1dda054242f9267f4bd49891b022ac41c9ecfbe8&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2Y &lt;a href="https://github.com/jody-frankowski/blue-penguin/tree/c5e23e7753367b5beacce87b732cd1567c4818f9" target="_blank"&gt;https://github.com/jody-frankowski/blue-penguin/tree/c5e23e7753367b5beacce87b732cd1567c4818f9&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;3Y &lt;a href="https://github.com/nasskach/pelican-blueidea/tree/8f11c0e3b4b8e9ef45d1243b0175db91b7b42ba8" target="_blank"&gt;https://github.com/nasskach/pelican-blueidea/tree/8f11c0e3b4b8e9ef45d1243b0175db91b7b42ba8&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Images &lt;a href="https://unsplash.com/" target="_blank"&gt;https://unsplash.com/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The End&lt;/p&gt;</content><category term="#blog"></category><category term="#pelican"></category><category term="#themes"></category><category term="#cms"></category><category term="#install"></category></entry><entry><title>Ngx: Template for Visual Studio 2017</title><link href="https://rasor.github.io/ngx-template-for-visual-studio-2017.html" rel="alternate"></link><published>2017-09-24T17:00:00+02:00</published><updated>2017-11-05T14:00:00+01:00</updated><author><name>rasor</name></author><id>tag:rasor.github.io,2017-09-24:/ngx-template-for-visual-studio-2017.html</id><summary type="html">&lt;p&gt;At my work all web developers are getting an Angular 4 course.
But there are a couple of issues with that.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;When you work with ngx in Visual Studio code you get a &lt;code&gt;.gitnore&lt;/code&gt; file from the Angular CLI to take care of what not to commit to GIT.
Since …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;At my work all web developers are getting an Angular 4 course.
But there are a couple of issues with that.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;When you work with ngx in Visual Studio code you get a &lt;code&gt;.gitnore&lt;/code&gt; file from the Angular CLI to take care of what not to commit to GIT.
Since we are not yet using GIT at work (but TFS), then TFS don't know what to checkin.&lt;/li&gt;
&lt;li&gt;Since the develpers feel more comfortable with VS 2017, then we also have a chance to get control of files to Checkin with a &lt;code&gt;.csproj&lt;/code&gt; file.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So HowTo import a Angular CLI project into VS 2017 on Windows?&lt;/p&gt;
&lt;p&gt;Luckily there is a &lt;code&gt;.vsix&lt;/code&gt; for that: &lt;a href="https://marketplace.visualstudio.com/items?itemName=AndreyFomin.AngularCLIProjectTemplate" target="_blank"&gt;Angular CLI Project Template&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Installation&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Optionally install &lt;a href="https://rasor.github.io/using-nvm-for-windows-and-yarn.html" target="_blank"&gt;Nvm for Windows&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Install &lt;a href="https://www.visualstudio.com/vs/community/" target="_blank"&gt;VS 2017&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;Include web development including TypeScript&lt;/li&gt;
&lt;li&gt;Framework ASP.NET Core 1.1.2&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Node 6.9.0 or higher (&lt;code&gt;node -v&lt;/code&gt;) - Should come with VS&lt;/li&gt;
&lt;li&gt;Npm 3 or higher (&lt;code&gt;npm -v&lt;/code&gt;) - Should come with VS&lt;/li&gt;
&lt;li&gt;&lt;a href="https://git-scm.com/download/win" target="_blank"&gt;Git for Windows&lt;/a&gt; (&lt;code&gt;git -version&lt;/code&gt;) - Should come with VS &lt;/li&gt;
&lt;li&gt;Install latest &lt;a href="https://www.npmjs.com/package/@angular/cli/tutorial" target="_blank"&gt;Angular CLI&lt;/a&gt; (&lt;code&gt;ng version&lt;/code&gt;)
** Note: The CLI you install will be the one that is used for creating Ng SPA&lt;/li&gt;
&lt;li&gt;Exit VisualStudio&lt;/li&gt;
&lt;li&gt;Install &lt;a href="https://marketplace.visualstudio.com/items?itemName=AndreyFomin.AngularCLIProjectTemplate" target="_blank"&gt;Angular CLI Project Template&lt;/a&gt; by executing the &lt;code&gt;.vsix&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Ready-Set-Go&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Start VisualStudio&lt;/li&gt;
&lt;li&gt;New - Project - Other Languages - TypeScript - Angular CLI Application - Name: &lt;YourNgAppName&gt;
** Note: You can also do New - Item into an existing .NET Core project - &lt;a href="https://github.com/damienbod/angular-auth-oidc-client"&gt;details&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="New Angular CLI Project in Visual Studio 2017" src="img/2017/2017-09-24-NewAngularCLIProject.PNG" title="New Angular CLI Project in Visual Studio 2017"&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;In the project options choises select both if you are in doubt&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="Angular CLI Project options" src="img/2017/2017-09-24-AngularCLIProjectOptions.PNG" title="Angular CLI Project options"&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Installing the npm packages takes a long time. I prefer to skip that step and do it manually from a command prompt, where I feel I better can see what is going on, if something fails&lt;ul&gt;
&lt;li&gt;Open a command prompt and CD into the root of your Angular project&lt;/li&gt;
&lt;li&gt;&lt;code&gt;npm install&lt;/code&gt; # install all the node_modules found in package.json&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Now start the app with F5&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;VS 2017 will read .\properties\launchsettings.json&lt;ul&gt;
&lt;li&gt;If you started IIS Express, then VS will start dotnet.exe on &lt;a href="http://localhost:58162/"&gt;http://localhost:58162/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;If you started [yourapp], then VS will start dotnet.exe on &lt;a href="http://localhost:58163/"&gt;http://localhost:58163/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="F5 startup 1" src="img/2017/2017-09-24-F5Startup1.PNG" title="F5 startup 1"&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;In both cases Angular CLI will serve you app after buiding it with the Angular CLI on &lt;a href="http://localhost:4200/"&gt;http://localhost:4200/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="F5 startup 2" src="img/2017/2017-09-24-F5Startup2.PNG" title="F5 startup 2"&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;This is very good news. Why? Because it does not matter what webserver or editor you are using.
But the best of is that you use standard node.js deployment methods, so you can deploy your app anywhere. You can use standard npm or yarn managers without having to do a lot of strange Visual Studio configuration.&lt;/li&gt;
&lt;li&gt;You can now stop F5 debugging.&lt;/li&gt;
&lt;li&gt;Instead start a webserver manually from a command prompt (in the root of your project) with &lt;code&gt;ng serve&lt;/code&gt;
Now you can see that it is Angular CLI (via .angular-cli.json) that in both cases uses webpack to build packages (via \src\tsconfig.app.json) to serve once again on &lt;a href="http://localhost:4200/"&gt;http://localhost:4200/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Press Ctrl-C to stop the webserver&lt;/li&gt;
&lt;li&gt;Checkin your code using your favorite VCS (e.g. TFS or GIT)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Links&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.microsoft.com/en-us/aspnet/core/client-side/spa-services"&gt;SSR with .NET Core&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.npmjs.com/package/@angular/cli/" target="_blank"&gt;@angular/cli&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://angular.io/guide/visual-studio-2015" target="_blank"&gt;Visual Studio 2015 QuickStart&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The End&lt;/p&gt;</content><category term="#npm"></category><category term="#ngx"></category><category term="#typescript"></category><category term="#visualstudio"></category><category term="#tfs"></category></entry><entry><title>Using Pelican blog on Github pages</title><link href="https://rasor.github.io/using-pelican-blog-on-github-pages.html" rel="alternate"></link><published>2017-09-23T20:20:00+02:00</published><updated>2017-11-26T21:00:00+01:00</updated><author><name>rasor</name></author><id>tag:rasor.github.io,2017-09-23:/using-pelican-blog-on-github-pages.html</id><summary type="html">&lt;p&gt;This blog is part of a serie &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="https://rasor.github.io/using-pelican-blog-on-github-pages.html"&gt;Using Pelican blog on Github pages&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rasor.github.io/using-pelican-themes.html"&gt;Using Pelican Themes&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I had some reasons for moving a blog from Wordpress to GitHubPages. You can read about reason, pro and cons &lt;a href="https://rasor.github.io/welcome-to-my-pelican-blog-on-github-pages.html" target="_blank"&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;In this blog I setup a &lt;a href="http://docs.getpelican.com/en/stable/quickstart.html" target="_blank"&gt;Pelican blog site&lt;/a&gt; from Windows and host …&lt;/p&gt;</summary><content type="html">&lt;p&gt;This blog is part of a serie &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="https://rasor.github.io/using-pelican-blog-on-github-pages.html"&gt;Using Pelican blog on Github pages&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rasor.github.io/using-pelican-themes.html"&gt;Using Pelican Themes&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I had some reasons for moving a blog from Wordpress to GitHubPages. You can read about reason, pro and cons &lt;a href="https://rasor.github.io/welcome-to-my-pelican-blog-on-github-pages.html" target="_blank"&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;In this blog I setup a &lt;a href="http://docs.getpelican.com/en/stable/quickstart.html" target="_blank"&gt;Pelican blog site&lt;/a&gt; from Windows and host it on &lt;a href="https://pages.github.com/" target="_blank"&gt;GitHub Pages&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;HowTo&lt;/h2&gt;
&lt;h3&gt;Installation - Prerequisites&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Install &lt;a href="https://www.python.org/downloads/" target="_blank"&gt;Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Create an account at &lt;a href="https://github.com"&gt;https://github.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;On Windows: Install &lt;a href="https://git-scm.com/download/win" target="_blank"&gt;Git for Windows&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Installation - Pelican&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;As admin:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;pip install pelican markdown&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Create a folder for the Pelican source&lt;ul&gt;
&lt;li&gt;&lt;code&gt;MD username.github.io&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;CD username.github.io&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Create a pelican site following &lt;a href="http://docs.getpelican.com/en/stable/quickstart.html"&gt;http://docs.getpelican.com/en/stable/quickstart.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pelican-quickstart&lt;/code&gt;&lt;ul&gt;
&lt;li&gt;Do you want to specify URL prefix? Answer https://username.github.io&lt;/li&gt;
&lt;li&gt;Do you want to upload using xxx? Answer N untill the xxx = GitHub Pages&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Create some content&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Create a blog e.g &lt;code&gt;~/content/yourcategoryno1/myfirstblog.md&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Preview content&lt;ul&gt;
&lt;li&gt;&lt;code&gt;pelican content&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;&lt;code&gt;cd output&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;python -m pelican.server&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Browse to  &lt;a href="http://localhost:8000/"&gt;http://localhost:8000/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;On Windows - in root create a file called &lt;a href="https://github.com/rasor/rasor.github.io/blob/pelican/serve.bat" target="_blank"&gt;serve.bat&lt;/a&gt; with the content:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pelican content
&lt;span class="nb"&gt;cd&lt;/span&gt; output
start &lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;http://localhost:8000/&amp;quot;&lt;/span&gt;
python -m pelican.server
REM Ctrl-C to quit
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;... then you can pre-view your content with &lt;code&gt;.\serve&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Images&lt;ul&gt;
&lt;li&gt;In &lt;code&gt;pelicanconf.py&lt;/code&gt; add line &lt;code&gt;STATIC_PATHS = ['img', 'pdf']&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Create an image e.g &lt;code&gt;~/content/img/hello.png&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Link to the file with
&lt;code&gt;![picture alt](img/hello.png "Mickey Mouse")&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Links&lt;ul&gt;
&lt;li&gt;External: &lt;code&gt;[link desc](https://blog.getpelican.com/){:target="_blank"}&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Internal: &lt;code&gt;[link desc]({filename}/yourcategoryno1/myfirstblog.md){:target="_blank"}&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Optionally edit more settings in &lt;code&gt;pelicanconf.py&lt;/code&gt; - see &lt;a href="http://docs.getpelican.com/en/3.7.1/settings.html"&gt;http://docs.getpelican.com/en/3.7.1/settings.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;add a &lt;code&gt;favicon.ico&lt;/code&gt; to root&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Prepare GIT as VersionControlSystem&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Fetch &lt;code&gt;.gitignore&lt;/code&gt;from &lt;a href="https://github.com/getpelican/pelican-blog/blob/master/.gitignore"&gt;https://github.com/getpelican/pelican-blog/blob/master/.gitignore&lt;/a&gt; - save it to root&lt;/li&gt;
&lt;li&gt;Create a &lt;code&gt;~/README.md&lt;/code&gt; - just for the source branch&lt;/li&gt;
&lt;li&gt;Install publish tool&lt;ul&gt;
&lt;li&gt;&lt;code&gt;pip install ghp-import&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Create local git repo&lt;ul&gt;
&lt;li&gt;&lt;code&gt;git init&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Create a remote repo via github.com for your github page build in GitHub. Call it &lt;code&gt;username.github.io&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Connect to repo and print remote repo&lt;ul&gt;
&lt;li&gt;&lt;code&gt;git remote add origin https://github.com/username/username.github.io.git&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git remote -v&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Create new branch for the pelican source&lt;ul&gt;
&lt;li&gt;&lt;code&gt;git checkout -b pelican&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Deploy you blog&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;(Foreach) Commit source&lt;ul&gt;
&lt;li&gt;&lt;code&gt;git add .&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git commit -a -m "Initial commit"&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git push -u origin pelican&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;(Foreach) &lt;a href="http://docs.getpelican.com/en/3.7.1/tips.html#publishing-to-github" target="_blank"&gt;Publish&lt;/a&gt; build to master then publish&lt;ul&gt;
&lt;li&gt;&lt;code&gt;pelican content -o output -s pelicanconf.py&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ghp-import output -r origin -b master&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git push origin master&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git checkout pelican&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;On Windows - in root create a file called &lt;a href="https://github.com/rasor/rasor.github.io/blob/pelican/publish.bat" target="_blank"&gt;publish.bat&lt;/a&gt; with the content:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git add .
git commit -a -m %1
git push -u origin pelican
pelican content -o output -s pelicanconf.py
ghp-import output -r origin -b master
git push origin master
git checkout pelican
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;... then you can publish by &lt;code&gt;.\publish "some comment"&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Editor&lt;/h2&gt;
&lt;p&gt;I'm using Visual Studio Code, that has a nice Markdown preview - probably a plugin.
But you could use NotePad for that matter.&lt;/p&gt;
&lt;p&gt;&lt;img alt="picture alt" src="img/2017/2017-09-23-PelicanInVSCode.PNG" title="Pelican In VS Code"&gt;&lt;/p&gt;
&lt;h2&gt;Day to day Workflow&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Open VS Code&lt;/li&gt;
&lt;li&gt;Open VS Code terminal 1 - T1&lt;ul&gt;
&lt;li&gt;&lt;code&gt;.\serve&lt;/code&gt; &lt;a href="https://github.com/rasor/rasor.github.io/blob/pelican/serve.bat"&gt;#code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;A browser opens and navigates to http://localhost:8000&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Add a new &lt;code&gt;.md&lt;/code&gt; file in \content\ and add some content&lt;/li&gt;
&lt;li&gt;Open VS Code terminal 2 - T2&lt;ul&gt;
&lt;li&gt;&lt;code&gt;.\build&lt;/code&gt; &lt;a href="https://github.com/rasor/rasor.github.io/blob/pelican/build.bat"&gt;#code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;F5 - refresh browser to see the new content&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.\publish "file new.md published"&lt;/code&gt; &lt;a href="https://github.com/rasor/rasor.github.io/blob/pelican/publish.bat"&gt;#code&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Browse to https://username.github.io&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Tip: If I don't want to publish a file I rename it to &lt;code&gt;.txt&lt;/code&gt; - then it won't be published before I rename it back to &lt;code&gt;.md&lt;/code&gt;.&lt;br&gt;
It will still end up on your host - GitHubPages, so don't keep secrests in there.&lt;br&gt;
If you want it published for review without being included in any content lists, then you can &lt;a href="http://docs.getpelican.com/en/3.6.3/content.html#publishing-drafts"&gt;publish the document as draft&lt;/a&gt; with &lt;code&gt;Status: draft&lt;/code&gt;.&lt;br&gt;
Then the document will be put in the &lt;code&gt;/drafts/&lt;/code&gt; folder. &lt;/p&gt;
&lt;p&gt;Continue in &lt;a href="https://rasor.github.io/using-pelican-themes.html" target="_blank"&gt;Using Pelican Themes&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3&gt;Links&lt;/h3&gt;
&lt;h4&gt;GitHub pages&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://pages.github.com/" target="_blank"&gt;Create a repo for your github page site&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://jlord.us/forkngo/" target="_blank"&gt;Fork-n-Go&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Pelican&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://docs.getpelican.com/en/stable/publish.html" target="_blank"&gt;http://docs.getpelican.com/en/stable/publish.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://docs.getpelican.com/en/3.6.3/content.html#linking-to-static-files" target="_blank"&gt;http://docs.getpelican.com/en/3.6.3/content.html#linking-to-static-files&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://docs.getpelican.com/en/stable/faq.html" target="_blank"&gt;http://docs.getpelican.com/en/stable/faq.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.getpelican.com/" target="_blank"&gt;https://blog.getpelican.com/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://help.github.com/articles/about-supported-custom-domains/" target="_blank"&gt;https://help.github.com/articles/about-supported-custom-domains/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Another &lt;a href="https://www.fullstackpython.com/blog/generating-static-websites-pelican-jinja2-markdown.html" target="_blank"&gt;install Pelican blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Pelican &lt;a href="https://github.com/getpelican/pelican/wiki/Tutorials" target="_blank"&gt;tutorial for deployment&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/getpelican" target="_blank"&gt;Pelican on Twitter&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Markdown&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://stackedit.io/editor" target="_blank"&gt;StackEdit – Editor&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tchapi/markdown-cheatsheet" target="_blank"&gt;https://github.com/tchapi/markdown-cheatsheet&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://tinker.kotaweaver.com/blog/?p=152" target="_blank"&gt;Syntax highlighting languages&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://pythonhosted.org/Markdown/reference.html" target="_blank"&gt;http://pythonhosted.org/Markdown/reference.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/List_of_XML_and_HTML_character_entity_references" target="_blank"&gt;List of XML and HTML characters&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h5&gt;Other&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://rasor.wordpress.com/" target="_blank"&gt;My old Wordpress blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The End&lt;/p&gt;</content><category term="#blog"></category><category term="#pelican"></category><category term="#githubpages"></category><category term="#cms"></category><category term="#git"></category><category term="#install"></category></entry><entry><title>Welcome to my Pelican blog on Github pages</title><link href="https://rasor.github.io/welcome-to-my-pelican-blog-on-github-pages.html" rel="alternate"></link><published>2017-09-23T20:00:00+02:00</published><updated>2017-09-30T10:00:00+02:00</updated><author><name>rasor</name></author><id>tag:rasor.github.io,2017-09-23:/welcome-to-my-pelican-blog-on-github-pages.html</id><summary type="html">&lt;p&gt;Hi there.&lt;/p&gt;
&lt;p&gt;I have moved. Previously I was living on &lt;a href="https://rasor.wordpress.com/"&gt;https://rasor.wordpress.com/&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;Reason for move&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;I wanted Mardown markup&lt;/li&gt;
&lt;li&gt;I wanted better &lt;a href="http://docs.getpelican.com/en/stable/content.html#syntax-highlighting" target="_blank"&gt;syntax highligting&lt;/a&gt; for code&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Pro and Cons compared to Wordpress&lt;/h2&gt;
&lt;h3&gt;Pros&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;I got an easier way of editing categories and tags&lt;ul&gt;
&lt;li&gt;Categories: In your content folder …&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;Hi there.&lt;/p&gt;
&lt;p&gt;I have moved. Previously I was living on &lt;a href="https://rasor.wordpress.com/"&gt;https://rasor.wordpress.com/&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;Reason for move&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;I wanted Mardown markup&lt;/li&gt;
&lt;li&gt;I wanted better &lt;a href="http://docs.getpelican.com/en/stable/content.html#syntax-highlighting" target="_blank"&gt;syntax highligting&lt;/a&gt; for code&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Pro and Cons compared to Wordpress&lt;/h2&gt;
&lt;h3&gt;Pros&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;I got an easier way of editing categories and tags&lt;ul&gt;
&lt;li&gt;Categories: In your content folder you create a subfolder for each tag and you store your .md file in there.&lt;/li&gt;
&lt;li&gt;Tags: You just write them inside your .md&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;You own your content and have a local copy of it&lt;/li&gt;
&lt;li&gt;Your content is very easy to move to somehwere else, since you have a local copy on your PC&lt;/li&gt;
&lt;li&gt;Updates to a blog has its own field e.g. Modified: 2017-09-24 09:00&lt;/li&gt;
&lt;li&gt;If you have a blog series then it is much easier to add the list of articles in top of all articles inclused, since they are all on your PC and will all be republished&lt;/li&gt;
&lt;li&gt;An &lt;a href="http://docs.getpelican.com/en/stable/importer.html"&gt;importer&lt;/a&gt; exists&lt;/li&gt;
&lt;li&gt;You can customize a theme for your own needs - it is not much hazzle&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Cons&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;No central editing of tags - well that is a releaf, because it was cumbersome to add one, when you in the middle of editing in Wordpress&lt;/li&gt;
&lt;li&gt;No img size editing tool&lt;/li&gt;
&lt;li&gt;You need to be used to work with GIT and a command promt&lt;/li&gt;
&lt;li&gt;Preview of markup is only instantly, if your editor supports it. Same goes for WYSIWIG editor.&lt;/li&gt;
&lt;li&gt;Setting up to be published in GitHupPages was not described well, so I had to create a &lt;a href="https://rasor.github.io/using-pelican-blog-on-github-pages.html"&gt;procedure&lt;/a&gt; myself. I am quite pleased with the workflow now. Not too much hazzle, when you are working with code and a terminal anyway.&lt;/li&gt;
&lt;li&gt;Making links open in a new window with {:target="_blank"} really needs a snippet.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Links&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://rasor.wordpress.com/2017/04/15/markdown-saas-blogs/"&gt;Thinking about moving&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The end&lt;/p&gt;</content><category term="#blog"></category><category term="#pelican"></category><category term="#githubpages"></category><category term="#cms"></category></entry></feed>